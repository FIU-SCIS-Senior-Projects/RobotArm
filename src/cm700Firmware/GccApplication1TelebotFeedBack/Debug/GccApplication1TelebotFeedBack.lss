
GccApplication1TelebotFeedBack.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000210  00800200  00001906  0000199a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001906  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000392  00800410  00800410  00001baa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001baa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000004bb  00000000  00000000  00001cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001cb5  00000000  00000000  00002167  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000088a  00000000  00000000  00003e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000010f3  00000000  00000000  000046a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000314  00000000  00000000  0000579c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007ee  00000000  00000000  00005ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001080  00000000  00000000  0000629e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000731e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
       2:	00 00       	nop
       4:	83 c0       	rjmp	.+262    	; 0x10c <__bad_interrupt>
       6:	00 00       	nop
       8:	81 c0       	rjmp	.+258    	; 0x10c <__bad_interrupt>
       a:	00 00       	nop
       c:	7f c0       	rjmp	.+254    	; 0x10c <__bad_interrupt>
       e:	00 00       	nop
      10:	7d c0       	rjmp	.+250    	; 0x10c <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c0       	rjmp	.+246    	; 0x10c <__bad_interrupt>
      16:	00 00       	nop
      18:	79 c0       	rjmp	.+242    	; 0x10c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	77 c0       	rjmp	.+238    	; 0x10c <__bad_interrupt>
      1e:	00 00       	nop
      20:	75 c0       	rjmp	.+234    	; 0x10c <__bad_interrupt>
      22:	00 00       	nop
      24:	73 c0       	rjmp	.+230    	; 0x10c <__bad_interrupt>
      26:	00 00       	nop
      28:	71 c0       	rjmp	.+226    	; 0x10c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6f c0       	rjmp	.+222    	; 0x10c <__bad_interrupt>
      2e:	00 00       	nop
      30:	6d c0       	rjmp	.+218    	; 0x10c <__bad_interrupt>
      32:	00 00       	nop
      34:	6b c0       	rjmp	.+214    	; 0x10c <__bad_interrupt>
      36:	00 00       	nop
      38:	69 c0       	rjmp	.+210    	; 0x10c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	67 c0       	rjmp	.+206    	; 0x10c <__bad_interrupt>
      3e:	00 00       	nop
      40:	65 c0       	rjmp	.+202    	; 0x10c <__bad_interrupt>
      42:	00 00       	nop
      44:	63 c0       	rjmp	.+198    	; 0x10c <__bad_interrupt>
      46:	00 00       	nop
      48:	61 c0       	rjmp	.+194    	; 0x10c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5f c0       	rjmp	.+190    	; 0x10c <__bad_interrupt>
      4e:	00 00       	nop
      50:	5d c0       	rjmp	.+186    	; 0x10c <__bad_interrupt>
      52:	00 00       	nop
      54:	5b c0       	rjmp	.+182    	; 0x10c <__bad_interrupt>
      56:	00 00       	nop
      58:	59 c0       	rjmp	.+178    	; 0x10c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	57 c0       	rjmp	.+174    	; 0x10c <__bad_interrupt>
      5e:	00 00       	nop
      60:	55 c0       	rjmp	.+170    	; 0x10c <__bad_interrupt>
      62:	00 00       	nop
      64:	10 c4       	rjmp	.+2080   	; 0x886 <__vector_25>
      66:	00 00       	nop
      68:	51 c0       	rjmp	.+162    	; 0x10c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4f c0       	rjmp	.+158    	; 0x10c <__bad_interrupt>
      6e:	00 00       	nop
      70:	4d c0       	rjmp	.+154    	; 0x10c <__bad_interrupt>
      72:	00 00       	nop
      74:	4b c0       	rjmp	.+150    	; 0x10c <__bad_interrupt>
      76:	00 00       	nop
      78:	49 c0       	rjmp	.+146    	; 0x10c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	47 c0       	rjmp	.+142    	; 0x10c <__bad_interrupt>
      7e:	00 00       	nop
      80:	45 c0       	rjmp	.+138    	; 0x10c <__bad_interrupt>
      82:	00 00       	nop
      84:	43 c0       	rjmp	.+134    	; 0x10c <__bad_interrupt>
      86:	00 00       	nop
      88:	41 c0       	rjmp	.+130    	; 0x10c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3f c0       	rjmp	.+126    	; 0x10c <__bad_interrupt>
      8e:	00 00       	nop
      90:	ff c4       	rjmp	.+2558   	; 0xa90 <__vector_36>
      92:	00 00       	nop
      94:	3b c0       	rjmp	.+118    	; 0x10c <__bad_interrupt>
      96:	00 00       	nop
      98:	39 c0       	rjmp	.+114    	; 0x10c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	37 c0       	rjmp	.+110    	; 0x10c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	35 c0       	rjmp	.+106    	; 0x10c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	33 c0       	rjmp	.+102    	; 0x10c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	31 c0       	rjmp	.+98     	; 0x10c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	2f c0       	rjmp	.+94     	; 0x10c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	2d c0       	rjmp	.+90     	; 0x10c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	2b c0       	rjmp	.+86     	; 0x10c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	29 c0       	rjmp	.+82     	; 0x10c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	27 c0       	rjmp	.+78     	; 0x10c <__bad_interrupt>
      be:	00 00       	nop
      c0:	25 c0       	rjmp	.+74     	; 0x10c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	23 c0       	rjmp	.+70     	; 0x10c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	21 c0       	rjmp	.+66     	; 0x10c <__bad_interrupt>
	...

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d1 e2       	ldi	r29, 0x21	; 33
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
      dc:	14 e0       	ldi	r17, 0x04	; 4
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	e6 e0       	ldi	r30, 0x06	; 6
      e4:	f9 e1       	ldi	r31, 0x19	; 25
      e6:	00 e0       	ldi	r16, 0x00	; 0
      e8:	0b bf       	out	0x3b, r16	; 59
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
      ec:	07 90       	elpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	a0 31       	cpi	r26, 0x10	; 16
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
      f6:	27 e0       	ldi	r18, 0x07	; 7
      f8:	a0 e1       	ldi	r26, 0x10	; 16
      fa:	b4 e0       	ldi	r27, 0x04	; 4
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a2 3a       	cpi	r26, 0xA2	; 162
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
     106:	84 d5       	rcall	.+2824   	; 0xc10 <main>
     108:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <_exit>

0000010c <__bad_interrupt>:
     10c:	79 cf       	rjmp	.-270    	; 0x0 <__vectors>

0000010e <dxl_get_result>:
     10e:	80 91 00 02 	lds	r24, 0x0200
     112:	90 91 01 02 	lds	r25, 0x0201
     116:	08 95       	ret

00000118 <dxl_set_txpacket_id>:
     118:	80 93 12 04 	sts	0x0412, r24
     11c:	08 95       	ret

0000011e <dxl_set_txpacket_instruction>:
     11e:	80 93 14 04 	sts	0x0414, r24
     122:	08 95       	ret

00000124 <dxl_set_txpacket_parameter>:
     124:	fc 01       	movw	r30, r24
     126:	e0 5f       	subi	r30, 0xF0	; 240
     128:	fb 4f       	sbci	r31, 0xFB	; 251
     12a:	65 83       	std	Z+5, r22	; 0x05
     12c:	08 95       	ret

0000012e <dxl_set_txpacket_length>:
     12e:	80 93 13 04 	sts	0x0413, r24
     132:	08 95       	ret

00000134 <dxl_get_rxpacket_error>:
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	90 91 b4 04 	lds	r25, 0x04B4
     13c:	98 23       	and	r25, r24
     13e:	11 f0       	breq	.+4      	; 0x144 <dxl_get_rxpacket_error+0x10>
     140:	21 e0       	ldi	r18, 0x01	; 1
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	c9 01       	movw	r24, r18
     146:	08 95       	ret

00000148 <dxl_get_rxpacket_length>:
     148:	80 91 b3 04 	lds	r24, 0x04B3
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	08 95       	ret

00000150 <dxl_get_rxpacket_parameter>:
     150:	fc 01       	movw	r30, r24
     152:	e0 55       	subi	r30, 0x50	; 80
     154:	fb 4f       	sbci	r31, 0xFB	; 251
     156:	85 81       	ldd	r24, Z+5	; 0x05
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <dxl_makeword>:
     15c:	36 2f       	mov	r19, r22
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	28 0f       	add	r18, r24
     162:	39 1f       	adc	r19, r25
     164:	c9 01       	movw	r24, r18
     166:	08 95       	ret

00000168 <dxl_get_lowbyte>:
     168:	28 2f       	mov	r18, r24
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	c9 01       	movw	r24, r18
     16e:	08 95       	ret

00000170 <dxl_get_highbyte>:
     170:	80 70       	andi	r24, 0x00	; 0
     172:	89 2f       	mov	r24, r25
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	08 95       	ret

00000178 <dxl_rx_packet>:
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	80 91 f8 04 	lds	r24, 0x04F8
     184:	90 91 f9 04 	lds	r25, 0x04F9
     188:	89 2b       	or	r24, r25
     18a:	09 f4       	brne	.+2      	; 0x18e <dxl_rx_packet+0x16>
     18c:	b8 c0       	rjmp	.+368    	; 0x2fe <dxl_rx_packet+0x186>
     18e:	80 91 12 04 	lds	r24, 0x0412
     192:	8e 3f       	cpi	r24, 0xFE	; 254
     194:	09 f4       	brne	.+2      	; 0x198 <dxl_rx_packet+0x20>
     196:	a9 c0       	rjmp	.+338    	; 0x2ea <dxl_rx_packet+0x172>
     198:	80 91 00 02 	lds	r24, 0x0200
     19c:	90 91 01 02 	lds	r25, 0x0201
     1a0:	89 2b       	or	r24, r25
     1a2:	29 f4       	brne	.+10     	; 0x1ae <dxl_rx_packet+0x36>
     1a4:	10 92 f7 04 	sts	0x04F7, r1
     1a8:	86 e0       	ldi	r24, 0x06	; 6
     1aa:	80 93 f6 04 	sts	0x04F6, r24
     1ae:	80 91 f7 04 	lds	r24, 0x04F7
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	60 91 f6 04 	lds	r22, 0x04F6
     1b8:	70 e0       	ldi	r23, 0x00	; 0
     1ba:	68 1b       	sub	r22, r24
     1bc:	79 0b       	sbc	r23, r25
     1be:	80 55       	subi	r24, 0x50	; 80
     1c0:	9b 4f       	sbci	r25, 0xFB	; 251
     1c2:	36 d3       	rcall	.+1644   	; 0x830 <dxl_hal_rx>
     1c4:	90 91 f7 04 	lds	r25, 0x04F7
     1c8:	98 0f       	add	r25, r24
     1ca:	90 93 f7 04 	sts	0x04F7, r25
     1ce:	80 91 f6 04 	lds	r24, 0x04F6
     1d2:	98 17       	cp	r25, r24
     1d4:	18 f4       	brcc	.+6      	; 0x1dc <dxl_rx_packet+0x64>
     1d6:	42 d2       	rcall	.+1156   	; 0x65c <dxl_hal_timeout>
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	71 f0       	breq	.+28     	; 0x1f8 <dxl_rx_packet+0x80>
     1dc:	70 91 f7 04 	lds	r23, 0x04F7
     1e0:	47 2f       	mov	r20, r23
     1e2:	50 e0       	ldi	r21, 0x00	; 0
     1e4:	da 01       	movw	r26, r20
     1e6:	11 97       	sbiw	r26, 0x01	; 1
     1e8:	8a 01       	movw	r16, r20
     1ea:	02 50       	subi	r16, 0x02	; 2
     1ec:	10 40       	sbci	r17, 0x00	; 0
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	ed 01       	movw	r28, r26
     1f2:	c0 55       	subi	r28, 0x50	; 80
     1f4:	db 4f       	sbci	r29, 0xFB	; 251
     1f6:	18 c0       	rjmp	.+48     	; 0x228 <dxl_rx_packet+0xb0>
     1f8:	80 91 f7 04 	lds	r24, 0x04F7
     1fc:	88 23       	and	r24, r24
     1fe:	09 f0       	breq	.+2      	; 0x202 <dxl_rx_packet+0x8a>
     200:	71 c0       	rjmp	.+226    	; 0x2e4 <dxl_rx_packet+0x16c>
     202:	86 e0       	ldi	r24, 0x06	; 6
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	73 c0       	rjmp	.+230    	; 0x2ee <dxl_rx_packet+0x176>
     208:	f9 01       	movw	r30, r18
     20a:	e0 55       	subi	r30, 0x50	; 80
     20c:	fb 4f       	sbci	r31, 0xFB	; 251
     20e:	80 81       	ld	r24, Z
     210:	8f 3f       	cpi	r24, 0xFF	; 255
     212:	19 f4       	brne	.+6      	; 0x21a <dxl_rx_packet+0xa2>
     214:	81 81       	ldd	r24, Z+1	; 0x01
     216:	8f 3f       	cpi	r24, 0xFF	; 255
     218:	61 f0       	breq	.+24     	; 0x232 <dxl_rx_packet+0xba>
     21a:	20 17       	cp	r18, r16
     21c:	31 07       	cpc	r19, r17
     21e:	19 f4       	brne	.+6      	; 0x226 <dxl_rx_packet+0xae>
     220:	88 81       	ld	r24, Y
     222:	8f 3f       	cpi	r24, 0xFF	; 255
     224:	31 f0       	breq	.+12     	; 0x232 <dxl_rx_packet+0xba>
     226:	6f 5f       	subi	r22, 0xFF	; 255
     228:	26 2f       	mov	r18, r22
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	2a 17       	cp	r18, r26
     22e:	3b 07       	cpc	r19, r27
     230:	5c f3       	brlt	.-42     	; 0x208 <dxl_rx_packet+0x90>
     232:	66 23       	and	r22, r22
     234:	a1 f0       	breq	.+40     	; 0x25e <dxl_rx_packet+0xe6>
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	42 1b       	sub	r20, r18
     23a:	53 0b       	sbc	r21, r19
     23c:	08 c0       	rjmp	.+16     	; 0x24e <dxl_rx_packet+0xd6>
     23e:	e0 55       	subi	r30, 0x50	; 80
     240:	fb 4f       	sbci	r31, 0xFB	; 251
     242:	df 01       	movw	r26, r30
     244:	a2 0f       	add	r26, r18
     246:	b3 1f       	adc	r27, r19
     248:	8c 91       	ld	r24, X
     24a:	80 83       	st	Z, r24
     24c:	9f 5f       	subi	r25, 0xFF	; 255
     24e:	e9 2f       	mov	r30, r25
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	e4 17       	cp	r30, r20
     254:	f5 07       	cpc	r31, r21
     256:	9c f3       	brlt	.-26     	; 0x23e <dxl_rx_packet+0xc6>
     258:	76 1b       	sub	r23, r22
     25a:	70 93 f7 04 	sts	0x04F7, r23
     25e:	20 91 f7 04 	lds	r18, 0x04F7
     262:	80 91 f6 04 	lds	r24, 0x04F6
     266:	28 17       	cp	r18, r24
     268:	28 f1       	brcs	.+74     	; 0x2b4 <dxl_rx_packet+0x13c>
     26a:	90 91 12 04 	lds	r25, 0x0412
     26e:	80 91 b2 04 	lds	r24, 0x04B2
     272:	98 17       	cp	r25, r24
     274:	b9 f5       	brne	.+110    	; 0x2e4 <dxl_rx_packet+0x16c>
     276:	60 91 b3 04 	lds	r22, 0x04B3
     27a:	6c 5f       	subi	r22, 0xFC	; 252
     27c:	60 93 f6 04 	sts	0x04F6, r22
     280:	26 17       	cp	r18, r22
     282:	88 f4       	brcc	.+34     	; 0x2a6 <dxl_rx_packet+0x12e>
     284:	82 2f       	mov	r24, r18
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	68 1b       	sub	r22, r24
     28c:	79 0b       	sbc	r23, r25
     28e:	80 55       	subi	r24, 0x50	; 80
     290:	9b 4f       	sbci	r25, 0xFB	; 251
     292:	ce d2       	rcall	.+1436   	; 0x830 <dxl_hal_rx>
     294:	90 91 f7 04 	lds	r25, 0x04F7
     298:	98 0f       	add	r25, r24
     29a:	90 93 f7 04 	sts	0x04F7, r25
     29e:	80 91 f6 04 	lds	r24, 0x04F6
     2a2:	98 17       	cp	r25, r24
     2a4:	38 f0       	brcs	.+14     	; 0x2b4 <dxl_rx_packet+0x13c>
     2a6:	80 91 b3 04 	lds	r24, 0x04B3
     2aa:	a8 2f       	mov	r26, r24
     2ac:	b0 e0       	ldi	r27, 0x00	; 0
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0c c0       	rjmp	.+24     	; 0x2cc <dxl_rx_packet+0x154>
     2b4:	85 e0       	ldi	r24, 0x05	; 5
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	90 93 01 02 	sts	0x0201, r25
     2bc:	80 93 00 02 	sts	0x0200, r24
     2c0:	1e c0       	rjmp	.+60     	; 0x2fe <dxl_rx_packet+0x186>
     2c2:	e0 55       	subi	r30, 0x50	; 80
     2c4:	fb 4f       	sbci	r31, 0xFB	; 251
     2c6:	82 81       	ldd	r24, Z+2	; 0x02
     2c8:	98 0f       	add	r25, r24
     2ca:	2f 5f       	subi	r18, 0xFF	; 255
     2cc:	e2 2f       	mov	r30, r18
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ae 17       	cp	r26, r30
     2d2:	bf 07       	cpc	r27, r31
     2d4:	b4 f7       	brge	.-20     	; 0x2c2 <dxl_rx_packet+0x14a>
     2d6:	a0 55       	subi	r26, 0x50	; 80
     2d8:	bb 4f       	sbci	r27, 0xFB	; 251
     2da:	90 95       	com	r25
     2dc:	13 96       	adiw	r26, 0x03	; 3
     2de:	8c 91       	ld	r24, X
     2e0:	89 17       	cp	r24, r25
     2e2:	19 f0       	breq	.+6      	; 0x2ea <dxl_rx_packet+0x172>
     2e4:	87 e0       	ldi	r24, 0x07	; 7
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <dxl_rx_packet+0x176>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	90 93 01 02 	sts	0x0201, r25
     2f2:	80 93 00 02 	sts	0x0200, r24
     2f6:	10 92 f9 04 	sts	0x04F9, r1
     2fa:	10 92 f8 04 	sts	0x04F8, r1
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	1f 91       	pop	r17
     304:	0f 91       	pop	r16
     306:	08 95       	ret

00000308 <dxl_tx_packet>:
     308:	1f 93       	push	r17
     30a:	80 91 f8 04 	lds	r24, 0x04F8
     30e:	90 91 f9 04 	lds	r25, 0x04F9
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	09 f4       	brne	.+2      	; 0x318 <dxl_tx_packet+0x10>
     316:	5d c0       	rjmp	.+186    	; 0x3d2 <dxl_tx_packet+0xca>
     318:	81 e0       	ldi	r24, 0x01	; 1
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	90 93 f9 04 	sts	0x04F9, r25
     320:	80 93 f8 04 	sts	0x04F8, r24
     324:	80 91 13 04 	lds	r24, 0x0413
     328:	89 39       	cpi	r24, 0x99	; 153
     32a:	40 f4       	brcc	.+16     	; 0x33c <dxl_tx_packet+0x34>
     32c:	90 91 14 04 	lds	r25, 0x0414
     330:	89 2f       	mov	r24, r25
     332:	81 50       	subi	r24, 0x01	; 1
     334:	86 30       	cpi	r24, 0x06	; 6
     336:	28 f0       	brcs	.+10     	; 0x342 <dxl_tx_packet+0x3a>
     338:	93 38       	cpi	r25, 0x83	; 131
     33a:	19 f0       	breq	.+6      	; 0x342 <dxl_tx_packet+0x3a>
     33c:	84 e0       	ldi	r24, 0x04	; 4
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	2f c0       	rjmp	.+94     	; 0x3a0 <dxl_tx_packet+0x98>
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	80 93 10 04 	sts	0x0410, r24
     348:	80 93 11 04 	sts	0x0411, r24
     34c:	80 91 13 04 	lds	r24, 0x0413
     350:	a8 2f       	mov	r26, r24
     352:	b0 e0       	ldi	r27, 0x00	; 0
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	05 c0       	rjmp	.+10     	; 0x364 <dxl_tx_packet+0x5c>
     35a:	e0 5f       	subi	r30, 0xF0	; 240
     35c:	fb 4f       	sbci	r31, 0xFB	; 251
     35e:	82 81       	ldd	r24, Z+2	; 0x02
     360:	98 0f       	add	r25, r24
     362:	2f 5f       	subi	r18, 0xFF	; 255
     364:	e2 2f       	mov	r30, r18
     366:	f0 e0       	ldi	r31, 0x00	; 0
     368:	ae 17       	cp	r26, r30
     36a:	bf 07       	cpc	r27, r31
     36c:	b4 f7       	brge	.-20     	; 0x35a <dxl_tx_packet+0x52>
     36e:	a0 5f       	subi	r26, 0xF0	; 240
     370:	bb 4f       	sbci	r27, 0xFB	; 251
     372:	90 95       	com	r25
     374:	13 96       	adiw	r26, 0x03	; 3
     376:	9c 93       	st	X, r25
     378:	80 91 00 02 	lds	r24, 0x0200
     37c:	90 91 01 02 	lds	r25, 0x0201
     380:	06 97       	sbiw	r24, 0x06	; 6
     382:	02 97       	sbiw	r24, 0x02	; 2
     384:	08 f4       	brcc	.+2      	; 0x388 <dxl_tx_packet+0x80>
     386:	30 d1       	rcall	.+608    	; 0x5e8 <dxl_hal_clear>
     388:	10 91 13 04 	lds	r17, 0x0413
     38c:	1c 5f       	subi	r17, 0xFC	; 252
     38e:	80 e1       	ldi	r24, 0x10	; 16
     390:	94 e0       	ldi	r25, 0x04	; 4
     392:	61 2f       	mov	r22, r17
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	2d d1       	rcall	.+602    	; 0x5f2 <dxl_hal_tx>
     398:	18 17       	cp	r17, r24
     39a:	59 f0       	breq	.+22     	; 0x3b2 <dxl_tx_packet+0xaa>
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	90 93 01 02 	sts	0x0201, r25
     3a4:	80 93 00 02 	sts	0x0200, r24
     3a8:	10 92 f9 04 	sts	0x04F9, r1
     3ac:	10 92 f8 04 	sts	0x04F8, r1
     3b0:	10 c0       	rjmp	.+32     	; 0x3d2 <dxl_tx_packet+0xca>
     3b2:	80 91 14 04 	lds	r24, 0x0414
     3b6:	82 30       	cpi	r24, 0x02	; 2
     3b8:	29 f4       	brne	.+10     	; 0x3c4 <dxl_tx_packet+0xbc>
     3ba:	80 91 16 04 	lds	r24, 0x0416
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	06 96       	adiw	r24, 0x06	; 6
     3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <dxl_tx_packet+0xc0>
     3c4:	86 e0       	ldi	r24, 0x06	; 6
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	38 d1       	rcall	.+624    	; 0x63a <dxl_hal_set_timeout>
     3ca:	10 92 01 02 	sts	0x0201, r1
     3ce:	10 92 00 02 	sts	0x0200, r1
     3d2:	1f 91       	pop	r17
     3d4:	08 95       	ret

000003d6 <dxl_txrx_packet>:
     3d6:	98 df       	rcall	.-208    	; 0x308 <dxl_tx_packet>
     3d8:	80 91 00 02 	lds	r24, 0x0200
     3dc:	90 91 01 02 	lds	r25, 0x0201
     3e0:	89 2b       	or	r24, r25
     3e2:	39 f4       	brne	.+14     	; 0x3f2 <dxl_txrx_packet+0x1c>
     3e4:	c9 de       	rcall	.-622    	; 0x178 <dxl_rx_packet>
     3e6:	80 91 00 02 	lds	r24, 0x0200
     3ea:	90 91 01 02 	lds	r25, 0x0201
     3ee:	05 97       	sbiw	r24, 0x05	; 5
     3f0:	c9 f3       	breq	.-14     	; 0x3e4 <dxl_txrx_packet+0xe>
     3f2:	08 95       	ret

000003f4 <dxl_write_word>:
     3f4:	28 2f       	mov	r18, r24
     3f6:	80 91 f8 04 	lds	r24, 0x04F8
     3fa:	90 91 f9 04 	lds	r25, 0x04F9
     3fe:	89 2b       	or	r24, r25
     400:	91 f4       	brne	.+36     	; 0x426 <dxl_write_word+0x32>
     402:	20 93 12 04 	sts	0x0412, r18
     406:	83 e0       	ldi	r24, 0x03	; 3
     408:	80 93 14 04 	sts	0x0414, r24
     40c:	60 93 15 04 	sts	0x0415, r22
     410:	ca 01       	movw	r24, r20
     412:	40 93 16 04 	sts	0x0416, r20
     416:	80 70       	andi	r24, 0x00	; 0
     418:	90 93 17 04 	sts	0x0417, r25
     41c:	85 e0       	ldi	r24, 0x05	; 5
     41e:	80 93 13 04 	sts	0x0413, r24
     422:	d9 cf       	rjmp	.-78     	; 0x3d6 <dxl_txrx_packet>
     424:	08 95       	ret
     426:	ff cf       	rjmp	.-2      	; 0x426 <dxl_write_word+0x32>

00000428 <dxl_read_word>:
     428:	28 2f       	mov	r18, r24
     42a:	80 91 f8 04 	lds	r24, 0x04F8
     42e:	90 91 f9 04 	lds	r25, 0x04F9
     432:	89 2b       	or	r24, r25
     434:	b1 f4       	brne	.+44     	; 0x462 <dxl_read_word+0x3a>
     436:	20 93 12 04 	sts	0x0412, r18
     43a:	82 e0       	ldi	r24, 0x02	; 2
     43c:	80 93 14 04 	sts	0x0414, r24
     440:	60 93 15 04 	sts	0x0415, r22
     444:	80 93 16 04 	sts	0x0416, r24
     448:	84 e0       	ldi	r24, 0x04	; 4
     44a:	80 93 13 04 	sts	0x0413, r24
     44e:	c3 df       	rcall	.-122    	; 0x3d6 <dxl_txrx_packet>
     450:	30 91 b6 04 	lds	r19, 0x04B6
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	80 91 b5 04 	lds	r24, 0x04B5
     45a:	28 0f       	add	r18, r24
     45c:	31 1d       	adc	r19, r1
     45e:	c9 01       	movw	r24, r18
     460:	08 95       	ret
     462:	ff cf       	rjmp	.-2      	; 0x462 <dxl_read_word+0x3a>

00000464 <dxl_write_byte>:
     464:	28 2f       	mov	r18, r24
     466:	80 91 f8 04 	lds	r24, 0x04F8
     46a:	90 91 f9 04 	lds	r25, 0x04F9
     46e:	89 2b       	or	r24, r25
     470:	71 f4       	brne	.+28     	; 0x48e <dxl_write_byte+0x2a>
     472:	20 93 12 04 	sts	0x0412, r18
     476:	83 e0       	ldi	r24, 0x03	; 3
     478:	80 93 14 04 	sts	0x0414, r24
     47c:	60 93 15 04 	sts	0x0415, r22
     480:	40 93 16 04 	sts	0x0416, r20
     484:	84 e0       	ldi	r24, 0x04	; 4
     486:	80 93 13 04 	sts	0x0413, r24
     48a:	a5 cf       	rjmp	.-182    	; 0x3d6 <dxl_txrx_packet>
     48c:	08 95       	ret
     48e:	ff cf       	rjmp	.-2      	; 0x48e <dxl_write_byte+0x2a>

00000490 <dxl_read_byte>:
     490:	28 2f       	mov	r18, r24
     492:	80 91 f8 04 	lds	r24, 0x04F8
     496:	90 91 f9 04 	lds	r25, 0x04F9
     49a:	89 2b       	or	r24, r25
     49c:	91 f4       	brne	.+36     	; 0x4c2 <dxl_read_byte+0x32>
     49e:	20 93 12 04 	sts	0x0412, r18
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	80 93 14 04 	sts	0x0414, r24
     4a8:	60 93 15 04 	sts	0x0415, r22
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	80 93 16 04 	sts	0x0416, r24
     4b2:	84 e0       	ldi	r24, 0x04	; 4
     4b4:	80 93 13 04 	sts	0x0413, r24
     4b8:	8e df       	rcall	.-228    	; 0x3d6 <dxl_txrx_packet>
     4ba:	80 91 b5 04 	lds	r24, 0x04B5
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	08 95       	ret
     4c2:	ff cf       	rjmp	.-2      	; 0x4c2 <dxl_read_byte+0x32>

000004c4 <dxl_ping>:
     4c4:	28 2f       	mov	r18, r24
     4c6:	80 91 f8 04 	lds	r24, 0x04F8
     4ca:	90 91 f9 04 	lds	r25, 0x04F9
     4ce:	89 2b       	or	r24, r25
     4d0:	51 f4       	brne	.+20     	; 0x4e6 <dxl_ping+0x22>
     4d2:	20 93 12 04 	sts	0x0412, r18
     4d6:	81 e0       	ldi	r24, 0x01	; 1
     4d8:	80 93 14 04 	sts	0x0414, r24
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	80 93 13 04 	sts	0x0413, r24
     4e2:	79 cf       	rjmp	.-270    	; 0x3d6 <dxl_txrx_packet>
     4e4:	08 95       	ret
     4e6:	ff cf       	rjmp	.-2      	; 0x4e6 <dxl_ping+0x22>

000004e8 <dxl_terminate>:
     4e8:	7e c0       	rjmp	.+252    	; 0x5e6 <dxl_hal_close>
     4ea:	08 95       	ret

000004ec <dxl_initialize>:
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	8c 01       	movw	r16, r24
     4f2:	6f 5f       	subi	r22, 0xFF	; 255
     4f4:	7f 4f       	sbci	r23, 0xFF	; 255
     4f6:	88 27       	eor	r24, r24
     4f8:	77 fd       	sbrc	r23, 7
     4fa:	80 95       	com	r24
     4fc:	98 2f       	mov	r25, r24
     4fe:	2d d6       	rcall	.+3162   	; 0x115a <__floatsisf>
     500:	9b 01       	movw	r18, r22
     502:	ac 01       	movw	r20, r24
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	74 e2       	ldi	r23, 0x24	; 36
     508:	84 ef       	ldi	r24, 0xF4	; 244
     50a:	99 e4       	ldi	r25, 0x49	; 73
     50c:	90 d5       	rcall	.+2848   	; 0x102e <__divsf3>
     50e:	ab 01       	movw	r20, r22
     510:	bc 01       	movw	r22, r24
     512:	c8 01       	movw	r24, r16
     514:	15 d0       	rcall	.+42     	; 0x540 <dxl_hal_open>
     516:	89 2b       	or	r24, r25
     518:	19 f4       	brne	.+6      	; 0x520 <dxl_initialize+0x34>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	0c c0       	rjmp	.+24     	; 0x538 <dxl_initialize+0x4c>
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 01 02 	sts	0x0201, r25
     528:	80 93 00 02 	sts	0x0200, r24
     52c:	10 92 f9 04 	sts	0x04F9, r1
     530:	10 92 f8 04 	sts	0x04F8, r1
     534:	21 e0       	ldi	r18, 0x01	; 1
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	c9 01       	movw	r24, r18
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	08 95       	ret

00000540 <dxl_hal_open>:
     540:	ef 92       	push	r14
     542:	ff 92       	push	r15
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	7a 01       	movw	r14, r20
     54a:	8b 01       	movw	r16, r22
     54c:	82 e4       	ldi	r24, 0x42	; 66
     54e:	80 93 c0 00 	sts	0x00C0, r24
     552:	88 e9       	ldi	r24, 0x98	; 152
     554:	80 93 c1 00 	sts	0x00C1, r24
     558:	86 e0       	ldi	r24, 0x06	; 6
     55a:	80 93 c2 00 	sts	0x00C2, r24
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	74 e2       	ldi	r23, 0x24	; 36
     562:	84 ef       	ldi	r24, 0xF4	; 244
     564:	99 e4       	ldi	r25, 0x49	; 73
     566:	a8 01       	movw	r20, r16
     568:	97 01       	movw	r18, r14
     56a:	61 d5       	rcall	.+2754   	; 0x102e <__divsf3>
     56c:	c8 d5       	rcall	.+2960   	; 0x10fe <__fixunssfsi>
     56e:	61 50       	subi	r22, 0x01	; 1
     570:	70 40       	sbci	r23, 0x00	; 0
     572:	70 93 c5 00 	sts	0x00C5, r23
     576:	60 93 c4 00 	sts	0x00C4, r22
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	74 e2       	ldi	r23, 0x24	; 36
     57e:	84 e7       	ldi	r24, 0x74	; 116
     580:	99 e4       	ldi	r25, 0x49	; 73
     582:	a8 01       	movw	r20, r16
     584:	97 01       	movw	r18, r14
     586:	53 d5       	rcall	.+2726   	; 0x102e <__divsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	40 e4       	ldi	r20, 0x40	; 64
     58e:	51 e4       	ldi	r21, 0x41	; 65
     590:	98 d6       	rcall	.+3376   	; 0x12c2 <__mulsf3>
     592:	60 93 90 07 	sts	0x0790, r22
     596:	70 93 91 07 	sts	0x0791, r23
     59a:	80 93 92 07 	sts	0x0792, r24
     59e:	90 93 93 07 	sts	0x0793, r25
     5a2:	20 91 90 07 	lds	r18, 0x0790
     5a6:	30 91 91 07 	lds	r19, 0x0791
     5aa:	40 91 92 07 	lds	r20, 0x0792
     5ae:	50 91 93 07 	lds	r21, 0x0793
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	8a e7       	ldi	r24, 0x7A	; 122
     5b8:	93 e4       	ldi	r25, 0x43	; 67
     5ba:	39 d5       	rcall	.+2674   	; 0x102e <__divsf3>
     5bc:	a0 d5       	rcall	.+2880   	; 0x10fe <__fixunssfsi>
     5be:	70 93 8f 07 	sts	0x078F, r23
     5c2:	60 93 8e 07 	sts	0x078E, r22
     5c6:	72 98       	cbi	0x0e, 2	; 14
     5c8:	73 9a       	sbi	0x0e, 3	; 14
     5ca:	8f ef       	ldi	r24, 0xFF	; 255
     5cc:	80 93 c6 00 	sts	0x00C6, r24
     5d0:	10 92 fa 05 	sts	0x05FA, r1
     5d4:	10 92 fb 05 	sts	0x05FB, r1
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	08 95       	ret

000005e6 <dxl_hal_close>:
     5e6:	08 95       	ret

000005e8 <dxl_hal_clear>:
     5e8:	80 91 fb 05 	lds	r24, 0x05FB
     5ec:	80 93 fa 05 	sts	0x05FA, r24
     5f0:	08 95       	ret

000005f2 <dxl_hal_tx>:
     5f2:	ac 01       	movw	r20, r24
     5f4:	f8 94       	cli
     5f6:	73 98       	cbi	0x0e, 3	; 14
     5f8:	72 9a       	sbi	0x0e, 2	; 14
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	11 c0       	rjmp	.+34     	; 0x622 <dxl_hal_tx+0x30>
     600:	80 91 c0 00 	lds	r24, 0x00C0
     604:	85 ff       	sbrs	r24, 5
     606:	fc cf       	rjmp	.-8      	; 0x600 <dxl_hal_tx+0xe>
     608:	80 91 c0 00 	lds	r24, 0x00C0
     60c:	80 64       	ori	r24, 0x40	; 64
     60e:	80 93 c0 00 	sts	0x00C0, r24
     612:	fa 01       	movw	r30, r20
     614:	e2 0f       	add	r30, r18
     616:	f3 1f       	adc	r31, r19
     618:	80 81       	ld	r24, Z
     61a:	80 93 c6 00 	sts	0x00C6, r24
     61e:	2f 5f       	subi	r18, 0xFF	; 255
     620:	3f 4f       	sbci	r19, 0xFF	; 255
     622:	26 17       	cp	r18, r22
     624:	37 07       	cpc	r19, r23
     626:	64 f3       	brlt	.-40     	; 0x600 <dxl_hal_tx+0xe>
     628:	80 91 c0 00 	lds	r24, 0x00C0
     62c:	86 ff       	sbrs	r24, 6
     62e:	fc cf       	rjmp	.-8      	; 0x628 <dxl_hal_tx+0x36>
     630:	72 98       	cbi	0x0e, 2	; 14
     632:	73 9a       	sbi	0x0e, 3	; 14
     634:	78 94       	sei
     636:	c9 01       	movw	r24, r18
     638:	08 95       	ret

0000063a <dxl_hal_set_timeout>:
     63a:	10 92 97 07 	sts	0x0797, r1
     63e:	10 92 96 07 	sts	0x0796, r1
     642:	20 91 8e 07 	lds	r18, 0x078E
     646:	30 91 8f 07 	lds	r19, 0x078F
     64a:	26 5f       	subi	r18, 0xF6	; 246
     64c:	3f 4f       	sbci	r19, 0xFF	; 255
     64e:	28 0f       	add	r18, r24
     650:	39 1f       	adc	r19, r25
     652:	30 93 95 07 	sts	0x0795, r19
     656:	20 93 94 07 	sts	0x0794, r18
     65a:	08 95       	ret

0000065c <dxl_hal_timeout>:
     65c:	af 92       	push	r10
     65e:	bf 92       	push	r11
     660:	cf 92       	push	r12
     662:	df 92       	push	r13
     664:	ef 92       	push	r14
     666:	ff 92       	push	r15
     668:	0f 93       	push	r16
     66a:	1f 93       	push	r17
     66c:	80 91 96 07 	lds	r24, 0x0796
     670:	90 91 97 07 	lds	r25, 0x0797
     674:	01 96       	adiw	r24, 0x01	; 1
     676:	90 93 97 07 	sts	0x0797, r25
     67a:	80 93 96 07 	sts	0x0796, r24
     67e:	20 91 96 07 	lds	r18, 0x0796
     682:	30 91 97 07 	lds	r19, 0x0797
     686:	80 91 94 07 	lds	r24, 0x0794
     68a:	90 91 95 07 	lds	r25, 0x0795
     68e:	82 17       	cp	r24, r18
     690:	93 07       	cpc	r25, r19
     692:	18 f4       	brcc	.+6      	; 0x69a <dxl_hal_timeout+0x3e>
     694:	21 e0       	ldi	r18, 0x01	; 1
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	69 c0       	rjmp	.+210    	; 0x76c <dxl_hal_timeout+0x110>
     69a:	a0 90 90 07 	lds	r10, 0x0790
     69e:	b0 90 91 07 	lds	r11, 0x0791
     6a2:	c0 90 92 07 	lds	r12, 0x0792
     6a6:	d0 90 93 07 	lds	r13, 0x0793
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     6aa:	c6 01       	movw	r24, r12
     6ac:	b5 01       	movw	r22, r10
     6ae:	2b ea       	ldi	r18, 0xAB	; 171
     6b0:	3a ea       	ldi	r19, 0xAA	; 170
     6b2:	4a ea       	ldi	r20, 0xAA	; 170
     6b4:	50 e4       	ldi	r21, 0x40	; 64
     6b6:	05 d6       	rcall	.+3082   	; 0x12c2 <__mulsf3>
     6b8:	7b 01       	movw	r14, r22
     6ba:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	40 e8       	ldi	r20, 0x80	; 128
     6c2:	5f e3       	ldi	r21, 0x3F	; 63
     6c4:	b0 d4       	rcall	.+2400   	; 0x1026 <__cmpsf2>
     6c6:	88 23       	and	r24, r24
     6c8:	14 f4       	brge	.+4      	; 0x6ce <dxl_hal_timeout+0x72>
     6ca:	61 e0       	ldi	r22, 0x01	; 1
     6cc:	4b c0       	rjmp	.+150    	; 0x764 <dxl_hal_timeout+0x108>
		__ticks = 1;
	else if (__tmp > 255)
     6ce:	c8 01       	movw	r24, r16
     6d0:	b7 01       	movw	r22, r14
     6d2:	20 e0       	ldi	r18, 0x00	; 0
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	4f e7       	ldi	r20, 0x7F	; 127
     6d8:	53 e4       	ldi	r21, 0x43	; 67
     6da:	ef d5       	rcall	.+3038   	; 0x12ba <__gesf2>
     6dc:	18 16       	cp	r1, r24
     6de:	0c f0       	brlt	.+2      	; 0x6e2 <dxl_hal_timeout+0x86>
     6e0:	3e c0       	rjmp	.+124    	; 0x75e <dxl_hal_timeout+0x102>
	{
		_delay_ms(__us / 1000.0);
     6e2:	c6 01       	movw	r24, r12
     6e4:	b5 01       	movw	r22, r10
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	4a e7       	ldi	r20, 0x7A	; 122
     6ec:	54 e4       	ldi	r21, 0x44	; 68
     6ee:	9f d4       	rcall	.+2366   	; 0x102e <__divsf3>
     6f0:	5b 01       	movw	r10, r22
     6f2:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	4a e7       	ldi	r20, 0x7A	; 122
     6fa:	55 e4       	ldi	r21, 0x45	; 69
     6fc:	e2 d5       	rcall	.+3012   	; 0x12c2 <__mulsf3>
     6fe:	7b 01       	movw	r14, r22
     700:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	40 e8       	ldi	r20, 0x80	; 128
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	8d d4       	rcall	.+2330   	; 0x1026 <__cmpsf2>
     70c:	88 23       	and	r24, r24
     70e:	1c f4       	brge	.+6      	; 0x716 <dxl_hal_timeout+0xba>
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	20 c0       	rjmp	.+64     	; 0x756 <dxl_hal_timeout+0xfa>
		__ticks = 1;
	else if (__tmp > 65535)
     716:	c8 01       	movw	r24, r16
     718:	b7 01       	movw	r22, r14
     71a:	20 e0       	ldi	r18, 0x00	; 0
     71c:	3f ef       	ldi	r19, 0xFF	; 255
     71e:	4f e7       	ldi	r20, 0x7F	; 127
     720:	57 e4       	ldi	r21, 0x47	; 71
     722:	cb d5       	rcall	.+2966   	; 0x12ba <__gesf2>
     724:	18 16       	cp	r1, r24
     726:	a4 f4       	brge	.+40     	; 0x750 <dxl_hal_timeout+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     728:	c6 01       	movw	r24, r12
     72a:	b5 01       	movw	r22, r10
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e2       	ldi	r20, 0x20	; 32
     732:	51 e4       	ldi	r21, 0x41	; 65
     734:	c6 d5       	rcall	.+2956   	; 0x12c2 <__mulsf3>
     736:	e3 d4       	rcall	.+2502   	; 0x10fe <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     738:	80 e9       	ldi	r24, 0x90	; 144
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	05 c0       	rjmp	.+10     	; 0x748 <dxl_hal_timeout+0xec>
     73e:	fc 01       	movw	r30, r24
     740:	31 97       	sbiw	r30, 0x01	; 1
     742:	f1 f7       	brne	.-4      	; 0x740 <dxl_hal_timeout+0xe4>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     744:	61 50       	subi	r22, 0x01	; 1
     746:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     748:	61 15       	cp	r22, r1
     74a:	71 05       	cpc	r23, r1
     74c:	c1 f7       	brne	.-16     	; 0x73e <dxl_hal_timeout+0xe2>
     74e:	0c c0       	rjmp	.+24     	; 0x768 <dxl_hal_timeout+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     750:	c8 01       	movw	r24, r16
     752:	b7 01       	movw	r22, r14
     754:	d4 d4       	rcall	.+2472   	; 0x10fe <__fixunssfsi>
     756:	cb 01       	movw	r24, r22
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	f1 f7       	brne	.-4      	; 0x758 <dxl_hal_timeout+0xfc>
     75c:	05 c0       	rjmp	.+10     	; 0x768 <dxl_hal_timeout+0x10c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     75e:	c8 01       	movw	r24, r16
     760:	b7 01       	movw	r22, r14
     762:	cd d4       	rcall	.+2458   	; 0x10fe <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     764:	6a 95       	dec	r22
     766:	f1 f7       	brne	.-4      	; 0x764 <dxl_hal_timeout+0x108>
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	c9 01       	movw	r24, r18
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	ff 90       	pop	r15
     774:	ef 90       	pop	r14
     776:	df 90       	pop	r13
     778:	cf 90       	pop	r12
     77a:	bf 90       	pop	r11
     77c:	af 90       	pop	r10
     77e:	08 95       	ret

00000780 <dxl_hal_get_qstate>:
     780:	90 91 fa 05 	lds	r25, 0x05FA
     784:	80 91 fb 05 	lds	r24, 0x05FB
     788:	98 17       	cp	r25, r24
     78a:	19 f4       	brne	.+6      	; 0x792 <dxl_hal_get_qstate+0x12>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	17 c0       	rjmp	.+46     	; 0x7c0 <dxl_hal_get_qstate+0x40>
     792:	90 91 fa 05 	lds	r25, 0x05FA
     796:	80 91 fb 05 	lds	r24, 0x05FB
     79a:	98 17       	cp	r25, r24
     79c:	38 f4       	brcc	.+14     	; 0x7ac <dxl_hal_get_qstate+0x2c>
     79e:	80 91 fb 05 	lds	r24, 0x05FB
     7a2:	90 91 fa 05 	lds	r25, 0x05FA
     7a6:	28 2f       	mov	r18, r24
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	08 c0       	rjmp	.+16     	; 0x7bc <dxl_hal_get_qstate+0x3c>
     7ac:	80 91 fb 05 	lds	r24, 0x05FB
     7b0:	90 91 fa 05 	lds	r25, 0x05FA
     7b4:	28 2f       	mov	r18, r24
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	20 50       	subi	r18, 0x00	; 0
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	29 1b       	sub	r18, r25
     7be:	31 09       	sbc	r19, r1
     7c0:	c9 01       	movw	r24, r18
     7c2:	08 95       	ret

000007c4 <dxl_hal_put_queue>:
     7c4:	1f 93       	push	r17
     7c6:	18 2f       	mov	r17, r24
     7c8:	db df       	rcall	.-74     	; 0x780 <dxl_hal_get_qstate>
     7ca:	8f 3f       	cpi	r24, 0xFF	; 255
     7cc:	91 05       	cpc	r25, r1
     7ce:	91 f0       	breq	.+36     	; 0x7f4 <dxl_hal_put_queue+0x30>
     7d0:	e0 91 fb 05 	lds	r30, 0x05FB
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	e6 50       	subi	r30, 0x06	; 6
     7d8:	fb 4f       	sbci	r31, 0xFB	; 251
     7da:	10 83       	st	Z, r17
     7dc:	80 91 fb 05 	lds	r24, 0x05FB
     7e0:	8f 3f       	cpi	r24, 0xFF	; 255
     7e2:	19 f4       	brne	.+6      	; 0x7ea <dxl_hal_put_queue+0x26>
     7e4:	10 92 fb 05 	sts	0x05FB, r1
     7e8:	05 c0       	rjmp	.+10     	; 0x7f4 <dxl_hal_put_queue+0x30>
     7ea:	80 91 fb 05 	lds	r24, 0x05FB
     7ee:	8f 5f       	subi	r24, 0xFF	; 255
     7f0:	80 93 fb 05 	sts	0x05FB, r24
     7f4:	1f 91       	pop	r17
     7f6:	08 95       	ret

000007f8 <dxl_hal_get_queue>:
     7f8:	90 91 fa 05 	lds	r25, 0x05FA
     7fc:	80 91 fb 05 	lds	r24, 0x05FB
     800:	98 17       	cp	r25, r24
     802:	11 f4       	brne	.+4      	; 0x808 <dxl_hal_get_queue+0x10>
     804:	ef ef       	ldi	r30, 0xFF	; 255
     806:	12 c0       	rjmp	.+36     	; 0x82c <dxl_hal_get_queue+0x34>
     808:	e0 91 fa 05 	lds	r30, 0x05FA
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	e6 50       	subi	r30, 0x06	; 6
     810:	fb 4f       	sbci	r31, 0xFB	; 251
     812:	e0 81       	ld	r30, Z
     814:	80 91 fa 05 	lds	r24, 0x05FA
     818:	8f 3f       	cpi	r24, 0xFF	; 255
     81a:	19 f4       	brne	.+6      	; 0x822 <dxl_hal_get_queue+0x2a>
     81c:	10 92 fa 05 	sts	0x05FA, r1
     820:	05 c0       	rjmp	.+10     	; 0x82c <dxl_hal_get_queue+0x34>
     822:	80 91 fa 05 	lds	r24, 0x05FA
     826:	8f 5f       	subi	r24, 0xFF	; 255
     828:	80 93 fa 05 	sts	0x05FA, r24
     82c:	8e 2f       	mov	r24, r30
     82e:	08 95       	ret

00000830 <dxl_hal_rx>:
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	7c 01       	movw	r14, r24
     83e:	eb 01       	movw	r28, r22
     840:	90 91 fa 05 	lds	r25, 0x05FA
     844:	80 91 fb 05 	lds	r24, 0x05FB
     848:	98 17       	cp	r25, r24
     84a:	19 f4       	brne	.+6      	; 0x852 <dxl_hal_rx+0x22>
     84c:	00 e0       	ldi	r16, 0x00	; 0
     84e:	10 e0       	ldi	r17, 0x00	; 0
     850:	12 c0       	rjmp	.+36     	; 0x876 <dxl_hal_rx+0x46>
     852:	96 df       	rcall	.-212    	; 0x780 <dxl_hal_get_qstate>
     854:	8c 01       	movw	r16, r24
     856:	c8 17       	cp	r28, r24
     858:	d9 07       	cpc	r29, r25
     85a:	0c f4       	brge	.+2      	; 0x85e <dxl_hal_rx+0x2e>
     85c:	8e 01       	movw	r16, r28
     85e:	c0 e0       	ldi	r28, 0x00	; 0
     860:	d0 e0       	ldi	r29, 0x00	; 0
     862:	06 c0       	rjmp	.+12     	; 0x870 <dxl_hal_rx+0x40>
     864:	c9 df       	rcall	.-110    	; 0x7f8 <dxl_hal_get_queue>
     866:	f7 01       	movw	r30, r14
     868:	ec 0f       	add	r30, r28
     86a:	fd 1f       	adc	r31, r29
     86c:	80 83       	st	Z, r24
     86e:	21 96       	adiw	r28, 0x01	; 1
     870:	c0 17       	cp	r28, r16
     872:	d1 07       	cpc	r29, r17
     874:	bc f3       	brlt	.-18     	; 0x864 <dxl_hal_rx+0x34>
     876:	c8 01       	movw	r24, r16
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	1f 91       	pop	r17
     87e:	0f 91       	pop	r16
     880:	ff 90       	pop	r15
     882:	ef 90       	pop	r14
     884:	08 95       	ret

00000886 <__vector_25>:
     886:	1f 92       	push	r1
     888:	0f 92       	push	r0
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	0f 92       	push	r0
     88e:	0b b6       	in	r0, 0x3b	; 59
     890:	0f 92       	push	r0
     892:	11 24       	eor	r1, r1
     894:	2f 93       	push	r18
     896:	3f 93       	push	r19
     898:	4f 93       	push	r20
     89a:	5f 93       	push	r21
     89c:	6f 93       	push	r22
     89e:	7f 93       	push	r23
     8a0:	8f 93       	push	r24
     8a2:	9f 93       	push	r25
     8a4:	af 93       	push	r26
     8a6:	bf 93       	push	r27
     8a8:	ef 93       	push	r30
     8aa:	ff 93       	push	r31
     8ac:	80 91 c6 00 	lds	r24, 0x00C6
     8b0:	89 df       	rcall	.-238    	; 0x7c4 <dxl_hal_put_queue>
     8b2:	ff 91       	pop	r31
     8b4:	ef 91       	pop	r30
     8b6:	bf 91       	pop	r27
     8b8:	af 91       	pop	r26
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	7f 91       	pop	r23
     8c0:	6f 91       	pop	r22
     8c2:	5f 91       	pop	r21
     8c4:	4f 91       	pop	r20
     8c6:	3f 91       	pop	r19
     8c8:	2f 91       	pop	r18
     8ca:	0f 90       	pop	r0
     8cc:	0b be       	out	0x3b, r0	; 59
     8ce:	0f 90       	pop	r0
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	0f 90       	pop	r0
     8d4:	1f 90       	pop	r1
     8d6:	18 95       	reti

000008d8 <serial_write>:
     8d8:	ac 01       	movw	r20, r24
     8da:	20 e0       	ldi	r18, 0x00	; 0
     8dc:	30 e0       	ldi	r19, 0x00	; 0
     8de:	0c c0       	rjmp	.+24     	; 0x8f8 <serial_write+0x20>
     8e0:	80 91 c8 00 	lds	r24, 0x00C8
     8e4:	85 ff       	sbrs	r24, 5
     8e6:	fc cf       	rjmp	.-8      	; 0x8e0 <serial_write+0x8>
     8e8:	fa 01       	movw	r30, r20
     8ea:	e2 0f       	add	r30, r18
     8ec:	f3 1f       	adc	r31, r19
     8ee:	80 81       	ld	r24, Z
     8f0:	80 93 ce 00 	sts	0x00CE, r24
     8f4:	2f 5f       	subi	r18, 0xFF	; 255
     8f6:	3f 4f       	sbci	r19, 0xFF	; 255
     8f8:	26 17       	cp	r18, r22
     8fa:	37 07       	cpc	r19, r23
     8fc:	8c f3       	brlt	.-30     	; 0x8e0 <serial_write+0x8>
     8fe:	08 95       	ret

00000900 <serial_read>:
     900:	dc 01       	movw	r26, r24
     902:	90 91 7c 06 	lds	r25, 0x067C
     906:	80 91 7d 06 	lds	r24, 0x067D
     90a:	98 17       	cp	r25, r24
     90c:	11 f4       	brne	.+4      	; 0x912 <serial_read+0x12>
     90e:	80 e0       	ldi	r24, 0x00	; 0
     910:	08 95       	ret
     912:	90 91 7c 06 	lds	r25, 0x067C
     916:	80 91 7d 06 	lds	r24, 0x067D
     91a:	98 17       	cp	r25, r24
     91c:	19 f4       	brne	.+6      	; 0x924 <serial_read+0x24>
     91e:	20 e0       	ldi	r18, 0x00	; 0
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	17 c0       	rjmp	.+46     	; 0x952 <serial_read+0x52>
     924:	90 91 7c 06 	lds	r25, 0x067C
     928:	80 91 7d 06 	lds	r24, 0x067D
     92c:	98 17       	cp	r25, r24
     92e:	38 f4       	brcc	.+14     	; 0x93e <serial_read+0x3e>
     930:	80 91 7d 06 	lds	r24, 0x067D
     934:	90 91 7c 06 	lds	r25, 0x067C
     938:	28 2f       	mov	r18, r24
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	08 c0       	rjmp	.+16     	; 0x94e <serial_read+0x4e>
     93e:	80 91 7d 06 	lds	r24, 0x067D
     942:	90 91 7c 06 	lds	r25, 0x067C
     946:	28 2f       	mov	r18, r24
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	20 58       	subi	r18, 0x80	; 128
     94c:	3f 4f       	sbci	r19, 0xFF	; 255
     94e:	29 1b       	sub	r18, r25
     950:	31 09       	sbc	r19, r1
     952:	a9 01       	movw	r20, r18
     954:	62 17       	cp	r22, r18
     956:	73 07       	cpc	r23, r19
     958:	0c f4       	brge	.+2      	; 0x95c <serial_read+0x5c>
     95a:	ab 01       	movw	r20, r22
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	20 c0       	rjmp	.+64     	; 0x9a2 <serial_read+0xa2>
     962:	90 91 7c 06 	lds	r25, 0x067C
     966:	80 91 7d 06 	lds	r24, 0x067D
     96a:	98 17       	cp	r25, r24
     96c:	11 f4       	brne	.+4      	; 0x972 <serial_read+0x72>
     96e:	9f ef       	ldi	r25, 0xFF	; 255
     970:	12 c0       	rjmp	.+36     	; 0x996 <serial_read+0x96>
     972:	e0 91 7c 06 	lds	r30, 0x067C
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	e4 50       	subi	r30, 0x04	; 4
     97a:	fa 4f       	sbci	r31, 0xFA	; 250
     97c:	90 81       	ld	r25, Z
     97e:	80 91 7c 06 	lds	r24, 0x067C
     982:	8f 37       	cpi	r24, 0x7F	; 127
     984:	19 f4       	brne	.+6      	; 0x98c <serial_read+0x8c>
     986:	10 92 7c 06 	sts	0x067C, r1
     98a:	05 c0       	rjmp	.+10     	; 0x996 <serial_read+0x96>
     98c:	80 91 7c 06 	lds	r24, 0x067C
     990:	8f 5f       	subi	r24, 0xFF	; 255
     992:	80 93 7c 06 	sts	0x067C, r24
     996:	fd 01       	movw	r30, r26
     998:	e2 0f       	add	r30, r18
     99a:	f3 1f       	adc	r31, r19
     99c:	90 83       	st	Z, r25
     99e:	2f 5f       	subi	r18, 0xFF	; 255
     9a0:	3f 4f       	sbci	r19, 0xFF	; 255
     9a2:	24 17       	cp	r18, r20
     9a4:	35 07       	cpc	r19, r21
     9a6:	ec f2       	brlt	.-70     	; 0x962 <serial_read+0x62>
     9a8:	84 2f       	mov	r24, r20
     9aa:	08 95       	ret

000009ac <serial_get_qstate>:
     9ac:	90 91 7c 06 	lds	r25, 0x067C
     9b0:	80 91 7d 06 	lds	r24, 0x067D
     9b4:	98 17       	cp	r25, r24
     9b6:	19 f4       	brne	.+6      	; 0x9be <serial_get_qstate+0x12>
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	17 c0       	rjmp	.+46     	; 0x9ec <serial_get_qstate+0x40>
     9be:	90 91 7c 06 	lds	r25, 0x067C
     9c2:	80 91 7d 06 	lds	r24, 0x067D
     9c6:	98 17       	cp	r25, r24
     9c8:	38 f4       	brcc	.+14     	; 0x9d8 <serial_get_qstate+0x2c>
     9ca:	80 91 7d 06 	lds	r24, 0x067D
     9ce:	90 91 7c 06 	lds	r25, 0x067C
     9d2:	28 2f       	mov	r18, r24
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	08 c0       	rjmp	.+16     	; 0x9e8 <serial_get_qstate+0x3c>
     9d8:	80 91 7d 06 	lds	r24, 0x067D
     9dc:	90 91 7c 06 	lds	r25, 0x067C
     9e0:	28 2f       	mov	r18, r24
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	20 58       	subi	r18, 0x80	; 128
     9e6:	3f 4f       	sbci	r19, 0xFF	; 255
     9e8:	29 1b       	sub	r18, r25
     9ea:	31 09       	sbc	r19, r1
     9ec:	c9 01       	movw	r24, r18
     9ee:	08 95       	ret

000009f0 <serial_put_queue>:
     9f0:	48 2f       	mov	r20, r24
     9f2:	90 91 7c 06 	lds	r25, 0x067C
     9f6:	80 91 7d 06 	lds	r24, 0x067D
     9fa:	98 17       	cp	r25, r24
     9fc:	d1 f0       	breq	.+52     	; 0xa32 <serial_put_queue+0x42>
     9fe:	90 91 7c 06 	lds	r25, 0x067C
     a02:	80 91 7d 06 	lds	r24, 0x067D
     a06:	98 17       	cp	r25, r24
     a08:	38 f4       	brcc	.+14     	; 0xa18 <serial_put_queue+0x28>
     a0a:	80 91 7d 06 	lds	r24, 0x067D
     a0e:	90 91 7c 06 	lds	r25, 0x067C
     a12:	28 2f       	mov	r18, r24
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	08 c0       	rjmp	.+16     	; 0xa28 <serial_put_queue+0x38>
     a18:	80 91 7d 06 	lds	r24, 0x067D
     a1c:	90 91 7c 06 	lds	r25, 0x067C
     a20:	28 2f       	mov	r18, r24
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	20 58       	subi	r18, 0x80	; 128
     a26:	3f 4f       	sbci	r19, 0xFF	; 255
     a28:	29 1b       	sub	r18, r25
     a2a:	31 09       	sbc	r19, r1
     a2c:	2f 37       	cpi	r18, 0x7F	; 127
     a2e:	31 05       	cpc	r19, r1
     a30:	91 f0       	breq	.+36     	; 0xa56 <serial_put_queue+0x66>
     a32:	e0 91 7d 06 	lds	r30, 0x067D
     a36:	f0 e0       	ldi	r31, 0x00	; 0
     a38:	e4 50       	subi	r30, 0x04	; 4
     a3a:	fa 4f       	sbci	r31, 0xFA	; 250
     a3c:	40 83       	st	Z, r20
     a3e:	80 91 7d 06 	lds	r24, 0x067D
     a42:	8f 37       	cpi	r24, 0x7F	; 127
     a44:	19 f4       	brne	.+6      	; 0xa4c <serial_put_queue+0x5c>
     a46:	10 92 7d 06 	sts	0x067D, r1
     a4a:	08 95       	ret
     a4c:	80 91 7d 06 	lds	r24, 0x067D
     a50:	8f 5f       	subi	r24, 0xFF	; 255
     a52:	80 93 7d 06 	sts	0x067D, r24
     a56:	08 95       	ret

00000a58 <serial_get_queue>:
     a58:	90 91 7c 06 	lds	r25, 0x067C
     a5c:	80 91 7d 06 	lds	r24, 0x067D
     a60:	98 17       	cp	r25, r24
     a62:	11 f4       	brne	.+4      	; 0xa68 <serial_get_queue+0x10>
     a64:	ef ef       	ldi	r30, 0xFF	; 255
     a66:	12 c0       	rjmp	.+36     	; 0xa8c <serial_get_queue+0x34>
     a68:	e0 91 7c 06 	lds	r30, 0x067C
     a6c:	f0 e0       	ldi	r31, 0x00	; 0
     a6e:	e4 50       	subi	r30, 0x04	; 4
     a70:	fa 4f       	sbci	r31, 0xFA	; 250
     a72:	e0 81       	ld	r30, Z
     a74:	80 91 7c 06 	lds	r24, 0x067C
     a78:	8f 37       	cpi	r24, 0x7F	; 127
     a7a:	19 f4       	brne	.+6      	; 0xa82 <serial_get_queue+0x2a>
     a7c:	10 92 7c 06 	sts	0x067C, r1
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <serial_get_queue+0x34>
     a82:	80 91 7c 06 	lds	r24, 0x067C
     a86:	8f 5f       	subi	r24, 0xFF	; 255
     a88:	80 93 7c 06 	sts	0x067C, r24
     a8c:	8e 2f       	mov	r24, r30
     a8e:	08 95       	ret

00000a90 <__vector_36>:
     a90:	1f 92       	push	r1
     a92:	0f 92       	push	r0
     a94:	0f b6       	in	r0, 0x3f	; 63
     a96:	0f 92       	push	r0
     a98:	0b b6       	in	r0, 0x3b	; 59
     a9a:	0f 92       	push	r0
     a9c:	11 24       	eor	r1, r1
     a9e:	2f 93       	push	r18
     aa0:	3f 93       	push	r19
     aa2:	4f 93       	push	r20
     aa4:	5f 93       	push	r21
     aa6:	6f 93       	push	r22
     aa8:	7f 93       	push	r23
     aaa:	8f 93       	push	r24
     aac:	9f 93       	push	r25
     aae:	af 93       	push	r26
     ab0:	bf 93       	push	r27
     ab2:	ef 93       	push	r30
     ab4:	ff 93       	push	r31
     ab6:	80 91 ce 00 	lds	r24, 0x00CE
     aba:	9a df       	rcall	.-204    	; 0x9f0 <serial_put_queue>
     abc:	ff 91       	pop	r31
     abe:	ef 91       	pop	r30
     ac0:	bf 91       	pop	r27
     ac2:	af 91       	pop	r26
     ac4:	9f 91       	pop	r25
     ac6:	8f 91       	pop	r24
     ac8:	7f 91       	pop	r23
     aca:	6f 91       	pop	r22
     acc:	5f 91       	pop	r21
     ace:	4f 91       	pop	r20
     ad0:	3f 91       	pop	r19
     ad2:	2f 91       	pop	r18
     ad4:	0f 90       	pop	r0
     ad6:	0b be       	out	0x3b, r0	; 59
     ad8:	0f 90       	pop	r0
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	0f 90       	pop	r0
     ade:	1f 90       	pop	r1
     ae0:	18 95       	reti

00000ae2 <std_putchar>:
     ae2:	df 93       	push	r29
     ae4:	cf 93       	push	r28
     ae6:	0f 92       	push	r0
     ae8:	0f 92       	push	r0
     aea:	cd b7       	in	r28, 0x3d	; 61
     aec:	de b7       	in	r29, 0x3e	; 62
     aee:	98 2f       	mov	r25, r24
     af0:	8a 30       	cpi	r24, 0x0A	; 10
     af2:	99 f4       	brne	.+38     	; 0xb1a <std_putchar+0x38>
     af4:	8d e0       	ldi	r24, 0x0D	; 13
     af6:	89 83       	std	Y+1, r24	; 0x01
     af8:	9a 83       	std	Y+2, r25	; 0x02
     afa:	fe 01       	movw	r30, r28
     afc:	31 96       	adiw	r30, 0x01	; 1
     afe:	9e 01       	movw	r18, r28
     b00:	2d 5f       	subi	r18, 0xFD	; 253
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	80 91 c8 00 	lds	r24, 0x00C8
     b08:	85 ff       	sbrs	r24, 5
     b0a:	fc cf       	rjmp	.-8      	; 0xb04 <std_putchar+0x22>
     b0c:	81 91       	ld	r24, Z+
     b0e:	80 93 ce 00 	sts	0x00CE, r24
     b12:	e2 17       	cp	r30, r18
     b14:	f3 07       	cpc	r31, r19
     b16:	b1 f7       	brne	.-20     	; 0xb04 <std_putchar+0x22>
     b18:	06 c0       	rjmp	.+12     	; 0xb26 <std_putchar+0x44>
     b1a:	80 91 c8 00 	lds	r24, 0x00C8
     b1e:	85 ff       	sbrs	r24, 5
     b20:	fc cf       	rjmp	.-8      	; 0xb1a <std_putchar+0x38>
     b22:	90 93 ce 00 	sts	0x00CE, r25
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0f 90       	pop	r0
     b2c:	0f 90       	pop	r0
     b2e:	cf 91       	pop	r28
     b30:	df 91       	pop	r29
     b32:	08 95       	ret

00000b34 <std_getchar>:
     b34:	90 91 7c 06 	lds	r25, 0x067C
     b38:	80 91 7d 06 	lds	r24, 0x067D
     b3c:	98 17       	cp	r25, r24
     b3e:	d1 f3       	breq	.-12     	; 0xb34 <std_getchar>
     b40:	90 91 7c 06 	lds	r25, 0x067C
     b44:	80 91 7d 06 	lds	r24, 0x067D
     b48:	98 17       	cp	r25, r24
     b4a:	38 f4       	brcc	.+14     	; 0xb5a <std_getchar+0x26>
     b4c:	80 91 7d 06 	lds	r24, 0x067D
     b50:	90 91 7c 06 	lds	r25, 0x067C
     b54:	28 2f       	mov	r18, r24
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	08 c0       	rjmp	.+16     	; 0xb6a <std_getchar+0x36>
     b5a:	80 91 7d 06 	lds	r24, 0x067D
     b5e:	90 91 7c 06 	lds	r25, 0x067C
     b62:	28 2f       	mov	r18, r24
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	20 58       	subi	r18, 0x80	; 128
     b68:	3f 4f       	sbci	r19, 0xFF	; 255
     b6a:	29 1b       	sub	r18, r25
     b6c:	31 09       	sbc	r19, r1
     b6e:	23 2b       	or	r18, r19
     b70:	09 f3       	breq	.-62     	; 0xb34 <std_getchar>
     b72:	90 91 7c 06 	lds	r25, 0x067C
     b76:	80 91 7d 06 	lds	r24, 0x067D
     b7a:	98 17       	cp	r25, r24
     b7c:	11 f4       	brne	.+4      	; 0xb82 <std_getchar+0x4e>
     b7e:	ef ef       	ldi	r30, 0xFF	; 255
     b80:	15 c0       	rjmp	.+42     	; 0xbac <std_getchar+0x78>
     b82:	e0 91 7c 06 	lds	r30, 0x067C
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	e4 50       	subi	r30, 0x04	; 4
     b8a:	fa 4f       	sbci	r31, 0xFA	; 250
     b8c:	e0 81       	ld	r30, Z
     b8e:	80 91 7c 06 	lds	r24, 0x067C
     b92:	8f 37       	cpi	r24, 0x7F	; 127
     b94:	19 f4       	brne	.+6      	; 0xb9c <std_getchar+0x68>
     b96:	10 92 7c 06 	sts	0x067C, r1
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <std_getchar+0x72>
     b9c:	80 91 7c 06 	lds	r24, 0x067C
     ba0:	8f 5f       	subi	r24, 0xFF	; 255
     ba2:	80 93 7c 06 	sts	0x067C, r24
     ba6:	ed 30       	cpi	r30, 0x0D	; 13
     ba8:	09 f4       	brne	.+2      	; 0xbac <std_getchar+0x78>
     baa:	ea e0       	ldi	r30, 0x0A	; 10
     bac:	8e 2f       	mov	r24, r30
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	08 95       	ret

00000bb2 <serial_initialize>:
     bb2:	d3 d2       	rcall	.+1446   	; 0x115a <__floatsisf>
     bb4:	9b 01       	movw	r18, r22
     bb6:	ac 01       	movw	r20, r24
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	74 e2       	ldi	r23, 0x24	; 36
     bbc:	84 ef       	ldi	r24, 0xF4	; 244
     bbe:	99 e4       	ldi	r25, 0x49	; 73
     bc0:	36 d2       	rcall	.+1132   	; 0x102e <__divsf3>
     bc2:	9d d2       	rcall	.+1338   	; 0x10fe <__fixunssfsi>
     bc4:	61 50       	subi	r22, 0x01	; 1
     bc6:	70 40       	sbci	r23, 0x00	; 0
     bc8:	22 e4       	ldi	r18, 0x42	; 66
     bca:	20 93 c8 00 	sts	0x00C8, r18
     bce:	28 e9       	ldi	r18, 0x98	; 152
     bd0:	20 93 c9 00 	sts	0x00C9, r18
     bd4:	26 e0       	ldi	r18, 0x06	; 6
     bd6:	20 93 ca 00 	sts	0x00CA, r18
     bda:	2f ef       	ldi	r18, 0xFF	; 255
     bdc:	20 93 ce 00 	sts	0x00CE, r18
     be0:	10 92 7c 06 	sts	0x067C, r1
     be4:	10 92 7d 06 	sts	0x067D, r1
     be8:	27 2f       	mov	r18, r23
     bea:	33 27       	eor	r19, r19
     bec:	27 fd       	sbrc	r18, 7
     bee:	3a 95       	dec	r19
     bf0:	20 93 cd 00 	sts	0x00CD, r18
     bf4:	60 93 cc 00 	sts	0x00CC, r22
     bf8:	72 98       	cbi	0x0e, 2	; 14
     bfa:	73 9a       	sbi	0x0e, 3	; 14
     bfc:	81 e7       	ldi	r24, 0x71	; 113
     bfe:	95 e0       	ldi	r25, 0x05	; 5
     c00:	6a e9       	ldi	r22, 0x9A	; 154
     c02:	75 e0       	ldi	r23, 0x05	; 5
     c04:	40 d4       	rcall	.+2176   	; 0x1486 <fdevopen>
     c06:	90 93 7f 06 	sts	0x067F, r25
     c0a:	80 93 7e 06 	sts	0x067E, r24
     c0e:	08 95       	ret

00000c10 <main>:

int gainCounter = 0;


int main(void)
{
     c10:	cf 93       	push	r28
     c12:	df 93       	push	r29
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	ee 97       	sbiw	r28, 0x3e	; 62
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	f8 94       	cli
     c1e:	de bf       	out	0x3e, r29	; 62
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	cd bf       	out	0x3d, r28	; 61
	//unsigned short GoalPos[2] = {0, 4095}; // for EX series
	//int index = 0;
	//int id = 1;
	//int bMoving; 
	unsigned short currentPosition[14];
	unsigned short servoIdList[14] = {10, 11, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35};
     c24:	8c e1       	ldi	r24, 0x1C	; 28
     c26:	e8 e0       	ldi	r30, 0x08	; 8
     c28:	f2 e0       	ldi	r31, 0x02	; 2
     c2a:	de 01       	movw	r26, r28
     c2c:	5d 96       	adiw	r26, 0x1d	; 29
     c2e:	01 90       	ld	r0, Z+
     c30:	0d 92       	st	X+, r0
     c32:	8a 95       	dec	r24
     c34:	e1 f7       	brne	.-8      	; 0xc2e <main+0x1e>
	int servoSpeed = 0;
	int pGain = 3;
	//int iGain = 0;
	//int dGain = 0;
	//int Value = 0;
	msgBuf2[0] = '<';
     c36:	e4 e8       	ldi	r30, 0x84	; 132
     c38:	f6 e0       	ldi	r31, 0x06	; 6
     c3a:	8c e3       	ldi	r24, 0x3C	; 60
     c3c:	80 83       	st	Z, r24
	msgBuf2[3] = ' ';
     c3e:	80 e2       	ldi	r24, 0x20	; 32
     c40:	83 83       	std	Z+3, r24	; 0x03
	msgBuf2[8] = '>';
     c42:	8e e3       	ldi	r24, 0x3E	; 62
     c44:	80 87       	std	Z+8, r24	; 0x08
	msgBuf2[9] = '\0';
     c46:	11 86       	std	Z+9, r1	; 0x09
	serial_initialize(57600);
     c48:	60 e0       	ldi	r22, 0x00	; 0
     c4a:	71 ee       	ldi	r23, 0xE1	; 225
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	b0 df       	rcall	.-160    	; 0xbb2 <serial_initialize>
	dxl_initialize( 0, DEFAULT_BAUDNUM ); // Not using device index
     c52:	61 e0       	ldi	r22, 0x01	; 1
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	48 dc       	rcall	.-1904   	; 0x4ec <dxl_initialize>
	sei();	// Interrupt Enable	
     c5c:	78 94       	sei
	
//	printf( "\n\nRead/Write example for CM-700\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.1 (0819-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.2 (1023-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.3 (1125-2013)\n\n" );
	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.4 (0222-2016)\n\n" );
     c5e:	84 e2       	ldi	r24, 0x24	; 36
     c60:	92 e0       	ldi	r25, 0x02	; 2
     c62:	d1 d4       	rcall	.+2466   	; 0x1606 <puts>

	for( int i = 0; i < 50; i++){
     c64:	00 e0       	ldi	r16, 0x00	; 0
     c66:	10 e0       	ldi	r17, 0x00	; 0
		dxl_write_word( i, P_PGAIN, P_PGAIN_DEFAULT_VALUE );
     c68:	43 e0       	ldi	r20, 0x03	; 3
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	6c e1       	ldi	r22, 0x1C	; 28
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	c8 01       	movw	r24, r16
     c72:	c0 db       	rcall	.-2176   	; 0x3f4 <dxl_write_word>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c74:	81 ee       	ldi	r24, 0xE1	; 225
     c76:	94 e0       	ldi	r25, 0x04	; 4
     c78:	01 97       	sbiw	r24, 0x01	; 1
     c7a:	f1 f7       	brne	.-4      	; 0xc78 <main+0x68>
     c7c:	00 c0       	rjmp	.+0      	; 0xc7e <main+0x6e>
     c7e:	00 00       	nop
				// Set goal speed
		_delay_ms(5);
		dxl_write_word( i, P_GOAL_SPEED_L, SERVO_SPEED_DEFAULT_VALUE  );
     c80:	44 e6       	ldi	r20, 0x64	; 100
     c82:	50 e0       	ldi	r21, 0x00	; 0
     c84:	60 e2       	ldi	r22, 0x20	; 32
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	c8 01       	movw	r24, r16
     c8a:	b4 db       	rcall	.-2200   	; 0x3f4 <dxl_write_word>
     c8c:	e1 ee       	ldi	r30, 0xE1	; 225
     c8e:	f4 e0       	ldi	r31, 0x04	; 4
     c90:	31 97       	sbiw	r30, 0x01	; 1
     c92:	f1 f7       	brne	.-4      	; 0xc90 <main+0x80>
     c94:	00 c0       	rjmp	.+0      	; 0xc96 <main+0x86>
     c96:	00 00       	nop
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.1 (0819-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.2 (1023-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.3 (1125-2013)\n\n" );
	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.4 (0222-2016)\n\n" );

	for( int i = 0; i < 50; i++){
     c98:	0f 5f       	subi	r16, 0xFF	; 255
     c9a:	1f 4f       	sbci	r17, 0xFF	; 255
     c9c:	02 33       	cpi	r16, 0x32	; 50
     c9e:	11 05       	cpc	r17, r1
     ca0:	19 f7       	brne	.-58     	; 0xc68 <main+0x58>
		}
		else
			PrintCommStatus(CommStatus);
		*/
		
		unsigned char ReceivedData = getchar();		
     ca2:	0f 2e       	mov	r0, r31
     ca4:	f8 e9       	ldi	r31, 0x98	; 152
     ca6:	cf 2e       	mov	r12, r31
     ca8:	f7 e0       	ldi	r31, 0x07	; 7
     caa:	df 2e       	mov	r13, r31
     cac:	f0 2d       	mov	r31, r0
     cae:	9e 01       	movw	r18, r28
     cb0:	23 5e       	subi	r18, 0xE3	; 227
     cb2:	3f 4f       	sbci	r19, 0xFF	; 255
     cb4:	3a af       	std	Y+58, r19	; 0x3a
     cb6:	29 af       	std	Y+57, r18	; 0x39
     cb8:	39 01       	movw	r6, r18
			if(CommStatus == COMM_RXSUCCESS)
			{
				if(currentPosition[j] != wPresentPos)
				{
					currentPosition[j] = wPresentPos;
					msgBuf2[1] = servoID/10 + '0';
     cba:	0f 2e       	mov	r0, r31
     cbc:	f4 e8       	ldi	r31, 0x84	; 132
     cbe:	4f 2e       	mov	r4, r31
     cc0:	f6 e0       	ldi	r31, 0x06	; 6
     cc2:	5f 2e       	mov	r5, r31
     cc4:	f0 2d       	mov	r31, r0
     cc6:	0f 2e       	mov	r0, r31
     cc8:	fe e8       	ldi	r31, 0x8E	; 142
     cca:	8f 2e       	mov	r8, r31
     ccc:	f6 e0       	ldi	r31, 0x06	; 6
     cce:	9f 2e       	mov	r9, r31
     cd0:	f0 2d       	mov	r31, r0
     cd2:	4b ae       	std	Y+59, r4	; 0x3b
     cd4:	5c ae       	std	Y+60, r5	; 0x3c
		}
		else
			PrintCommStatus(CommStatus);
		*/
		
		unsigned char ReceivedData = getchar();		
     cd6:	f6 01       	movw	r30, r12
     cd8:	80 81       	ld	r24, Z
     cda:	91 81       	ldd	r25, Z+1	; 0x01
     cdc:	1e d4       	rcall	.+2108   	; 0x151a <fgetc>
		if(ReceivedData == '<'){
     cde:	8c 33       	cpi	r24, 0x3C	; 60
     ce0:	29 f4       	brne	.+10     	; 0xcec <main+0xdc>
			msgBufPointer = 0;
     ce2:	10 92 83 06 	sts	0x0683, r1
     ce6:	10 92 82 06 	sts	0x0682, r1
     cea:	8f c1       	rjmp	.+798    	; 0x100a <main+0x3fa>
		}else if(ReceivedData == '>'){
     cec:	8e 33       	cpi	r24, 0x3E	; 62
     cee:	09 f0       	breq	.+2      	; 0xcf2 <main+0xe2>
     cf0:	21 c1       	rjmp	.+578    	; 0xf34 <main+0x324>
			msgBuf0[msgBufPointer]='\0';
     cf2:	e0 91 82 06 	lds	r30, 0x0682
     cf6:	f0 91 83 06 	lds	r31, 0x0683
     cfa:	e2 57       	subi	r30, 0x72	; 114
     cfc:	f9 4f       	sbci	r31, 0xF9	; 249
     cfe:	10 82       	st	Z, r1
			memcpy ( msgBuf1, msgBuf0, strlen(msgBuf0) );
     d00:	ee e8       	ldi	r30, 0x8E	; 142
     d02:	f6 e0       	ldi	r31, 0x06	; 6
     d04:	01 90       	ld	r0, Z+
     d06:	00 20       	and	r0, r0
     d08:	e9 f7       	brne	.-6      	; 0xd04 <main+0xf4>
     d0a:	31 97       	sbiw	r30, 0x01	; 1
     d0c:	af 01       	movw	r20, r30
     d0e:	4e 58       	subi	r20, 0x8E	; 142
     d10:	56 40       	sbci	r21, 0x06	; 6
     d12:	6e e8       	ldi	r22, 0x8E	; 142
     d14:	76 e0       	ldi	r23, 0x06	; 6
     d16:	8e e0       	ldi	r24, 0x0E	; 14
     d18:	97 e0       	ldi	r25, 0x07	; 7
     d1a:	7d d3       	rcall	.+1786   	; 0x1416 <memcpy>
//			printf("(1) %s-%s\n",msgBuf0,msgBuf1);
			char * pch1;
			char * pch2;
			int cnt = 0;
			pch1 = strtok (msgBuf0," ");
     d1c:	6d e5       	ldi	r22, 0x5D	; 93
     d1e:	72 e0       	ldi	r23, 0x02	; 2
     d20:	8e e8       	ldi	r24, 0x8E	; 142
     d22:	96 e0       	ldi	r25, 0x06	; 6
     d24:	75 d3       	rcall	.+1770   	; 0x1410 <strtok>
			while (pch1 != NULL){
     d26:	89 2b       	or	r24, r25
     d28:	09 f4       	brne	.+2      	; 0xd2c <main+0x11c>
     d2a:	77 c1       	rjmp	.+750    	; 0x101a <main+0x40a>
     d2c:	00 e0       	ldi	r16, 0x00	; 0
     d2e:	10 e0       	ldi	r17, 0x00	; 0
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
     d30:	0f 5f       	subi	r16, 0xFF	; 255
     d32:	1f 4f       	sbci	r17, 0xFF	; 255
				pch1 = strtok (NULL, " ");
     d34:	6d e5       	ldi	r22, 0x5D	; 93
     d36:	72 e0       	ldi	r23, 0x02	; 2
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	69 d3       	rcall	.+1746   	; 0x1410 <strtok>
//			printf("(1) %s-%s\n",msgBuf0,msgBuf1);
			char * pch1;
			char * pch2;
			int cnt = 0;
			pch1 = strtok (msgBuf0," ");
			while (pch1 != NULL){
     d3e:	89 2b       	or	r24, r25
     d40:	b9 f7       	brne	.-18     	; 0xd30 <main+0x120>
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
				pch1 = strtok (NULL, " ");
			}
			
			pch2 = strtok (msgBuf1," ");
     d42:	6d e5       	ldi	r22, 0x5D	; 93
     d44:	72 e0       	ldi	r23, 0x02	; 2
     d46:	8e e0       	ldi	r24, 0x0E	; 14
     d48:	97 e0       	ldi	r25, 0x07	; 7
     d4a:	62 d3       	rcall	.+1732   	; 0x1410 <strtok>
//			printf("(2) %s-%s\n",msgBuf1,pch2);
			if ( cnt == 1 ){
     d4c:	01 30       	cpi	r16, 0x01	; 1
     d4e:	11 05       	cpc	r17, r1
     d50:	09 f4       	brne	.+2      	; 0xd54 <main+0x144>
     d52:	e4 c0       	rjmp	.+456    	; 0xf1c <main+0x30c>
				if(strncmp (pch2,"gn",2)==0){
					//printf("cm-700\n");
				}
			}else if (cnt == 2){
     d54:	02 30       	cpi	r16, 0x02	; 2
     d56:	11 05       	cpc	r17, r1
     d58:	49 f5       	brne	.+82     	; 0xdac <main+0x19c>
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL){
     d5a:	00 97       	sbiw	r24, 0x00	; 0
     d5c:	d9 f0       	breq	.+54     	; 0xd94 <main+0x184>
     d5e:	ee 24       	eor	r14, r14
     d60:	ea 94       	dec	r14
     d62:	fe 2c       	mov	r15, r14
     d64:	aa 24       	eor	r10, r10
     d66:	aa 94       	dec	r10
     d68:	ba 2c       	mov	r11, r10
					//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 2){
     d6a:	02 30       	cpi	r16, 0x02	; 2
     d6c:	11 05       	cpc	r17, r1
     d6e:	19 f4       	brne	.+6      	; 0xd76 <main+0x166>
						servoID = atoi(pch2);
     d70:	32 d3       	rcall	.+1636   	; 0x13d6 <atoi>
     d72:	5c 01       	movw	r10, r24
     d74:	05 c0       	rjmp	.+10     	; 0xd80 <main+0x170>
					}else if (cnt == 1){
     d76:	01 30       	cpi	r16, 0x01	; 1
     d78:	11 05       	cpc	r17, r1
     d7a:	11 f4       	brne	.+4      	; 0xd80 <main+0x170>
						servoPosition = atoi(pch2);
     d7c:	2c d3       	rcall	.+1624   	; 0x13d6 <atoi>
     d7e:	7c 01       	movw	r14, r24
					}
					cnt--;
     d80:	01 50       	subi	r16, 0x01	; 1
     d82:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     d84:	6d e5       	ldi	r22, 0x5D	; 93
     d86:	72 e0       	ldi	r23, 0x02	; 2
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	41 d3       	rcall	.+1666   	; 0x1410 <strtok>
				}
			}else if (cnt == 2){
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL){
     d8e:	00 97       	sbiw	r24, 0x00	; 0
     d90:	61 f7       	brne	.-40     	; 0xd6a <main+0x15a>
     d92:	06 c0       	rjmp	.+12     	; 0xda0 <main+0x190>
     d94:	ee 24       	eor	r14, r14
     d96:	ea 94       	dec	r14
     d98:	fe 2c       	mov	r15, r14
     d9a:	aa 24       	eor	r10, r10
     d9c:	aa 94       	dec	r10
     d9e:	ba 2c       	mov	r11, r10
						servoPosition = atoi(pch2);
					}
					cnt--;
					pch2 = strtok (NULL, " ");
				}				
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
     da0:	a7 01       	movw	r20, r14
     da2:	6e e1       	ldi	r22, 0x1E	; 30
     da4:	70 e0       	ldi	r23, 0x00	; 0
     da6:	c5 01       	movw	r24, r10
     da8:	25 db       	rcall	.-2486   	; 0x3f4 <dxl_write_word>
     daa:	b8 c0       	rjmp	.+368    	; 0xf1c <main+0x30c>
				//printf("[%d][%d]\n",servoID,servoPosition);
			}else if (cnt == 3){
     dac:	03 30       	cpi	r16, 0x03	; 3
     dae:	11 05       	cpc	r17, r1
     db0:	09 f0       	breq	.+2      	; 0xdb4 <main+0x1a4>
     db2:	4c c0       	rjmp	.+152    	; 0xe4c <main+0x23c>
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL){
     db4:	00 97       	sbiw	r24, 0x00	; 0
     db6:	21 f1       	breq	.+72     	; 0xe00 <main+0x1f0>
     db8:	aa 24       	eor	r10, r10
     dba:	aa 94       	dec	r10
     dbc:	ba 2c       	mov	r11, r10
     dbe:	22 24       	eor	r2, r2
     dc0:	2a 94       	dec	r2
     dc2:	32 2c       	mov	r3, r2
     dc4:	ee 24       	eor	r14, r14
     dc6:	ea 94       	dec	r14
     dc8:	fe 2c       	mov	r15, r14
					//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 3){
     dca:	03 30       	cpi	r16, 0x03	; 3
     dcc:	11 05       	cpc	r17, r1
     dce:	19 f4       	brne	.+6      	; 0xdd6 <main+0x1c6>
						servoID = atoi(pch2);
     dd0:	02 d3       	rcall	.+1540   	; 0x13d6 <atoi>
     dd2:	7c 01       	movw	r14, r24
     dd4:	0b c0       	rjmp	.+22     	; 0xdec <main+0x1dc>
						}else if (cnt == 2){
     dd6:	02 30       	cpi	r16, 0x02	; 2
     dd8:	11 05       	cpc	r17, r1
     dda:	19 f4       	brne	.+6      	; 0xde2 <main+0x1d2>
						servoPosition = atoi(pch2);
     ddc:	fc d2       	rcall	.+1528   	; 0x13d6 <atoi>
     dde:	1c 01       	movw	r2, r24
     de0:	05 c0       	rjmp	.+10     	; 0xdec <main+0x1dc>
						}else if (cnt == 1){
     de2:	01 30       	cpi	r16, 0x01	; 1
     de4:	11 05       	cpc	r17, r1
     de6:	11 f4       	brne	.+4      	; 0xdec <main+0x1dc>
						servoSpeed = atoi(pch2);
     de8:	f6 d2       	rcall	.+1516   	; 0x13d6 <atoi>
     dea:	5c 01       	movw	r10, r24
					}
					cnt--;
     dec:	01 50       	subi	r16, 0x01	; 1
     dee:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     df0:	6d e5       	ldi	r22, 0x5D	; 93
     df2:	72 e0       	ldi	r23, 0x02	; 2
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0b d3       	rcall	.+1558   	; 0x1410 <strtok>
				//printf("[%d][%d]\n",servoID,servoPosition);
			}else if (cnt == 3){
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL){
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	31 f7       	brne	.-52     	; 0xdca <main+0x1ba>
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <main+0x202>
     e00:	aa 24       	eor	r10, r10
     e02:	aa 94       	dec	r10
     e04:	ba 2c       	mov	r11, r10
     e06:	22 24       	eor	r2, r2
     e08:	2a 94       	dec	r2
     e0a:	32 2c       	mov	r3, r2
     e0c:	ee 24       	eor	r14, r14
     e0e:	ea 94       	dec	r14
     e10:	fe 2c       	mov	r15, r14
					cnt--;
					pch2 = strtok (NULL, " ");
				}
				//				printf("%d %d %d\n",servoID,servoPosition,servoSpeed);
				// Set pGain 
				dxl_write_word( servoID, P_PGAIN, P_PGAIN_DEFAULT_VALUE );
     e12:	43 e0       	ldi	r20, 0x03	; 3
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	6c e1       	ldi	r22, 0x1C	; 28
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	c7 01       	movw	r24, r14
     e1c:	eb da       	rcall	.-2602   	; 0x3f4 <dxl_write_word>
     e1e:	89 ef       	ldi	r24, 0xF9	; 249
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	01 97       	sbiw	r24, 0x01	; 1
     e24:	f1 f7       	brne	.-4      	; 0xe22 <main+0x212>
     e26:	00 c0       	rjmp	.+0      	; 0xe28 <main+0x218>
     e28:	00 00       	nop
				_delay_ms(1);
				// Set goal speed
				dxl_write_word( servoID, P_GOAL_SPEED_L, servoSpeed );
     e2a:	a5 01       	movw	r20, r10
     e2c:	60 e2       	ldi	r22, 0x20	; 32
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	c7 01       	movw	r24, r14
     e32:	e0 da       	rcall	.-2624   	; 0x3f4 <dxl_write_word>
     e34:	e9 ef       	ldi	r30, 0xF9	; 249
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	31 97       	sbiw	r30, 0x01	; 1
     e3a:	f1 f7       	brne	.-4      	; 0xe38 <main+0x228>
     e3c:	00 c0       	rjmp	.+0      	; 0xe3e <main+0x22e>
     e3e:	00 00       	nop
				_delay_ms(1);
				// Set goal position
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
     e40:	a1 01       	movw	r20, r2
     e42:	6e e1       	ldi	r22, 0x1E	; 30
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	c7 01       	movw	r24, r14
     e48:	d5 da       	rcall	.-2646   	; 0x3f4 <dxl_write_word>
     e4a:	68 c0       	rjmp	.+208    	; 0xf1c <main+0x30c>
		
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}else if (cnt == 4){
     e4c:	04 30       	cpi	r16, 0x04	; 4
     e4e:	11 05       	cpc	r17, r1
     e50:	09 f0       	breq	.+2      	; 0xe54 <main+0x244>
     e52:	64 c0       	rjmp	.+200    	; 0xf1c <main+0x30c>
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				pGain = 3;
				while (pch2 != NULL){
     e54:	00 97       	sbiw	r24, 0x00	; 0
     e56:	b9 f1       	breq	.+110    	; 0xec6 <main+0x2b6>
     e58:	0f 2e       	mov	r0, r31
     e5a:	f3 e0       	ldi	r31, 0x03	; 3
     e5c:	af 2e       	mov	r10, r31
     e5e:	b1 2c       	mov	r11, r1
     e60:	f0 2d       	mov	r31, r0
     e62:	22 24       	eor	r2, r2
     e64:	2a 94       	dec	r2
     e66:	32 2c       	mov	r3, r2
     e68:	2f ef       	ldi	r18, 0xFF	; 255
     e6a:	3f ef       	ldi	r19, 0xFF	; 255
     e6c:	3e af       	std	Y+62, r19	; 0x3e
     e6e:	2d af       	std	Y+61, r18	; 0x3d
     e70:	ee 24       	eor	r14, r14
     e72:	ea 94       	dec	r14
     e74:	fe 2c       	mov	r15, r14
//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 4){ 
     e76:	04 30       	cpi	r16, 0x04	; 4
     e78:	11 05       	cpc	r17, r1
     e7a:	19 f4       	brne	.+6      	; 0xe82 <main+0x272>
						servoID = atoi(pch2);
     e7c:	ac d2       	rcall	.+1368   	; 0x13d6 <atoi>
     e7e:	7c 01       	movw	r14, r24
     e80:	18 c0       	rjmp	.+48     	; 0xeb2 <main+0x2a2>
					}else if (cnt == 3){
     e82:	03 30       	cpi	r16, 0x03	; 3
     e84:	11 05       	cpc	r17, r1
     e86:	21 f4       	brne	.+8      	; 0xe90 <main+0x280>
						servoPosition = atoi(pch2);
     e88:	a6 d2       	rcall	.+1356   	; 0x13d6 <atoi>
     e8a:	9e af       	std	Y+62, r25	; 0x3e
     e8c:	8d af       	std	Y+61, r24	; 0x3d
     e8e:	11 c0       	rjmp	.+34     	; 0xeb2 <main+0x2a2>
					}else if (cnt == 2){
     e90:	02 30       	cpi	r16, 0x02	; 2
     e92:	11 05       	cpc	r17, r1
     e94:	19 f4       	brne	.+6      	; 0xe9c <main+0x28c>
						servoSpeed = atoi(pch2);
     e96:	9f d2       	rcall	.+1342   	; 0x13d6 <atoi>
     e98:	1c 01       	movw	r2, r24
     e9a:	0b c0       	rjmp	.+22     	; 0xeb2 <main+0x2a2>
					}else if (cnt == 1){
     e9c:	01 30       	cpi	r16, 0x01	; 1
     e9e:	11 05       	cpc	r17, r1
     ea0:	41 f4       	brne	.+16     	; 0xeb2 <main+0x2a2>
						pGain = atoi(pch2);
     ea2:	99 d2       	rcall	.+1330   	; 0x13d6 <atoi>
     ea4:	5c 01       	movw	r10, r24
     ea6:	81 97       	sbiw	r24, 0x21	; 33
     ea8:	24 f0       	brlt	.+8      	; 0xeb2 <main+0x2a2>
     eaa:	68 94       	set
     eac:	aa 24       	eor	r10, r10
     eae:	a5 f8       	bld	r10, 5
     eb0:	b1 2c       	mov	r11, r1
						if (pGain > 32) pGain = 32;
					}
					cnt--;
     eb2:	01 50       	subi	r16, 0x01	; 1
     eb4:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     eb6:	6d e5       	ldi	r22, 0x5D	; 93
     eb8:	72 e0       	ldi	r23, 0x02	; 2
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a8 d2       	rcall	.+1360   	; 0x1410 <strtok>
			}else if (cnt == 4){
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				pGain = 3;
				while (pch2 != NULL){
     ec0:	00 97       	sbiw	r24, 0x00	; 0
     ec2:	c9 f6       	brne	.-78     	; 0xe76 <main+0x266>
     ec4:	0f c0       	rjmp	.+30     	; 0xee4 <main+0x2d4>
     ec6:	0f 2e       	mov	r0, r31
     ec8:	f3 e0       	ldi	r31, 0x03	; 3
     eca:	af 2e       	mov	r10, r31
     ecc:	b1 2c       	mov	r11, r1
     ece:	f0 2d       	mov	r31, r0
     ed0:	22 24       	eor	r2, r2
     ed2:	2a 94       	dec	r2
     ed4:	32 2c       	mov	r3, r2
     ed6:	8f ef       	ldi	r24, 0xFF	; 255
     ed8:	9f ef       	ldi	r25, 0xFF	; 255
     eda:	9e af       	std	Y+62, r25	; 0x3e
     edc:	8d af       	std	Y+61, r24	; 0x3d
     ede:	ee 24       	eor	r14, r14
     ee0:	ea 94       	dec	r14
     ee2:	fe 2c       	mov	r15, r14
					cnt--;
					pch2 = strtok (NULL, " ");
				}
//				printf("%d %d %d\n",servoID,servoPosition,servoSpeed);
				// Set pGain
				dxl_write_word( servoID, P_PGAIN, pGain );
     ee4:	a5 01       	movw	r20, r10
     ee6:	6c e1       	ldi	r22, 0x1C	; 28
     ee8:	70 e0       	ldi	r23, 0x00	; 0
     eea:	c7 01       	movw	r24, r14
     eec:	83 da       	rcall	.-2810   	; 0x3f4 <dxl_write_word>
     eee:	e9 ef       	ldi	r30, 0xF9	; 249
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	31 97       	sbiw	r30, 0x01	; 1
     ef4:	f1 f7       	brne	.-4      	; 0xef2 <main+0x2e2>
     ef6:	00 c0       	rjmp	.+0      	; 0xef8 <main+0x2e8>
     ef8:	00 00       	nop
				_delay_ms(1);
				// Set goal speed
				dxl_write_word( servoID, P_GOAL_SPEED_L, servoSpeed );
     efa:	a1 01       	movw	r20, r2
     efc:	60 e2       	ldi	r22, 0x20	; 32
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	c7 01       	movw	r24, r14
     f02:	78 da       	rcall	.-2832   	; 0x3f4 <dxl_write_word>
     f04:	89 ef       	ldi	r24, 0xF9	; 249
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <main+0x2f8>
     f0c:	00 c0       	rjmp	.+0      	; 0xf0e <main+0x2fe>
     f0e:	00 00       	nop
				_delay_ms(1);
				// Set goal position
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
     f10:	4d ad       	ldd	r20, Y+61	; 0x3d
     f12:	5e ad       	ldd	r21, Y+62	; 0x3e
     f14:	6e e1       	ldi	r22, 0x1E	; 30
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	c7 01       	movw	r24, r14
     f1a:	6c da       	rcall	.-2856   	; 0x3f4 <dxl_write_word>
     f1c:	ee e8       	ldi	r30, 0x8E	; 142
     f1e:	f6 e0       	ldi	r31, 0x06	; 6
     f20:	ae e0       	ldi	r26, 0x0E	; 14
     f22:	b7 e0       	ldi	r27, 0x07	; 7
     f24:	8e e0       	ldi	r24, 0x0E	; 14
     f26:	97 e0       	ldi	r25, 0x07	; 7
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}
			
			for(int i = 0; i < MSG_BUF_SIZE; i++) {
				msgBuf0[i]=0x00;
     f28:	11 92       	st	Z+, r1
				msgBuf1[i]=0x00;
     f2a:	1d 92       	st	X+, r1
				// Set goal position
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}
			
			for(int i = 0; i < MSG_BUF_SIZE; i++) {
     f2c:	e8 17       	cp	r30, r24
     f2e:	f9 07       	cpc	r31, r25
     f30:	d9 f7       	brne	.-10     	; 0xf28 <main+0x318>
     f32:	6b c0       	rjmp	.+214    	; 0x100a <main+0x3fa>
				msgBuf0[i]=0x00;
				msgBuf1[i]=0x00;
			}
//			i = atoi (buffer);
		}else{			
			if (msgBufPointer >= MSG_BUF_SIZE-1){
     f34:	20 91 82 06 	lds	r18, 0x0682
     f38:	30 91 83 06 	lds	r19, 0x0683
     f3c:	2f 37       	cpi	r18, 0x7F	; 127
     f3e:	31 05       	cpc	r19, r1
     f40:	7c f0       	brlt	.+30     	; 0xf60 <main+0x350>
				msgBufPointer = 0;
     f42:	10 92 83 06 	sts	0x0683, r1
     f46:	10 92 82 06 	sts	0x0682, r1
     f4a:	ee e8       	ldi	r30, 0x8E	; 142
     f4c:	f6 e0       	ldi	r31, 0x06	; 6
     f4e:	ae e0       	ldi	r26, 0x0E	; 14
     f50:	b7 e0       	ldi	r27, 0x07	; 7
     f52:	2e e0       	ldi	r18, 0x0E	; 14
     f54:	37 e0       	ldi	r19, 0x07	; 7
				for(int i = 0; i < MSG_BUF_SIZE; i++) {
					msgBuf0[i]=0x00;
     f56:	11 92       	st	Z+, r1
					msgBuf1[i]=0x00;
     f58:	1d 92       	st	X+, r1
			}
//			i = atoi (buffer);
		}else{			
			if (msgBufPointer >= MSG_BUF_SIZE-1){
				msgBufPointer = 0;
				for(int i = 0; i < MSG_BUF_SIZE; i++) {
     f5a:	e2 17       	cp	r30, r18
     f5c:	f3 07       	cpc	r31, r19
     f5e:	d9 f7       	brne	.-10     	; 0xf56 <main+0x346>
					msgBuf0[i]=0x00;
					msgBuf1[i]=0x00;
				}
			}
			msgBuf0[msgBufPointer]=ReceivedData;
     f60:	20 91 82 06 	lds	r18, 0x0682
     f64:	30 91 83 06 	lds	r19, 0x0683
     f68:	f9 01       	movw	r30, r18
     f6a:	e2 57       	subi	r30, 0x72	; 114
     f6c:	f9 4f       	sbci	r31, 0xF9	; 249
     f6e:	80 83       	st	Z, r24
//			msgBuf1[msgBufPointer]=ReceivedData;
			msgBufPointer++;
     f70:	2f 5f       	subi	r18, 0xFF	; 255
     f72:	3f 4f       	sbci	r19, 0xFF	; 255
     f74:	30 93 83 06 	sts	0x0683, r19
     f78:	20 93 82 06 	sts	0x0682, r18
     f7c:	46 c0       	rjmp	.+140    	; 0x100a <main+0x3fa>
		}
		for (int j = 0; j<14; j++)
		{
			servoID = servoIdList[j];
     f7e:	f5 01       	movw	r30, r10
     f80:	81 91       	ld	r24, Z+
     f82:	91 91       	ld	r25, Z+
     f84:	5f 01       	movw	r10, r30
     f86:	28 2e       	mov	r2, r24
     f88:	39 2e       	mov	r3, r25
			wPresentPos = dxl_read_word(servoID, P_PRESENT_POSITION_L);
     f8a:	64 e2       	ldi	r22, 0x24	; 36
     f8c:	70 e0       	ldi	r23, 0x00	; 0
     f8e:	4c da       	rcall	.-2920   	; 0x428 <dxl_read_word>
     f90:	8c 01       	movw	r16, r24
			CommStatus = dxl_get_result();
     f92:	bd d8       	rcall	.-3718   	; 0x10e <dxl_get_result>
			if(CommStatus == COMM_RXSUCCESS)
     f94:	01 97       	sbiw	r24, 0x01	; 1
     f96:	89 f5       	brne	.+98     	; 0xffa <main+0x3ea>
			{
				if(currentPosition[j] != wPresentPos)
     f98:	f7 01       	movw	r30, r14
     f9a:	80 81       	ld	r24, Z
     f9c:	91 81       	ldd	r25, Z+1	; 0x01
     f9e:	80 17       	cp	r24, r16
     fa0:	91 07       	cpc	r25, r17
     fa2:	59 f1       	breq	.+86     	; 0xffa <main+0x3ea>
				{
					currentPosition[j] = wPresentPos;
     fa4:	11 83       	std	Z+1, r17	; 0x01
     fa6:	00 83       	st	Z, r16
					msgBuf2[1] = servoID/10 + '0';
     fa8:	82 2d       	mov	r24, r2
     faa:	93 2d       	mov	r25, r3
     fac:	6a e0       	ldi	r22, 0x0A	; 10
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	eb d1       	rcall	.+982    	; 0x1388 <__divmodhi4>
     fb2:	60 5d       	subi	r22, 0xD0	; 208
     fb4:	f2 01       	movw	r30, r4
     fb6:	61 83       	std	Z+1, r22	; 0x01
					msgBuf2[2] = servoID%10 + '0';
     fb8:	80 5d       	subi	r24, 0xD0	; 208
     fba:	82 83       	std	Z+2, r24	; 0x02
					msgBuf2[4] = wPresentPos/1000 +'0';
     fbc:	c8 01       	movw	r24, r16
     fbe:	68 ee       	ldi	r22, 0xE8	; 232
     fc0:	73 e0       	ldi	r23, 0x03	; 3
     fc2:	e2 d1       	rcall	.+964    	; 0x1388 <__divmodhi4>
     fc4:	60 5d       	subi	r22, 0xD0	; 208
     fc6:	64 83       	std	Z+4, r22	; 0x04
					wPresentPos %= 1000;
					msgBuf2[5] = wPresentPos/100 +'0';
     fc8:	64 e6       	ldi	r22, 0x64	; 100
     fca:	70 e0       	ldi	r23, 0x00	; 0
     fcc:	dd d1       	rcall	.+954    	; 0x1388 <__divmodhi4>
     fce:	60 5d       	subi	r22, 0xD0	; 208
     fd0:	65 83       	std	Z+5, r22	; 0x05
					wPresentPos %= 100;
					msgBuf2[6] = wPresentPos/10 + '0';
     fd2:	6a e0       	ldi	r22, 0x0A	; 10
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	d8 d1       	rcall	.+944    	; 0x1388 <__divmodhi4>
     fd8:	60 5d       	subi	r22, 0xD0	; 208
     fda:	66 83       	std	Z+6, r22	; 0x06
					msgBuf2[7] = wPresentPos%10 + '0';
     fdc:	80 5d       	subi	r24, 0xD0	; 208
     fde:	87 83       	std	Z+7, r24	; 0x07
     fe0:	0b ad       	ldd	r16, Y+59	; 0x3b
     fe2:	1c ad       	ldd	r17, Y+60	; 0x3c
					for(int k = 0; k<10; k++)
						putchar(msgBuf2[k]);
     fe4:	f8 01       	movw	r30, r16
     fe6:	81 91       	ld	r24, Z+
     fe8:	8f 01       	movw	r16, r30
     fea:	f6 01       	movw	r30, r12
     fec:	62 81       	ldd	r22, Z+2	; 0x02
     fee:	73 81       	ldd	r23, Z+3	; 0x03
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	d1 d2       	rcall	.+1442   	; 0x1596 <fputc>
					wPresentPos %= 1000;
					msgBuf2[5] = wPresentPos/100 +'0';
					wPresentPos %= 100;
					msgBuf2[6] = wPresentPos/10 + '0';
					msgBuf2[7] = wPresentPos%10 + '0';
					for(int k = 0; k<10; k++)
     ff4:	08 15       	cp	r16, r8
     ff6:	19 05       	cpc	r17, r9
     ff8:	a9 f7       	brne	.-22     	; 0xfe4 <main+0x3d4>
     ffa:	f2 e0       	ldi	r31, 0x02	; 2
     ffc:	ef 0e       	add	r14, r31
     ffe:	f1 1c       	adc	r15, r1
			}
			msgBuf0[msgBufPointer]=ReceivedData;
//			msgBuf1[msgBufPointer]=ReceivedData;
			msgBufPointer++;
		}
		for (int j = 0; j<14; j++)
    1000:	e6 14       	cp	r14, r6
    1002:	f7 04       	cpc	r15, r7
    1004:	09 f0       	breq	.+2      	; 0x1008 <main+0x3f8>
    1006:	bb cf       	rjmp	.-138    	; 0xf7e <main+0x36e>
    1008:	66 ce       	rjmp	.-820    	; 0xcd6 <main+0xc6>
    100a:	9e 01       	movw	r18, r28
    100c:	23 5e       	subi	r18, 0xE3	; 227
    100e:	3f 4f       	sbci	r19, 0xFF	; 255
    1010:	59 01       	movw	r10, r18
    1012:	ce 01       	movw	r24, r28
    1014:	01 96       	adiw	r24, 0x01	; 1
    1016:	7c 01       	movw	r14, r24
    1018:	b2 cf       	rjmp	.-156    	; 0xf7e <main+0x36e>
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
				pch1 = strtok (NULL, " ");
			}
			
			pch2 = strtok (msgBuf1," ");
    101a:	6d e5       	ldi	r22, 0x5D	; 93
    101c:	72 e0       	ldi	r23, 0x02	; 2
    101e:	8e e0       	ldi	r24, 0x0E	; 14
    1020:	97 e0       	ldi	r25, 0x07	; 7
    1022:	f6 d1       	rcall	.+1004   	; 0x1410 <strtok>
    1024:	7b cf       	rjmp	.-266    	; 0xf1c <main+0x30c>

00001026 <__cmpsf2>:
    1026:	d4 d0       	rcall	.+424    	; 0x11d0 <__fp_cmp>
    1028:	08 f4       	brcc	.+2      	; 0x102c <__cmpsf2+0x6>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	08 95       	ret

0000102e <__divsf3>:
    102e:	0c d0       	rcall	.+24     	; 0x1048 <__divsf3x>
    1030:	0a c1       	rjmp	.+532    	; 0x1246 <__fp_round>
    1032:	02 d1       	rcall	.+516    	; 0x1238 <__fp_pscB>
    1034:	40 f0       	brcs	.+16     	; 0x1046 <__divsf3+0x18>
    1036:	f9 d0       	rcall	.+498    	; 0x122a <__fp_pscA>
    1038:	30 f0       	brcs	.+12     	; 0x1046 <__divsf3+0x18>
    103a:	21 f4       	brne	.+8      	; 0x1044 <__divsf3+0x16>
    103c:	5f 3f       	cpi	r21, 0xFF	; 255
    103e:	19 f0       	breq	.+6      	; 0x1046 <__divsf3+0x18>
    1040:	eb c0       	rjmp	.+470    	; 0x1218 <__fp_inf>
    1042:	51 11       	cpse	r21, r1
    1044:	34 c1       	rjmp	.+616    	; 0x12ae <__fp_szero>
    1046:	ee c0       	rjmp	.+476    	; 0x1224 <__fp_nan>

00001048 <__divsf3x>:
    1048:	0f d1       	rcall	.+542    	; 0x1268 <__fp_split3>
    104a:	98 f3       	brcs	.-26     	; 0x1032 <__divsf3+0x4>

0000104c <__divsf3_pse>:
    104c:	99 23       	and	r25, r25
    104e:	c9 f3       	breq	.-14     	; 0x1042 <__divsf3+0x14>
    1050:	55 23       	and	r21, r21
    1052:	b1 f3       	breq	.-20     	; 0x1040 <__divsf3+0x12>
    1054:	95 1b       	sub	r25, r21
    1056:	55 0b       	sbc	r21, r21
    1058:	bb 27       	eor	r27, r27
    105a:	aa 27       	eor	r26, r26
    105c:	62 17       	cp	r22, r18
    105e:	73 07       	cpc	r23, r19
    1060:	84 07       	cpc	r24, r20
    1062:	38 f0       	brcs	.+14     	; 0x1072 <__divsf3_pse+0x26>
    1064:	9f 5f       	subi	r25, 0xFF	; 255
    1066:	5f 4f       	sbci	r21, 0xFF	; 255
    1068:	22 0f       	add	r18, r18
    106a:	33 1f       	adc	r19, r19
    106c:	44 1f       	adc	r20, r20
    106e:	aa 1f       	adc	r26, r26
    1070:	a9 f3       	breq	.-22     	; 0x105c <__divsf3_pse+0x10>
    1072:	33 d0       	rcall	.+102    	; 0x10da <__divsf3_pse+0x8e>
    1074:	0e 2e       	mov	r0, r30
    1076:	3a f0       	brmi	.+14     	; 0x1086 <__divsf3_pse+0x3a>
    1078:	e0 e8       	ldi	r30, 0x80	; 128
    107a:	30 d0       	rcall	.+96     	; 0x10dc <__divsf3_pse+0x90>
    107c:	91 50       	subi	r25, 0x01	; 1
    107e:	50 40       	sbci	r21, 0x00	; 0
    1080:	e6 95       	lsr	r30
    1082:	00 1c       	adc	r0, r0
    1084:	ca f7       	brpl	.-14     	; 0x1078 <__divsf3_pse+0x2c>
    1086:	29 d0       	rcall	.+82     	; 0x10da <__divsf3_pse+0x8e>
    1088:	fe 2f       	mov	r31, r30
    108a:	27 d0       	rcall	.+78     	; 0x10da <__divsf3_pse+0x8e>
    108c:	66 0f       	add	r22, r22
    108e:	77 1f       	adc	r23, r23
    1090:	88 1f       	adc	r24, r24
    1092:	bb 1f       	adc	r27, r27
    1094:	26 17       	cp	r18, r22
    1096:	37 07       	cpc	r19, r23
    1098:	48 07       	cpc	r20, r24
    109a:	ab 07       	cpc	r26, r27
    109c:	b0 e8       	ldi	r27, 0x80	; 128
    109e:	09 f0       	breq	.+2      	; 0x10a2 <__divsf3_pse+0x56>
    10a0:	bb 0b       	sbc	r27, r27
    10a2:	80 2d       	mov	r24, r0
    10a4:	bf 01       	movw	r22, r30
    10a6:	ff 27       	eor	r31, r31
    10a8:	93 58       	subi	r25, 0x83	; 131
    10aa:	5f 4f       	sbci	r21, 0xFF	; 255
    10ac:	2a f0       	brmi	.+10     	; 0x10b8 <__divsf3_pse+0x6c>
    10ae:	9e 3f       	cpi	r25, 0xFE	; 254
    10b0:	51 05       	cpc	r21, r1
    10b2:	68 f0       	brcs	.+26     	; 0x10ce <__divsf3_pse+0x82>
    10b4:	b1 c0       	rjmp	.+354    	; 0x1218 <__fp_inf>
    10b6:	fb c0       	rjmp	.+502    	; 0x12ae <__fp_szero>
    10b8:	5f 3f       	cpi	r21, 0xFF	; 255
    10ba:	ec f3       	brlt	.-6      	; 0x10b6 <__divsf3_pse+0x6a>
    10bc:	98 3e       	cpi	r25, 0xE8	; 232
    10be:	dc f3       	brlt	.-10     	; 0x10b6 <__divsf3_pse+0x6a>
    10c0:	86 95       	lsr	r24
    10c2:	77 95       	ror	r23
    10c4:	67 95       	ror	r22
    10c6:	b7 95       	ror	r27
    10c8:	f7 95       	ror	r31
    10ca:	9f 5f       	subi	r25, 0xFF	; 255
    10cc:	c9 f7       	brne	.-14     	; 0x10c0 <__divsf3_pse+0x74>
    10ce:	88 0f       	add	r24, r24
    10d0:	91 1d       	adc	r25, r1
    10d2:	96 95       	lsr	r25
    10d4:	87 95       	ror	r24
    10d6:	97 f9       	bld	r25, 7
    10d8:	08 95       	ret
    10da:	e1 e0       	ldi	r30, 0x01	; 1
    10dc:	66 0f       	add	r22, r22
    10de:	77 1f       	adc	r23, r23
    10e0:	88 1f       	adc	r24, r24
    10e2:	bb 1f       	adc	r27, r27
    10e4:	62 17       	cp	r22, r18
    10e6:	73 07       	cpc	r23, r19
    10e8:	84 07       	cpc	r24, r20
    10ea:	ba 07       	cpc	r27, r26
    10ec:	20 f0       	brcs	.+8      	; 0x10f6 <__divsf3_pse+0xaa>
    10ee:	62 1b       	sub	r22, r18
    10f0:	73 0b       	sbc	r23, r19
    10f2:	84 0b       	sbc	r24, r20
    10f4:	ba 0b       	sbc	r27, r26
    10f6:	ee 1f       	adc	r30, r30
    10f8:	88 f7       	brcc	.-30     	; 0x10dc <__divsf3_pse+0x90>
    10fa:	e0 95       	com	r30
    10fc:	08 95       	ret

000010fe <__fixunssfsi>:
    10fe:	bc d0       	rcall	.+376    	; 0x1278 <__fp_splitA>
    1100:	88 f0       	brcs	.+34     	; 0x1124 <__fixunssfsi+0x26>
    1102:	9f 57       	subi	r25, 0x7F	; 127
    1104:	90 f0       	brcs	.+36     	; 0x112a <__fixunssfsi+0x2c>
    1106:	b9 2f       	mov	r27, r25
    1108:	99 27       	eor	r25, r25
    110a:	b7 51       	subi	r27, 0x17	; 23
    110c:	a0 f0       	brcs	.+40     	; 0x1136 <__fixunssfsi+0x38>
    110e:	d1 f0       	breq	.+52     	; 0x1144 <__fixunssfsi+0x46>
    1110:	66 0f       	add	r22, r22
    1112:	77 1f       	adc	r23, r23
    1114:	88 1f       	adc	r24, r24
    1116:	99 1f       	adc	r25, r25
    1118:	1a f0       	brmi	.+6      	; 0x1120 <__fixunssfsi+0x22>
    111a:	ba 95       	dec	r27
    111c:	c9 f7       	brne	.-14     	; 0x1110 <__fixunssfsi+0x12>
    111e:	12 c0       	rjmp	.+36     	; 0x1144 <__fixunssfsi+0x46>
    1120:	b1 30       	cpi	r27, 0x01	; 1
    1122:	81 f0       	breq	.+32     	; 0x1144 <__fixunssfsi+0x46>
    1124:	c3 d0       	rcall	.+390    	; 0x12ac <__fp_zero>
    1126:	b1 e0       	ldi	r27, 0x01	; 1
    1128:	08 95       	ret
    112a:	c0 c0       	rjmp	.+384    	; 0x12ac <__fp_zero>
    112c:	67 2f       	mov	r22, r23
    112e:	78 2f       	mov	r23, r24
    1130:	88 27       	eor	r24, r24
    1132:	b8 5f       	subi	r27, 0xF8	; 248
    1134:	39 f0       	breq	.+14     	; 0x1144 <__fixunssfsi+0x46>
    1136:	b9 3f       	cpi	r27, 0xF9	; 249
    1138:	cc f3       	brlt	.-14     	; 0x112c <__fixunssfsi+0x2e>
    113a:	86 95       	lsr	r24
    113c:	77 95       	ror	r23
    113e:	67 95       	ror	r22
    1140:	b3 95       	inc	r27
    1142:	d9 f7       	brne	.-10     	; 0x113a <__fixunssfsi+0x3c>
    1144:	3e f4       	brtc	.+14     	; 0x1154 <__fixunssfsi+0x56>
    1146:	90 95       	com	r25
    1148:	80 95       	com	r24
    114a:	70 95       	com	r23
    114c:	61 95       	neg	r22
    114e:	7f 4f       	sbci	r23, 0xFF	; 255
    1150:	8f 4f       	sbci	r24, 0xFF	; 255
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	08 95       	ret

00001156 <__floatunsisf>:
    1156:	e8 94       	clt
    1158:	09 c0       	rjmp	.+18     	; 0x116c <__floatsisf+0x12>

0000115a <__floatsisf>:
    115a:	97 fb       	bst	r25, 7
    115c:	3e f4       	brtc	.+14     	; 0x116c <__floatsisf+0x12>
    115e:	90 95       	com	r25
    1160:	80 95       	com	r24
    1162:	70 95       	com	r23
    1164:	61 95       	neg	r22
    1166:	7f 4f       	sbci	r23, 0xFF	; 255
    1168:	8f 4f       	sbci	r24, 0xFF	; 255
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	99 23       	and	r25, r25
    116e:	a9 f0       	breq	.+42     	; 0x119a <__floatsisf+0x40>
    1170:	f9 2f       	mov	r31, r25
    1172:	96 e9       	ldi	r25, 0x96	; 150
    1174:	bb 27       	eor	r27, r27
    1176:	93 95       	inc	r25
    1178:	f6 95       	lsr	r31
    117a:	87 95       	ror	r24
    117c:	77 95       	ror	r23
    117e:	67 95       	ror	r22
    1180:	b7 95       	ror	r27
    1182:	f1 11       	cpse	r31, r1
    1184:	f8 cf       	rjmp	.-16     	; 0x1176 <__floatsisf+0x1c>
    1186:	fa f4       	brpl	.+62     	; 0x11c6 <__floatsisf+0x6c>
    1188:	bb 0f       	add	r27, r27
    118a:	11 f4       	brne	.+4      	; 0x1190 <__floatsisf+0x36>
    118c:	60 ff       	sbrs	r22, 0
    118e:	1b c0       	rjmp	.+54     	; 0x11c6 <__floatsisf+0x6c>
    1190:	6f 5f       	subi	r22, 0xFF	; 255
    1192:	7f 4f       	sbci	r23, 0xFF	; 255
    1194:	8f 4f       	sbci	r24, 0xFF	; 255
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	16 c0       	rjmp	.+44     	; 0x11c6 <__floatsisf+0x6c>
    119a:	88 23       	and	r24, r24
    119c:	11 f0       	breq	.+4      	; 0x11a2 <__floatsisf+0x48>
    119e:	96 e9       	ldi	r25, 0x96	; 150
    11a0:	11 c0       	rjmp	.+34     	; 0x11c4 <__floatsisf+0x6a>
    11a2:	77 23       	and	r23, r23
    11a4:	21 f0       	breq	.+8      	; 0x11ae <__floatsisf+0x54>
    11a6:	9e e8       	ldi	r25, 0x8E	; 142
    11a8:	87 2f       	mov	r24, r23
    11aa:	76 2f       	mov	r23, r22
    11ac:	05 c0       	rjmp	.+10     	; 0x11b8 <__floatsisf+0x5e>
    11ae:	66 23       	and	r22, r22
    11b0:	71 f0       	breq	.+28     	; 0x11ce <__floatsisf+0x74>
    11b2:	96 e8       	ldi	r25, 0x86	; 134
    11b4:	86 2f       	mov	r24, r22
    11b6:	70 e0       	ldi	r23, 0x00	; 0
    11b8:	60 e0       	ldi	r22, 0x00	; 0
    11ba:	2a f0       	brmi	.+10     	; 0x11c6 <__floatsisf+0x6c>
    11bc:	9a 95       	dec	r25
    11be:	66 0f       	add	r22, r22
    11c0:	77 1f       	adc	r23, r23
    11c2:	88 1f       	adc	r24, r24
    11c4:	da f7       	brpl	.-10     	; 0x11bc <__floatsisf+0x62>
    11c6:	88 0f       	add	r24, r24
    11c8:	96 95       	lsr	r25
    11ca:	87 95       	ror	r24
    11cc:	97 f9       	bld	r25, 7
    11ce:	08 95       	ret

000011d0 <__fp_cmp>:
    11d0:	99 0f       	add	r25, r25
    11d2:	00 08       	sbc	r0, r0
    11d4:	55 0f       	add	r21, r21
    11d6:	aa 0b       	sbc	r26, r26
    11d8:	e0 e8       	ldi	r30, 0x80	; 128
    11da:	fe ef       	ldi	r31, 0xFE	; 254
    11dc:	16 16       	cp	r1, r22
    11de:	17 06       	cpc	r1, r23
    11e0:	e8 07       	cpc	r30, r24
    11e2:	f9 07       	cpc	r31, r25
    11e4:	c0 f0       	brcs	.+48     	; 0x1216 <__fp_cmp+0x46>
    11e6:	12 16       	cp	r1, r18
    11e8:	13 06       	cpc	r1, r19
    11ea:	e4 07       	cpc	r30, r20
    11ec:	f5 07       	cpc	r31, r21
    11ee:	98 f0       	brcs	.+38     	; 0x1216 <__fp_cmp+0x46>
    11f0:	62 1b       	sub	r22, r18
    11f2:	73 0b       	sbc	r23, r19
    11f4:	84 0b       	sbc	r24, r20
    11f6:	95 0b       	sbc	r25, r21
    11f8:	39 f4       	brne	.+14     	; 0x1208 <__fp_cmp+0x38>
    11fa:	0a 26       	eor	r0, r26
    11fc:	61 f0       	breq	.+24     	; 0x1216 <__fp_cmp+0x46>
    11fe:	23 2b       	or	r18, r19
    1200:	24 2b       	or	r18, r20
    1202:	25 2b       	or	r18, r21
    1204:	21 f4       	brne	.+8      	; 0x120e <__fp_cmp+0x3e>
    1206:	08 95       	ret
    1208:	0a 26       	eor	r0, r26
    120a:	09 f4       	brne	.+2      	; 0x120e <__fp_cmp+0x3e>
    120c:	a1 40       	sbci	r26, 0x01	; 1
    120e:	a6 95       	lsr	r26
    1210:	8f ef       	ldi	r24, 0xFF	; 255
    1212:	81 1d       	adc	r24, r1
    1214:	81 1d       	adc	r24, r1
    1216:	08 95       	ret

00001218 <__fp_inf>:
    1218:	97 f9       	bld	r25, 7
    121a:	9f 67       	ori	r25, 0x7F	; 127
    121c:	80 e8       	ldi	r24, 0x80	; 128
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	60 e0       	ldi	r22, 0x00	; 0
    1222:	08 95       	ret

00001224 <__fp_nan>:
    1224:	9f ef       	ldi	r25, 0xFF	; 255
    1226:	80 ec       	ldi	r24, 0xC0	; 192
    1228:	08 95       	ret

0000122a <__fp_pscA>:
    122a:	00 24       	eor	r0, r0
    122c:	0a 94       	dec	r0
    122e:	16 16       	cp	r1, r22
    1230:	17 06       	cpc	r1, r23
    1232:	18 06       	cpc	r1, r24
    1234:	09 06       	cpc	r0, r25
    1236:	08 95       	ret

00001238 <__fp_pscB>:
    1238:	00 24       	eor	r0, r0
    123a:	0a 94       	dec	r0
    123c:	12 16       	cp	r1, r18
    123e:	13 06       	cpc	r1, r19
    1240:	14 06       	cpc	r1, r20
    1242:	05 06       	cpc	r0, r21
    1244:	08 95       	ret

00001246 <__fp_round>:
    1246:	09 2e       	mov	r0, r25
    1248:	03 94       	inc	r0
    124a:	00 0c       	add	r0, r0
    124c:	11 f4       	brne	.+4      	; 0x1252 <__fp_round+0xc>
    124e:	88 23       	and	r24, r24
    1250:	52 f0       	brmi	.+20     	; 0x1266 <__fp_round+0x20>
    1252:	bb 0f       	add	r27, r27
    1254:	40 f4       	brcc	.+16     	; 0x1266 <__fp_round+0x20>
    1256:	bf 2b       	or	r27, r31
    1258:	11 f4       	brne	.+4      	; 0x125e <__fp_round+0x18>
    125a:	60 ff       	sbrs	r22, 0
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <__fp_round+0x20>
    125e:	6f 5f       	subi	r22, 0xFF	; 255
    1260:	7f 4f       	sbci	r23, 0xFF	; 255
    1262:	8f 4f       	sbci	r24, 0xFF	; 255
    1264:	9f 4f       	sbci	r25, 0xFF	; 255
    1266:	08 95       	ret

00001268 <__fp_split3>:
    1268:	57 fd       	sbrc	r21, 7
    126a:	90 58       	subi	r25, 0x80	; 128
    126c:	44 0f       	add	r20, r20
    126e:	55 1f       	adc	r21, r21
    1270:	59 f0       	breq	.+22     	; 0x1288 <__fp_splitA+0x10>
    1272:	5f 3f       	cpi	r21, 0xFF	; 255
    1274:	71 f0       	breq	.+28     	; 0x1292 <__fp_splitA+0x1a>
    1276:	47 95       	ror	r20

00001278 <__fp_splitA>:
    1278:	88 0f       	add	r24, r24
    127a:	97 fb       	bst	r25, 7
    127c:	99 1f       	adc	r25, r25
    127e:	61 f0       	breq	.+24     	; 0x1298 <__fp_splitA+0x20>
    1280:	9f 3f       	cpi	r25, 0xFF	; 255
    1282:	79 f0       	breq	.+30     	; 0x12a2 <__fp_splitA+0x2a>
    1284:	87 95       	ror	r24
    1286:	08 95       	ret
    1288:	12 16       	cp	r1, r18
    128a:	13 06       	cpc	r1, r19
    128c:	14 06       	cpc	r1, r20
    128e:	55 1f       	adc	r21, r21
    1290:	f2 cf       	rjmp	.-28     	; 0x1276 <__fp_split3+0xe>
    1292:	46 95       	lsr	r20
    1294:	f1 df       	rcall	.-30     	; 0x1278 <__fp_splitA>
    1296:	08 c0       	rjmp	.+16     	; 0x12a8 <__fp_splitA+0x30>
    1298:	16 16       	cp	r1, r22
    129a:	17 06       	cpc	r1, r23
    129c:	18 06       	cpc	r1, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	f1 cf       	rjmp	.-30     	; 0x1284 <__fp_splitA+0xc>
    12a2:	86 95       	lsr	r24
    12a4:	71 05       	cpc	r23, r1
    12a6:	61 05       	cpc	r22, r1
    12a8:	08 94       	sec
    12aa:	08 95       	ret

000012ac <__fp_zero>:
    12ac:	e8 94       	clt

000012ae <__fp_szero>:
    12ae:	bb 27       	eor	r27, r27
    12b0:	66 27       	eor	r22, r22
    12b2:	77 27       	eor	r23, r23
    12b4:	cb 01       	movw	r24, r22
    12b6:	97 f9       	bld	r25, 7
    12b8:	08 95       	ret

000012ba <__gesf2>:
    12ba:	8a df       	rcall	.-236    	; 0x11d0 <__fp_cmp>
    12bc:	08 f4       	brcc	.+2      	; 0x12c0 <__gesf2+0x6>
    12be:	8f ef       	ldi	r24, 0xFF	; 255
    12c0:	08 95       	ret

000012c2 <__mulsf3>:
    12c2:	0b d0       	rcall	.+22     	; 0x12da <__mulsf3x>
    12c4:	c0 cf       	rjmp	.-128    	; 0x1246 <__fp_round>
    12c6:	b1 df       	rcall	.-158    	; 0x122a <__fp_pscA>
    12c8:	28 f0       	brcs	.+10     	; 0x12d4 <__mulsf3+0x12>
    12ca:	b6 df       	rcall	.-148    	; 0x1238 <__fp_pscB>
    12cc:	18 f0       	brcs	.+6      	; 0x12d4 <__mulsf3+0x12>
    12ce:	95 23       	and	r25, r21
    12d0:	09 f0       	breq	.+2      	; 0x12d4 <__mulsf3+0x12>
    12d2:	a2 cf       	rjmp	.-188    	; 0x1218 <__fp_inf>
    12d4:	a7 cf       	rjmp	.-178    	; 0x1224 <__fp_nan>
    12d6:	11 24       	eor	r1, r1
    12d8:	ea cf       	rjmp	.-44     	; 0x12ae <__fp_szero>

000012da <__mulsf3x>:
    12da:	c6 df       	rcall	.-116    	; 0x1268 <__fp_split3>
    12dc:	a0 f3       	brcs	.-24     	; 0x12c6 <__mulsf3+0x4>

000012de <__mulsf3_pse>:
    12de:	95 9f       	mul	r25, r21
    12e0:	d1 f3       	breq	.-12     	; 0x12d6 <__mulsf3+0x14>
    12e2:	95 0f       	add	r25, r21
    12e4:	50 e0       	ldi	r21, 0x00	; 0
    12e6:	55 1f       	adc	r21, r21
    12e8:	62 9f       	mul	r22, r18
    12ea:	f0 01       	movw	r30, r0
    12ec:	72 9f       	mul	r23, r18
    12ee:	bb 27       	eor	r27, r27
    12f0:	f0 0d       	add	r31, r0
    12f2:	b1 1d       	adc	r27, r1
    12f4:	63 9f       	mul	r22, r19
    12f6:	aa 27       	eor	r26, r26
    12f8:	f0 0d       	add	r31, r0
    12fa:	b1 1d       	adc	r27, r1
    12fc:	aa 1f       	adc	r26, r26
    12fe:	64 9f       	mul	r22, r20
    1300:	66 27       	eor	r22, r22
    1302:	b0 0d       	add	r27, r0
    1304:	a1 1d       	adc	r26, r1
    1306:	66 1f       	adc	r22, r22
    1308:	82 9f       	mul	r24, r18
    130a:	22 27       	eor	r18, r18
    130c:	b0 0d       	add	r27, r0
    130e:	a1 1d       	adc	r26, r1
    1310:	62 1f       	adc	r22, r18
    1312:	73 9f       	mul	r23, r19
    1314:	b0 0d       	add	r27, r0
    1316:	a1 1d       	adc	r26, r1
    1318:	62 1f       	adc	r22, r18
    131a:	83 9f       	mul	r24, r19
    131c:	a0 0d       	add	r26, r0
    131e:	61 1d       	adc	r22, r1
    1320:	22 1f       	adc	r18, r18
    1322:	74 9f       	mul	r23, r20
    1324:	33 27       	eor	r19, r19
    1326:	a0 0d       	add	r26, r0
    1328:	61 1d       	adc	r22, r1
    132a:	23 1f       	adc	r18, r19
    132c:	84 9f       	mul	r24, r20
    132e:	60 0d       	add	r22, r0
    1330:	21 1d       	adc	r18, r1
    1332:	82 2f       	mov	r24, r18
    1334:	76 2f       	mov	r23, r22
    1336:	6a 2f       	mov	r22, r26
    1338:	11 24       	eor	r1, r1
    133a:	9f 57       	subi	r25, 0x7F	; 127
    133c:	50 40       	sbci	r21, 0x00	; 0
    133e:	8a f0       	brmi	.+34     	; 0x1362 <__mulsf3_pse+0x84>
    1340:	e1 f0       	breq	.+56     	; 0x137a <__mulsf3_pse+0x9c>
    1342:	88 23       	and	r24, r24
    1344:	4a f0       	brmi	.+18     	; 0x1358 <__mulsf3_pse+0x7a>
    1346:	ee 0f       	add	r30, r30
    1348:	ff 1f       	adc	r31, r31
    134a:	bb 1f       	adc	r27, r27
    134c:	66 1f       	adc	r22, r22
    134e:	77 1f       	adc	r23, r23
    1350:	88 1f       	adc	r24, r24
    1352:	91 50       	subi	r25, 0x01	; 1
    1354:	50 40       	sbci	r21, 0x00	; 0
    1356:	a9 f7       	brne	.-22     	; 0x1342 <__mulsf3_pse+0x64>
    1358:	9e 3f       	cpi	r25, 0xFE	; 254
    135a:	51 05       	cpc	r21, r1
    135c:	70 f0       	brcs	.+28     	; 0x137a <__mulsf3_pse+0x9c>
    135e:	5c cf       	rjmp	.-328    	; 0x1218 <__fp_inf>
    1360:	a6 cf       	rjmp	.-180    	; 0x12ae <__fp_szero>
    1362:	5f 3f       	cpi	r21, 0xFF	; 255
    1364:	ec f3       	brlt	.-6      	; 0x1360 <__mulsf3_pse+0x82>
    1366:	98 3e       	cpi	r25, 0xE8	; 232
    1368:	dc f3       	brlt	.-10     	; 0x1360 <__mulsf3_pse+0x82>
    136a:	86 95       	lsr	r24
    136c:	77 95       	ror	r23
    136e:	67 95       	ror	r22
    1370:	b7 95       	ror	r27
    1372:	f7 95       	ror	r31
    1374:	e7 95       	ror	r30
    1376:	9f 5f       	subi	r25, 0xFF	; 255
    1378:	c1 f7       	brne	.-16     	; 0x136a <__mulsf3_pse+0x8c>
    137a:	fe 2b       	or	r31, r30
    137c:	88 0f       	add	r24, r24
    137e:	91 1d       	adc	r25, r1
    1380:	96 95       	lsr	r25
    1382:	87 95       	ror	r24
    1384:	97 f9       	bld	r25, 7
    1386:	08 95       	ret

00001388 <__divmodhi4>:
    1388:	97 fb       	bst	r25, 7
    138a:	07 2e       	mov	r0, r23
    138c:	16 f4       	brtc	.+4      	; 0x1392 <__divmodhi4+0xa>
    138e:	00 94       	com	r0
    1390:	06 d0       	rcall	.+12     	; 0x139e <__divmodhi4_neg1>
    1392:	77 fd       	sbrc	r23, 7
    1394:	08 d0       	rcall	.+16     	; 0x13a6 <__divmodhi4_neg2>
    1396:	0b d0       	rcall	.+22     	; 0x13ae <__udivmodhi4>
    1398:	07 fc       	sbrc	r0, 7
    139a:	05 d0       	rcall	.+10     	; 0x13a6 <__divmodhi4_neg2>
    139c:	3e f4       	brtc	.+14     	; 0x13ac <__divmodhi4_exit>

0000139e <__divmodhi4_neg1>:
    139e:	90 95       	com	r25
    13a0:	81 95       	neg	r24
    13a2:	9f 4f       	sbci	r25, 0xFF	; 255
    13a4:	08 95       	ret

000013a6 <__divmodhi4_neg2>:
    13a6:	70 95       	com	r23
    13a8:	61 95       	neg	r22
    13aa:	7f 4f       	sbci	r23, 0xFF	; 255

000013ac <__divmodhi4_exit>:
    13ac:	08 95       	ret

000013ae <__udivmodhi4>:
    13ae:	aa 1b       	sub	r26, r26
    13b0:	bb 1b       	sub	r27, r27
    13b2:	51 e1       	ldi	r21, 0x11	; 17
    13b4:	07 c0       	rjmp	.+14     	; 0x13c4 <__udivmodhi4_ep>

000013b6 <__udivmodhi4_loop>:
    13b6:	aa 1f       	adc	r26, r26
    13b8:	bb 1f       	adc	r27, r27
    13ba:	a6 17       	cp	r26, r22
    13bc:	b7 07       	cpc	r27, r23
    13be:	10 f0       	brcs	.+4      	; 0x13c4 <__udivmodhi4_ep>
    13c0:	a6 1b       	sub	r26, r22
    13c2:	b7 0b       	sbc	r27, r23

000013c4 <__udivmodhi4_ep>:
    13c4:	88 1f       	adc	r24, r24
    13c6:	99 1f       	adc	r25, r25
    13c8:	5a 95       	dec	r21
    13ca:	a9 f7       	brne	.-22     	; 0x13b6 <__udivmodhi4_loop>
    13cc:	80 95       	com	r24
    13ce:	90 95       	com	r25
    13d0:	bc 01       	movw	r22, r24
    13d2:	cd 01       	movw	r24, r26
    13d4:	08 95       	ret

000013d6 <atoi>:
    13d6:	fc 01       	movw	r30, r24
    13d8:	88 27       	eor	r24, r24
    13da:	99 27       	eor	r25, r25
    13dc:	e8 94       	clt
    13de:	21 91       	ld	r18, Z+
    13e0:	20 32       	cpi	r18, 0x20	; 32
    13e2:	e9 f3       	breq	.-6      	; 0x13de <atoi+0x8>
    13e4:	29 30       	cpi	r18, 0x09	; 9
    13e6:	10 f0       	brcs	.+4      	; 0x13ec <atoi+0x16>
    13e8:	2e 30       	cpi	r18, 0x0E	; 14
    13ea:	c8 f3       	brcs	.-14     	; 0x13de <atoi+0x8>
    13ec:	2b 32       	cpi	r18, 0x2B	; 43
    13ee:	39 f0       	breq	.+14     	; 0x13fe <atoi+0x28>
    13f0:	2d 32       	cpi	r18, 0x2D	; 45
    13f2:	31 f4       	brne	.+12     	; 0x1400 <atoi+0x2a>
    13f4:	68 94       	set
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <atoi+0x28>
    13f8:	3e d0       	rcall	.+124    	; 0x1476 <__mulhi_const_10>
    13fa:	82 0f       	add	r24, r18
    13fc:	91 1d       	adc	r25, r1
    13fe:	21 91       	ld	r18, Z+
    1400:	20 53       	subi	r18, 0x30	; 48
    1402:	2a 30       	cpi	r18, 0x0A	; 10
    1404:	c8 f3       	brcs	.-14     	; 0x13f8 <atoi+0x22>
    1406:	1e f4       	brtc	.+6      	; 0x140e <atoi+0x38>
    1408:	90 95       	com	r25
    140a:	81 95       	neg	r24
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	08 95       	ret

00001410 <strtok>:
    1410:	40 e8       	ldi	r20, 0x80	; 128
    1412:	56 e0       	ldi	r21, 0x06	; 6
    1414:	09 c0       	rjmp	.+18     	; 0x1428 <strtok_r>

00001416 <memcpy>:
    1416:	fb 01       	movw	r30, r22
    1418:	dc 01       	movw	r26, r24
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <memcpy+0xa>
    141c:	01 90       	ld	r0, Z+
    141e:	0d 92       	st	X+, r0
    1420:	41 50       	subi	r20, 0x01	; 1
    1422:	50 40       	sbci	r21, 0x00	; 0
    1424:	d8 f7       	brcc	.-10     	; 0x141c <memcpy+0x6>
    1426:	08 95       	ret

00001428 <strtok_r>:
    1428:	fa 01       	movw	r30, r20
    142a:	a1 91       	ld	r26, Z+
    142c:	b0 81       	ld	r27, Z
    142e:	00 97       	sbiw	r24, 0x00	; 0
    1430:	19 f4       	brne	.+6      	; 0x1438 <strtok_r+0x10>
    1432:	10 97       	sbiw	r26, 0x00	; 0
    1434:	e1 f0       	breq	.+56     	; 0x146e <strtok_r+0x46>
    1436:	cd 01       	movw	r24, r26
    1438:	dc 01       	movw	r26, r24
    143a:	cd 01       	movw	r24, r26
    143c:	0d 90       	ld	r0, X+
    143e:	00 20       	and	r0, r0
    1440:	11 f4       	brne	.+4      	; 0x1446 <strtok_r+0x1e>
    1442:	c0 01       	movw	r24, r0
    1444:	13 c0       	rjmp	.+38     	; 0x146c <strtok_r+0x44>
    1446:	fb 01       	movw	r30, r22
    1448:	21 91       	ld	r18, Z+
    144a:	22 23       	and	r18, r18
    144c:	19 f0       	breq	.+6      	; 0x1454 <strtok_r+0x2c>
    144e:	20 15       	cp	r18, r0
    1450:	d9 f7       	brne	.-10     	; 0x1448 <strtok_r+0x20>
    1452:	f3 cf       	rjmp	.-26     	; 0x143a <strtok_r+0x12>
    1454:	fb 01       	movw	r30, r22
    1456:	21 91       	ld	r18, Z+
    1458:	20 15       	cp	r18, r0
    145a:	19 f4       	brne	.+6      	; 0x1462 <strtok_r+0x3a>
    145c:	1e 92       	st	-X, r1
    145e:	11 96       	adiw	r26, 0x01	; 1
    1460:	06 c0       	rjmp	.+12     	; 0x146e <strtok_r+0x46>
    1462:	22 23       	and	r18, r18
    1464:	c1 f7       	brne	.-16     	; 0x1456 <strtok_r+0x2e>
    1466:	0d 90       	ld	r0, X+
    1468:	00 20       	and	r0, r0
    146a:	a1 f7       	brne	.-24     	; 0x1454 <strtok_r+0x2c>
    146c:	d0 01       	movw	r26, r0
    146e:	fa 01       	movw	r30, r20
    1470:	a1 93       	st	Z+, r26
    1472:	b0 83       	st	Z, r27
    1474:	08 95       	ret

00001476 <__mulhi_const_10>:
    1476:	7a e0       	ldi	r23, 0x0A	; 10
    1478:	97 9f       	mul	r25, r23
    147a:	90 2d       	mov	r25, r0
    147c:	87 9f       	mul	r24, r23
    147e:	80 2d       	mov	r24, r0
    1480:	91 0d       	add	r25, r1
    1482:	11 24       	eor	r1, r1
    1484:	08 95       	ret

00001486 <fdevopen>:
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	31 f4       	brne	.+12     	; 0x149e <fdevopen+0x18>
    1492:	61 15       	cp	r22, r1
    1494:	71 05       	cpc	r23, r1
    1496:	19 f4       	brne	.+6      	; 0x149e <fdevopen+0x18>
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	39 c0       	rjmp	.+114    	; 0x1510 <fdevopen+0x8a>
    149e:	8b 01       	movw	r16, r22
    14a0:	ec 01       	movw	r28, r24
    14a2:	6e e0       	ldi	r22, 0x0E	; 14
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	dd d0       	rcall	.+442    	; 0x1666 <calloc>
    14ac:	fc 01       	movw	r30, r24
    14ae:	89 2b       	or	r24, r25
    14b0:	99 f3       	breq	.-26     	; 0x1498 <fdevopen+0x12>
    14b2:	80 e8       	ldi	r24, 0x80	; 128
    14b4:	83 83       	std	Z+3, r24	; 0x03
    14b6:	01 15       	cp	r16, r1
    14b8:	11 05       	cpc	r17, r1
    14ba:	71 f0       	breq	.+28     	; 0x14d8 <fdevopen+0x52>
    14bc:	13 87       	std	Z+11, r17	; 0x0b
    14be:	02 87       	std	Z+10, r16	; 0x0a
    14c0:	81 e8       	ldi	r24, 0x81	; 129
    14c2:	83 83       	std	Z+3, r24	; 0x03
    14c4:	80 91 98 07 	lds	r24, 0x0798
    14c8:	90 91 99 07 	lds	r25, 0x0799
    14cc:	89 2b       	or	r24, r25
    14ce:	21 f4       	brne	.+8      	; 0x14d8 <fdevopen+0x52>
    14d0:	f0 93 99 07 	sts	0x0799, r31
    14d4:	e0 93 98 07 	sts	0x0798, r30
    14d8:	20 97       	sbiw	r28, 0x00	; 0
    14da:	c9 f0       	breq	.+50     	; 0x150e <fdevopen+0x88>
    14dc:	d1 87       	std	Z+9, r29	; 0x09
    14de:	c0 87       	std	Z+8, r28	; 0x08
    14e0:	83 81       	ldd	r24, Z+3	; 0x03
    14e2:	82 60       	ori	r24, 0x02	; 2
    14e4:	83 83       	std	Z+3, r24	; 0x03
    14e6:	80 91 9a 07 	lds	r24, 0x079A
    14ea:	90 91 9b 07 	lds	r25, 0x079B
    14ee:	89 2b       	or	r24, r25
    14f0:	71 f4       	brne	.+28     	; 0x150e <fdevopen+0x88>
    14f2:	f0 93 9b 07 	sts	0x079B, r31
    14f6:	e0 93 9a 07 	sts	0x079A, r30
    14fa:	80 91 9c 07 	lds	r24, 0x079C
    14fe:	90 91 9d 07 	lds	r25, 0x079D
    1502:	89 2b       	or	r24, r25
    1504:	21 f4       	brne	.+8      	; 0x150e <fdevopen+0x88>
    1506:	f0 93 9d 07 	sts	0x079D, r31
    150a:	e0 93 9c 07 	sts	0x079C, r30
    150e:	cf 01       	movw	r24, r30
    1510:	df 91       	pop	r29
    1512:	cf 91       	pop	r28
    1514:	1f 91       	pop	r17
    1516:	0f 91       	pop	r16
    1518:	08 95       	ret

0000151a <fgetc>:
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	ec 01       	movw	r28, r24
    1520:	2b 81       	ldd	r18, Y+3	; 0x03
    1522:	20 ff       	sbrs	r18, 0
    1524:	33 c0       	rjmp	.+102    	; 0x158c <fgetc+0x72>
    1526:	26 ff       	sbrs	r18, 6
    1528:	0a c0       	rjmp	.+20     	; 0x153e <fgetc+0x24>
    152a:	2f 7b       	andi	r18, 0xBF	; 191
    152c:	2b 83       	std	Y+3, r18	; 0x03
    152e:	8e 81       	ldd	r24, Y+6	; 0x06
    1530:	9f 81       	ldd	r25, Y+7	; 0x07
    1532:	01 96       	adiw	r24, 0x01	; 1
    1534:	9f 83       	std	Y+7, r25	; 0x07
    1536:	8e 83       	std	Y+6, r24	; 0x06
    1538:	8a 81       	ldd	r24, Y+2	; 0x02
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	29 c0       	rjmp	.+82     	; 0x1590 <fgetc+0x76>
    153e:	22 ff       	sbrs	r18, 2
    1540:	0f c0       	rjmp	.+30     	; 0x1560 <fgetc+0x46>
    1542:	e8 81       	ld	r30, Y
    1544:	f9 81       	ldd	r31, Y+1	; 0x01
    1546:	80 81       	ld	r24, Z
    1548:	08 2e       	mov	r0, r24
    154a:	00 0c       	add	r0, r0
    154c:	99 0b       	sbc	r25, r25
    154e:	00 97       	sbiw	r24, 0x00	; 0
    1550:	19 f4       	brne	.+6      	; 0x1558 <fgetc+0x3e>
    1552:	20 62       	ori	r18, 0x20	; 32
    1554:	2b 83       	std	Y+3, r18	; 0x03
    1556:	1a c0       	rjmp	.+52     	; 0x158c <fgetc+0x72>
    1558:	31 96       	adiw	r30, 0x01	; 1
    155a:	f9 83       	std	Y+1, r31	; 0x01
    155c:	e8 83       	st	Y, r30
    155e:	0e c0       	rjmp	.+28     	; 0x157c <fgetc+0x62>
    1560:	ea 85       	ldd	r30, Y+10	; 0x0a
    1562:	fb 85       	ldd	r31, Y+11	; 0x0b
    1564:	19 95       	eicall
    1566:	97 ff       	sbrs	r25, 7
    1568:	09 c0       	rjmp	.+18     	; 0x157c <fgetc+0x62>
    156a:	2b 81       	ldd	r18, Y+3	; 0x03
    156c:	01 96       	adiw	r24, 0x01	; 1
    156e:	11 f0       	breq	.+4      	; 0x1574 <fgetc+0x5a>
    1570:	80 e2       	ldi	r24, 0x20	; 32
    1572:	01 c0       	rjmp	.+2      	; 0x1576 <fgetc+0x5c>
    1574:	80 e1       	ldi	r24, 0x10	; 16
    1576:	82 2b       	or	r24, r18
    1578:	8b 83       	std	Y+3, r24	; 0x03
    157a:	08 c0       	rjmp	.+16     	; 0x158c <fgetc+0x72>
    157c:	2e 81       	ldd	r18, Y+6	; 0x06
    157e:	3f 81       	ldd	r19, Y+7	; 0x07
    1580:	2f 5f       	subi	r18, 0xFF	; 255
    1582:	3f 4f       	sbci	r19, 0xFF	; 255
    1584:	3f 83       	std	Y+7, r19	; 0x07
    1586:	2e 83       	std	Y+6, r18	; 0x06
    1588:	99 27       	eor	r25, r25
    158a:	02 c0       	rjmp	.+4      	; 0x1590 <fgetc+0x76>
    158c:	8f ef       	ldi	r24, 0xFF	; 255
    158e:	9f ef       	ldi	r25, 0xFF	; 255
    1590:	df 91       	pop	r29
    1592:	cf 91       	pop	r28
    1594:	08 95       	ret

00001596 <fputc>:
    1596:	0f 93       	push	r16
    1598:	1f 93       	push	r17
    159a:	cf 93       	push	r28
    159c:	df 93       	push	r29
    159e:	fb 01       	movw	r30, r22
    15a0:	23 81       	ldd	r18, Z+3	; 0x03
    15a2:	21 fd       	sbrc	r18, 1
    15a4:	03 c0       	rjmp	.+6      	; 0x15ac <fputc+0x16>
    15a6:	8f ef       	ldi	r24, 0xFF	; 255
    15a8:	9f ef       	ldi	r25, 0xFF	; 255
    15aa:	28 c0       	rjmp	.+80     	; 0x15fc <fputc+0x66>
    15ac:	22 ff       	sbrs	r18, 2
    15ae:	16 c0       	rjmp	.+44     	; 0x15dc <fputc+0x46>
    15b0:	46 81       	ldd	r20, Z+6	; 0x06
    15b2:	57 81       	ldd	r21, Z+7	; 0x07
    15b4:	24 81       	ldd	r18, Z+4	; 0x04
    15b6:	35 81       	ldd	r19, Z+5	; 0x05
    15b8:	42 17       	cp	r20, r18
    15ba:	53 07       	cpc	r21, r19
    15bc:	44 f4       	brge	.+16     	; 0x15ce <fputc+0x38>
    15be:	a0 81       	ld	r26, Z
    15c0:	b1 81       	ldd	r27, Z+1	; 0x01
    15c2:	9d 01       	movw	r18, r26
    15c4:	2f 5f       	subi	r18, 0xFF	; 255
    15c6:	3f 4f       	sbci	r19, 0xFF	; 255
    15c8:	31 83       	std	Z+1, r19	; 0x01
    15ca:	20 83       	st	Z, r18
    15cc:	8c 93       	st	X, r24
    15ce:	26 81       	ldd	r18, Z+6	; 0x06
    15d0:	37 81       	ldd	r19, Z+7	; 0x07
    15d2:	2f 5f       	subi	r18, 0xFF	; 255
    15d4:	3f 4f       	sbci	r19, 0xFF	; 255
    15d6:	37 83       	std	Z+7, r19	; 0x07
    15d8:	26 83       	std	Z+6, r18	; 0x06
    15da:	10 c0       	rjmp	.+32     	; 0x15fc <fputc+0x66>
    15dc:	eb 01       	movw	r28, r22
    15de:	09 2f       	mov	r16, r25
    15e0:	18 2f       	mov	r17, r24
    15e2:	00 84       	ldd	r0, Z+8	; 0x08
    15e4:	f1 85       	ldd	r31, Z+9	; 0x09
    15e6:	e0 2d       	mov	r30, r0
    15e8:	19 95       	eicall
    15ea:	89 2b       	or	r24, r25
    15ec:	e1 f6       	brne	.-72     	; 0x15a6 <fputc+0x10>
    15ee:	8e 81       	ldd	r24, Y+6	; 0x06
    15f0:	9f 81       	ldd	r25, Y+7	; 0x07
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	9f 83       	std	Y+7, r25	; 0x07
    15f6:	8e 83       	std	Y+6, r24	; 0x06
    15f8:	81 2f       	mov	r24, r17
    15fa:	90 2f       	mov	r25, r16
    15fc:	df 91       	pop	r29
    15fe:	cf 91       	pop	r28
    1600:	1f 91       	pop	r17
    1602:	0f 91       	pop	r16
    1604:	08 95       	ret

00001606 <puts>:
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	e0 91 9a 07 	lds	r30, 0x079A
    1612:	f0 91 9b 07 	lds	r31, 0x079B
    1616:	23 81       	ldd	r18, Z+3	; 0x03
    1618:	21 ff       	sbrs	r18, 1
    161a:	1b c0       	rjmp	.+54     	; 0x1652 <puts+0x4c>
    161c:	8c 01       	movw	r16, r24
    161e:	d0 e0       	ldi	r29, 0x00	; 0
    1620:	c0 e0       	ldi	r28, 0x00	; 0
    1622:	f8 01       	movw	r30, r16
    1624:	81 91       	ld	r24, Z+
    1626:	8f 01       	movw	r16, r30
    1628:	60 91 9a 07 	lds	r22, 0x079A
    162c:	70 91 9b 07 	lds	r23, 0x079B
    1630:	db 01       	movw	r26, r22
    1632:	18 96       	adiw	r26, 0x08	; 8
    1634:	ed 91       	ld	r30, X+
    1636:	fc 91       	ld	r31, X
    1638:	19 97       	sbiw	r26, 0x09	; 9
    163a:	88 23       	and	r24, r24
    163c:	31 f0       	breq	.+12     	; 0x164a <puts+0x44>
    163e:	19 95       	eicall
    1640:	89 2b       	or	r24, r25
    1642:	79 f3       	breq	.-34     	; 0x1622 <puts+0x1c>
    1644:	df ef       	ldi	r29, 0xFF	; 255
    1646:	cf ef       	ldi	r28, 0xFF	; 255
    1648:	ec cf       	rjmp	.-40     	; 0x1622 <puts+0x1c>
    164a:	8a e0       	ldi	r24, 0x0A	; 10
    164c:	19 95       	eicall
    164e:	89 2b       	or	r24, r25
    1650:	19 f0       	breq	.+6      	; 0x1658 <puts+0x52>
    1652:	8f ef       	ldi	r24, 0xFF	; 255
    1654:	9f ef       	ldi	r25, 0xFF	; 255
    1656:	02 c0       	rjmp	.+4      	; 0x165c <puts+0x56>
    1658:	8d 2f       	mov	r24, r29
    165a:	9c 2f       	mov	r25, r28
    165c:	df 91       	pop	r29
    165e:	cf 91       	pop	r28
    1660:	1f 91       	pop	r17
    1662:	0f 91       	pop	r16
    1664:	08 95       	ret

00001666 <calloc>:
    1666:	0f 93       	push	r16
    1668:	1f 93       	push	r17
    166a:	cf 93       	push	r28
    166c:	df 93       	push	r29
    166e:	86 9f       	mul	r24, r22
    1670:	80 01       	movw	r16, r0
    1672:	87 9f       	mul	r24, r23
    1674:	10 0d       	add	r17, r0
    1676:	96 9f       	mul	r25, r22
    1678:	10 0d       	add	r17, r0
    167a:	11 24       	eor	r1, r1
    167c:	c8 01       	movw	r24, r16
    167e:	0d d0       	rcall	.+26     	; 0x169a <malloc>
    1680:	ec 01       	movw	r28, r24
    1682:	00 97       	sbiw	r24, 0x00	; 0
    1684:	21 f0       	breq	.+8      	; 0x168e <calloc+0x28>
    1686:	a8 01       	movw	r20, r16
    1688:	60 e0       	ldi	r22, 0x00	; 0
    168a:	70 e0       	ldi	r23, 0x00	; 0
    168c:	33 d1       	rcall	.+614    	; 0x18f4 <memset>
    168e:	ce 01       	movw	r24, r28
    1690:	df 91       	pop	r29
    1692:	cf 91       	pop	r28
    1694:	1f 91       	pop	r17
    1696:	0f 91       	pop	r16
    1698:	08 95       	ret

0000169a <malloc>:
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	82 30       	cpi	r24, 0x02	; 2
    16a0:	91 05       	cpc	r25, r1
    16a2:	10 f4       	brcc	.+4      	; 0x16a8 <malloc+0xe>
    16a4:	82 e0       	ldi	r24, 0x02	; 2
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	e0 91 a0 07 	lds	r30, 0x07A0
    16ac:	f0 91 a1 07 	lds	r31, 0x07A1
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	c0 e0       	ldi	r28, 0x00	; 0
    16b6:	d0 e0       	ldi	r29, 0x00	; 0
    16b8:	30 97       	sbiw	r30, 0x00	; 0
    16ba:	11 f1       	breq	.+68     	; 0x1700 <malloc+0x66>
    16bc:	40 81       	ld	r20, Z
    16be:	51 81       	ldd	r21, Z+1	; 0x01
    16c0:	48 17       	cp	r20, r24
    16c2:	59 07       	cpc	r21, r25
    16c4:	c0 f0       	brcs	.+48     	; 0x16f6 <malloc+0x5c>
    16c6:	48 17       	cp	r20, r24
    16c8:	59 07       	cpc	r21, r25
    16ca:	61 f4       	brne	.+24     	; 0x16e4 <malloc+0x4a>
    16cc:	82 81       	ldd	r24, Z+2	; 0x02
    16ce:	93 81       	ldd	r25, Z+3	; 0x03
    16d0:	20 97       	sbiw	r28, 0x00	; 0
    16d2:	19 f0       	breq	.+6      	; 0x16da <malloc+0x40>
    16d4:	9b 83       	std	Y+3, r25	; 0x03
    16d6:	8a 83       	std	Y+2, r24	; 0x02
    16d8:	2b c0       	rjmp	.+86     	; 0x1730 <malloc+0x96>
    16da:	90 93 a1 07 	sts	0x07A1, r25
    16de:	80 93 a0 07 	sts	0x07A0, r24
    16e2:	26 c0       	rjmp	.+76     	; 0x1730 <malloc+0x96>
    16e4:	21 15       	cp	r18, r1
    16e6:	31 05       	cpc	r19, r1
    16e8:	19 f0       	breq	.+6      	; 0x16f0 <malloc+0x56>
    16ea:	42 17       	cp	r20, r18
    16ec:	53 07       	cpc	r21, r19
    16ee:	18 f4       	brcc	.+6      	; 0x16f6 <malloc+0x5c>
    16f0:	9a 01       	movw	r18, r20
    16f2:	be 01       	movw	r22, r28
    16f4:	df 01       	movw	r26, r30
    16f6:	ef 01       	movw	r28, r30
    16f8:	02 80       	ldd	r0, Z+2	; 0x02
    16fa:	f3 81       	ldd	r31, Z+3	; 0x03
    16fc:	e0 2d       	mov	r30, r0
    16fe:	dc cf       	rjmp	.-72     	; 0x16b8 <malloc+0x1e>
    1700:	21 15       	cp	r18, r1
    1702:	31 05       	cpc	r19, r1
    1704:	09 f1       	breq	.+66     	; 0x1748 <malloc+0xae>
    1706:	28 1b       	sub	r18, r24
    1708:	39 0b       	sbc	r19, r25
    170a:	24 30       	cpi	r18, 0x04	; 4
    170c:	31 05       	cpc	r19, r1
    170e:	90 f4       	brcc	.+36     	; 0x1734 <malloc+0x9a>
    1710:	12 96       	adiw	r26, 0x02	; 2
    1712:	8d 91       	ld	r24, X+
    1714:	9c 91       	ld	r25, X
    1716:	13 97       	sbiw	r26, 0x03	; 3
    1718:	61 15       	cp	r22, r1
    171a:	71 05       	cpc	r23, r1
    171c:	21 f0       	breq	.+8      	; 0x1726 <malloc+0x8c>
    171e:	fb 01       	movw	r30, r22
    1720:	93 83       	std	Z+3, r25	; 0x03
    1722:	82 83       	std	Z+2, r24	; 0x02
    1724:	04 c0       	rjmp	.+8      	; 0x172e <malloc+0x94>
    1726:	90 93 a1 07 	sts	0x07A1, r25
    172a:	80 93 a0 07 	sts	0x07A0, r24
    172e:	fd 01       	movw	r30, r26
    1730:	32 96       	adiw	r30, 0x02	; 2
    1732:	44 c0       	rjmp	.+136    	; 0x17bc <malloc+0x122>
    1734:	fd 01       	movw	r30, r26
    1736:	e2 0f       	add	r30, r18
    1738:	f3 1f       	adc	r31, r19
    173a:	81 93       	st	Z+, r24
    173c:	91 93       	st	Z+, r25
    173e:	22 50       	subi	r18, 0x02	; 2
    1740:	31 09       	sbc	r19, r1
    1742:	2d 93       	st	X+, r18
    1744:	3c 93       	st	X, r19
    1746:	3a c0       	rjmp	.+116    	; 0x17bc <malloc+0x122>
    1748:	20 91 9e 07 	lds	r18, 0x079E
    174c:	30 91 9f 07 	lds	r19, 0x079F
    1750:	23 2b       	or	r18, r19
    1752:	41 f4       	brne	.+16     	; 0x1764 <malloc+0xca>
    1754:	20 91 04 02 	lds	r18, 0x0204
    1758:	30 91 05 02 	lds	r19, 0x0205
    175c:	30 93 9f 07 	sts	0x079F, r19
    1760:	20 93 9e 07 	sts	0x079E, r18
    1764:	20 91 02 02 	lds	r18, 0x0202
    1768:	30 91 03 02 	lds	r19, 0x0203
    176c:	21 15       	cp	r18, r1
    176e:	31 05       	cpc	r19, r1
    1770:	41 f4       	brne	.+16     	; 0x1782 <malloc+0xe8>
    1772:	2d b7       	in	r18, 0x3d	; 61
    1774:	3e b7       	in	r19, 0x3e	; 62
    1776:	40 91 06 02 	lds	r20, 0x0206
    177a:	50 91 07 02 	lds	r21, 0x0207
    177e:	24 1b       	sub	r18, r20
    1780:	35 0b       	sbc	r19, r21
    1782:	e0 91 9e 07 	lds	r30, 0x079E
    1786:	f0 91 9f 07 	lds	r31, 0x079F
    178a:	e2 17       	cp	r30, r18
    178c:	f3 07       	cpc	r31, r19
    178e:	a0 f4       	brcc	.+40     	; 0x17b8 <malloc+0x11e>
    1790:	2e 1b       	sub	r18, r30
    1792:	3f 0b       	sbc	r19, r31
    1794:	28 17       	cp	r18, r24
    1796:	39 07       	cpc	r19, r25
    1798:	78 f0       	brcs	.+30     	; 0x17b8 <malloc+0x11e>
    179a:	ac 01       	movw	r20, r24
    179c:	4e 5f       	subi	r20, 0xFE	; 254
    179e:	5f 4f       	sbci	r21, 0xFF	; 255
    17a0:	24 17       	cp	r18, r20
    17a2:	35 07       	cpc	r19, r21
    17a4:	48 f0       	brcs	.+18     	; 0x17b8 <malloc+0x11e>
    17a6:	4e 0f       	add	r20, r30
    17a8:	5f 1f       	adc	r21, r31
    17aa:	50 93 9f 07 	sts	0x079F, r21
    17ae:	40 93 9e 07 	sts	0x079E, r20
    17b2:	81 93       	st	Z+, r24
    17b4:	91 93       	st	Z+, r25
    17b6:	02 c0       	rjmp	.+4      	; 0x17bc <malloc+0x122>
    17b8:	e0 e0       	ldi	r30, 0x00	; 0
    17ba:	f0 e0       	ldi	r31, 0x00	; 0
    17bc:	cf 01       	movw	r24, r30
    17be:	df 91       	pop	r29
    17c0:	cf 91       	pop	r28
    17c2:	08 95       	ret

000017c4 <free>:
    17c4:	0f 93       	push	r16
    17c6:	1f 93       	push	r17
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	00 97       	sbiw	r24, 0x00	; 0
    17ce:	09 f4       	brne	.+2      	; 0x17d2 <free+0xe>
    17d0:	8c c0       	rjmp	.+280    	; 0x18ea <free+0x126>
    17d2:	fc 01       	movw	r30, r24
    17d4:	32 97       	sbiw	r30, 0x02	; 2
    17d6:	13 82       	std	Z+3, r1	; 0x03
    17d8:	12 82       	std	Z+2, r1	; 0x02
    17da:	00 91 a0 07 	lds	r16, 0x07A0
    17de:	10 91 a1 07 	lds	r17, 0x07A1
    17e2:	01 15       	cp	r16, r1
    17e4:	11 05       	cpc	r17, r1
    17e6:	81 f4       	brne	.+32     	; 0x1808 <free+0x44>
    17e8:	20 81       	ld	r18, Z
    17ea:	31 81       	ldd	r19, Z+1	; 0x01
    17ec:	82 0f       	add	r24, r18
    17ee:	93 1f       	adc	r25, r19
    17f0:	20 91 9e 07 	lds	r18, 0x079E
    17f4:	30 91 9f 07 	lds	r19, 0x079F
    17f8:	28 17       	cp	r18, r24
    17fa:	39 07       	cpc	r19, r25
    17fc:	79 f5       	brne	.+94     	; 0x185c <free+0x98>
    17fe:	f0 93 9f 07 	sts	0x079F, r31
    1802:	e0 93 9e 07 	sts	0x079E, r30
    1806:	71 c0       	rjmp	.+226    	; 0x18ea <free+0x126>
    1808:	d8 01       	movw	r26, r16
    180a:	40 e0       	ldi	r20, 0x00	; 0
    180c:	50 e0       	ldi	r21, 0x00	; 0
    180e:	ae 17       	cp	r26, r30
    1810:	bf 07       	cpc	r27, r31
    1812:	50 f4       	brcc	.+20     	; 0x1828 <free+0x64>
    1814:	12 96       	adiw	r26, 0x02	; 2
    1816:	2d 91       	ld	r18, X+
    1818:	3c 91       	ld	r19, X
    181a:	13 97       	sbiw	r26, 0x03	; 3
    181c:	ad 01       	movw	r20, r26
    181e:	21 15       	cp	r18, r1
    1820:	31 05       	cpc	r19, r1
    1822:	09 f1       	breq	.+66     	; 0x1866 <free+0xa2>
    1824:	d9 01       	movw	r26, r18
    1826:	f3 cf       	rjmp	.-26     	; 0x180e <free+0x4a>
    1828:	9d 01       	movw	r18, r26
    182a:	da 01       	movw	r26, r20
    182c:	33 83       	std	Z+3, r19	; 0x03
    182e:	22 83       	std	Z+2, r18	; 0x02
    1830:	60 81       	ld	r22, Z
    1832:	71 81       	ldd	r23, Z+1	; 0x01
    1834:	86 0f       	add	r24, r22
    1836:	97 1f       	adc	r25, r23
    1838:	82 17       	cp	r24, r18
    183a:	93 07       	cpc	r25, r19
    183c:	69 f4       	brne	.+26     	; 0x1858 <free+0x94>
    183e:	ec 01       	movw	r28, r24
    1840:	28 81       	ld	r18, Y
    1842:	39 81       	ldd	r19, Y+1	; 0x01
    1844:	26 0f       	add	r18, r22
    1846:	37 1f       	adc	r19, r23
    1848:	2e 5f       	subi	r18, 0xFE	; 254
    184a:	3f 4f       	sbci	r19, 0xFF	; 255
    184c:	31 83       	std	Z+1, r19	; 0x01
    184e:	20 83       	st	Z, r18
    1850:	8a 81       	ldd	r24, Y+2	; 0x02
    1852:	9b 81       	ldd	r25, Y+3	; 0x03
    1854:	93 83       	std	Z+3, r25	; 0x03
    1856:	82 83       	std	Z+2, r24	; 0x02
    1858:	45 2b       	or	r20, r21
    185a:	29 f4       	brne	.+10     	; 0x1866 <free+0xa2>
    185c:	f0 93 a1 07 	sts	0x07A1, r31
    1860:	e0 93 a0 07 	sts	0x07A0, r30
    1864:	42 c0       	rjmp	.+132    	; 0x18ea <free+0x126>
    1866:	13 96       	adiw	r26, 0x03	; 3
    1868:	fc 93       	st	X, r31
    186a:	ee 93       	st	-X, r30
    186c:	12 97       	sbiw	r26, 0x02	; 2
    186e:	ed 01       	movw	r28, r26
    1870:	49 91       	ld	r20, Y+
    1872:	59 91       	ld	r21, Y+
    1874:	9e 01       	movw	r18, r28
    1876:	24 0f       	add	r18, r20
    1878:	35 1f       	adc	r19, r21
    187a:	e2 17       	cp	r30, r18
    187c:	f3 07       	cpc	r31, r19
    187e:	71 f4       	brne	.+28     	; 0x189c <free+0xd8>
    1880:	80 81       	ld	r24, Z
    1882:	91 81       	ldd	r25, Z+1	; 0x01
    1884:	84 0f       	add	r24, r20
    1886:	95 1f       	adc	r25, r21
    1888:	02 96       	adiw	r24, 0x02	; 2
    188a:	11 96       	adiw	r26, 0x01	; 1
    188c:	9c 93       	st	X, r25
    188e:	8e 93       	st	-X, r24
    1890:	82 81       	ldd	r24, Z+2	; 0x02
    1892:	93 81       	ldd	r25, Z+3	; 0x03
    1894:	13 96       	adiw	r26, 0x03	; 3
    1896:	9c 93       	st	X, r25
    1898:	8e 93       	st	-X, r24
    189a:	12 97       	sbiw	r26, 0x02	; 2
    189c:	e0 e0       	ldi	r30, 0x00	; 0
    189e:	f0 e0       	ldi	r31, 0x00	; 0
    18a0:	d8 01       	movw	r26, r16
    18a2:	12 96       	adiw	r26, 0x02	; 2
    18a4:	8d 91       	ld	r24, X+
    18a6:	9c 91       	ld	r25, X
    18a8:	13 97       	sbiw	r26, 0x03	; 3
    18aa:	00 97       	sbiw	r24, 0x00	; 0
    18ac:	19 f0       	breq	.+6      	; 0x18b4 <free+0xf0>
    18ae:	f8 01       	movw	r30, r16
    18b0:	8c 01       	movw	r16, r24
    18b2:	f6 cf       	rjmp	.-20     	; 0x18a0 <free+0xdc>
    18b4:	8d 91       	ld	r24, X+
    18b6:	9c 91       	ld	r25, X
    18b8:	98 01       	movw	r18, r16
    18ba:	2e 5f       	subi	r18, 0xFE	; 254
    18bc:	3f 4f       	sbci	r19, 0xFF	; 255
    18be:	82 0f       	add	r24, r18
    18c0:	93 1f       	adc	r25, r19
    18c2:	20 91 9e 07 	lds	r18, 0x079E
    18c6:	30 91 9f 07 	lds	r19, 0x079F
    18ca:	28 17       	cp	r18, r24
    18cc:	39 07       	cpc	r19, r25
    18ce:	69 f4       	brne	.+26     	; 0x18ea <free+0x126>
    18d0:	30 97       	sbiw	r30, 0x00	; 0
    18d2:	29 f4       	brne	.+10     	; 0x18de <free+0x11a>
    18d4:	10 92 a1 07 	sts	0x07A1, r1
    18d8:	10 92 a0 07 	sts	0x07A0, r1
    18dc:	02 c0       	rjmp	.+4      	; 0x18e2 <free+0x11e>
    18de:	13 82       	std	Z+3, r1	; 0x03
    18e0:	12 82       	std	Z+2, r1	; 0x02
    18e2:	10 93 9f 07 	sts	0x079F, r17
    18e6:	00 93 9e 07 	sts	0x079E, r16
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	08 95       	ret

000018f4 <memset>:
    18f4:	dc 01       	movw	r26, r24
    18f6:	01 c0       	rjmp	.+2      	; 0x18fa <memset+0x6>
    18f8:	6d 93       	st	X+, r22
    18fa:	41 50       	subi	r20, 0x01	; 1
    18fc:	50 40       	sbci	r21, 0x00	; 0
    18fe:	e0 f7       	brcc	.-8      	; 0x18f8 <memset+0x4>
    1900:	08 95       	ret

00001902 <_exit>:
    1902:	f8 94       	cli

00001904 <__stop_program>:
    1904:	ff cf       	rjmp	.-2      	; 0x1904 <__stop_program>
