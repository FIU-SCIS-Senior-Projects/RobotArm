
GccApplication1TelebotFeedBack.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000210  00800200  00001970  00001a04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001970  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000392  00800410  00800410  00001c14  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001c14  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000004bb  00000000  00000000  00001d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001d92  00000000  00000000  000021cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000008a1  00000000  00000000  00003f61  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001171  00000000  00000000  00004802  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000314  00000000  00000000  00005974  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007f4  00000000  00000000  00005c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001141  00000000  00000000  0000647c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000075bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
       2:	00 00       	nop
       4:	83 c0       	rjmp	.+262    	; 0x10c <__bad_interrupt>
       6:	00 00       	nop
       8:	81 c0       	rjmp	.+258    	; 0x10c <__bad_interrupt>
       a:	00 00       	nop
       c:	7f c0       	rjmp	.+254    	; 0x10c <__bad_interrupt>
       e:	00 00       	nop
      10:	7d c0       	rjmp	.+250    	; 0x10c <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c0       	rjmp	.+246    	; 0x10c <__bad_interrupt>
      16:	00 00       	nop
      18:	79 c0       	rjmp	.+242    	; 0x10c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	77 c0       	rjmp	.+238    	; 0x10c <__bad_interrupt>
      1e:	00 00       	nop
      20:	75 c0       	rjmp	.+234    	; 0x10c <__bad_interrupt>
      22:	00 00       	nop
      24:	73 c0       	rjmp	.+230    	; 0x10c <__bad_interrupt>
      26:	00 00       	nop
      28:	71 c0       	rjmp	.+226    	; 0x10c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6f c0       	rjmp	.+222    	; 0x10c <__bad_interrupt>
      2e:	00 00       	nop
      30:	6d c0       	rjmp	.+218    	; 0x10c <__bad_interrupt>
      32:	00 00       	nop
      34:	6b c0       	rjmp	.+214    	; 0x10c <__bad_interrupt>
      36:	00 00       	nop
      38:	69 c0       	rjmp	.+210    	; 0x10c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	67 c0       	rjmp	.+206    	; 0x10c <__bad_interrupt>
      3e:	00 00       	nop
      40:	65 c0       	rjmp	.+202    	; 0x10c <__bad_interrupt>
      42:	00 00       	nop
      44:	63 c0       	rjmp	.+198    	; 0x10c <__bad_interrupt>
      46:	00 00       	nop
      48:	61 c0       	rjmp	.+194    	; 0x10c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5f c0       	rjmp	.+190    	; 0x10c <__bad_interrupt>
      4e:	00 00       	nop
      50:	5d c0       	rjmp	.+186    	; 0x10c <__bad_interrupt>
      52:	00 00       	nop
      54:	5b c0       	rjmp	.+182    	; 0x10c <__bad_interrupt>
      56:	00 00       	nop
      58:	59 c0       	rjmp	.+178    	; 0x10c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	57 c0       	rjmp	.+174    	; 0x10c <__bad_interrupt>
      5e:	00 00       	nop
      60:	55 c0       	rjmp	.+170    	; 0x10c <__bad_interrupt>
      62:	00 00       	nop
      64:	10 c4       	rjmp	.+2080   	; 0x886 <__vector_25>
      66:	00 00       	nop
      68:	51 c0       	rjmp	.+162    	; 0x10c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4f c0       	rjmp	.+158    	; 0x10c <__bad_interrupt>
      6e:	00 00       	nop
      70:	4d c0       	rjmp	.+154    	; 0x10c <__bad_interrupt>
      72:	00 00       	nop
      74:	4b c0       	rjmp	.+150    	; 0x10c <__bad_interrupt>
      76:	00 00       	nop
      78:	49 c0       	rjmp	.+146    	; 0x10c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	47 c0       	rjmp	.+142    	; 0x10c <__bad_interrupt>
      7e:	00 00       	nop
      80:	45 c0       	rjmp	.+138    	; 0x10c <__bad_interrupt>
      82:	00 00       	nop
      84:	43 c0       	rjmp	.+134    	; 0x10c <__bad_interrupt>
      86:	00 00       	nop
      88:	41 c0       	rjmp	.+130    	; 0x10c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3f c0       	rjmp	.+126    	; 0x10c <__bad_interrupt>
      8e:	00 00       	nop
      90:	ff c4       	rjmp	.+2558   	; 0xa90 <__vector_36>
      92:	00 00       	nop
      94:	3b c0       	rjmp	.+118    	; 0x10c <__bad_interrupt>
      96:	00 00       	nop
      98:	39 c0       	rjmp	.+114    	; 0x10c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	37 c0       	rjmp	.+110    	; 0x10c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	35 c0       	rjmp	.+106    	; 0x10c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	33 c0       	rjmp	.+102    	; 0x10c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	31 c0       	rjmp	.+98     	; 0x10c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	2f c0       	rjmp	.+94     	; 0x10c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	2d c0       	rjmp	.+90     	; 0x10c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	2b c0       	rjmp	.+86     	; 0x10c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	29 c0       	rjmp	.+82     	; 0x10c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	27 c0       	rjmp	.+78     	; 0x10c <__bad_interrupt>
      be:	00 00       	nop
      c0:	25 c0       	rjmp	.+74     	; 0x10c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	23 c0       	rjmp	.+70     	; 0x10c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	21 c0       	rjmp	.+66     	; 0x10c <__bad_interrupt>
	...

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d1 e2       	ldi	r29, 0x21	; 33
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
      dc:	14 e0       	ldi	r17, 0x04	; 4
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	e0 e7       	ldi	r30, 0x70	; 112
      e4:	f9 e1       	ldi	r31, 0x19	; 25
      e6:	00 e0       	ldi	r16, 0x00	; 0
      e8:	0b bf       	out	0x3b, r16	; 59
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
      ec:	07 90       	elpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	a0 31       	cpi	r26, 0x10	; 16
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
      f6:	27 e0       	ldi	r18, 0x07	; 7
      f8:	a0 e1       	ldi	r26, 0x10	; 16
      fa:	b4 e0       	ldi	r27, 0x04	; 4
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a2 3a       	cpi	r26, 0xA2	; 162
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
     106:	84 d5       	rcall	.+2824   	; 0xc10 <main>
     108:	0c 94 b6 0c 	jmp	0x196c	; 0x196c <_exit>

0000010c <__bad_interrupt>:
     10c:	79 cf       	rjmp	.-270    	; 0x0 <__vectors>

0000010e <dxl_get_result>:
     10e:	80 91 00 02 	lds	r24, 0x0200
     112:	90 91 01 02 	lds	r25, 0x0201
     116:	08 95       	ret

00000118 <dxl_set_txpacket_id>:
     118:	80 93 12 04 	sts	0x0412, r24
     11c:	08 95       	ret

0000011e <dxl_set_txpacket_instruction>:
     11e:	80 93 14 04 	sts	0x0414, r24
     122:	08 95       	ret

00000124 <dxl_set_txpacket_parameter>:
     124:	fc 01       	movw	r30, r24
     126:	e0 5f       	subi	r30, 0xF0	; 240
     128:	fb 4f       	sbci	r31, 0xFB	; 251
     12a:	65 83       	std	Z+5, r22	; 0x05
     12c:	08 95       	ret

0000012e <dxl_set_txpacket_length>:
     12e:	80 93 13 04 	sts	0x0413, r24
     132:	08 95       	ret

00000134 <dxl_get_rxpacket_error>:
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	90 91 b4 04 	lds	r25, 0x04B4
     13c:	98 23       	and	r25, r24
     13e:	11 f0       	breq	.+4      	; 0x144 <dxl_get_rxpacket_error+0x10>
     140:	21 e0       	ldi	r18, 0x01	; 1
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	c9 01       	movw	r24, r18
     146:	08 95       	ret

00000148 <dxl_get_rxpacket_length>:
     148:	80 91 b3 04 	lds	r24, 0x04B3
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	08 95       	ret

00000150 <dxl_get_rxpacket_parameter>:
     150:	fc 01       	movw	r30, r24
     152:	e0 55       	subi	r30, 0x50	; 80
     154:	fb 4f       	sbci	r31, 0xFB	; 251
     156:	85 81       	ldd	r24, Z+5	; 0x05
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret

0000015c <dxl_makeword>:
     15c:	36 2f       	mov	r19, r22
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	28 0f       	add	r18, r24
     162:	39 1f       	adc	r19, r25
     164:	c9 01       	movw	r24, r18
     166:	08 95       	ret

00000168 <dxl_get_lowbyte>:
     168:	28 2f       	mov	r18, r24
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	c9 01       	movw	r24, r18
     16e:	08 95       	ret

00000170 <dxl_get_highbyte>:
     170:	80 70       	andi	r24, 0x00	; 0
     172:	89 2f       	mov	r24, r25
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	08 95       	ret

00000178 <dxl_rx_packet>:
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	80 91 f8 04 	lds	r24, 0x04F8
     184:	90 91 f9 04 	lds	r25, 0x04F9
     188:	89 2b       	or	r24, r25
     18a:	09 f4       	brne	.+2      	; 0x18e <dxl_rx_packet+0x16>
     18c:	b8 c0       	rjmp	.+368    	; 0x2fe <dxl_rx_packet+0x186>
     18e:	80 91 12 04 	lds	r24, 0x0412
     192:	8e 3f       	cpi	r24, 0xFE	; 254
     194:	09 f4       	brne	.+2      	; 0x198 <dxl_rx_packet+0x20>
     196:	a9 c0       	rjmp	.+338    	; 0x2ea <dxl_rx_packet+0x172>
     198:	80 91 00 02 	lds	r24, 0x0200
     19c:	90 91 01 02 	lds	r25, 0x0201
     1a0:	89 2b       	or	r24, r25
     1a2:	29 f4       	brne	.+10     	; 0x1ae <dxl_rx_packet+0x36>
     1a4:	10 92 f7 04 	sts	0x04F7, r1
     1a8:	86 e0       	ldi	r24, 0x06	; 6
     1aa:	80 93 f6 04 	sts	0x04F6, r24
     1ae:	80 91 f7 04 	lds	r24, 0x04F7
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	60 91 f6 04 	lds	r22, 0x04F6
     1b8:	70 e0       	ldi	r23, 0x00	; 0
     1ba:	68 1b       	sub	r22, r24
     1bc:	79 0b       	sbc	r23, r25
     1be:	80 55       	subi	r24, 0x50	; 80
     1c0:	9b 4f       	sbci	r25, 0xFB	; 251
     1c2:	36 d3       	rcall	.+1644   	; 0x830 <dxl_hal_rx>
     1c4:	90 91 f7 04 	lds	r25, 0x04F7
     1c8:	98 0f       	add	r25, r24
     1ca:	90 93 f7 04 	sts	0x04F7, r25
     1ce:	80 91 f6 04 	lds	r24, 0x04F6
     1d2:	98 17       	cp	r25, r24
     1d4:	18 f4       	brcc	.+6      	; 0x1dc <dxl_rx_packet+0x64>
     1d6:	42 d2       	rcall	.+1156   	; 0x65c <dxl_hal_timeout>
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	71 f0       	breq	.+28     	; 0x1f8 <dxl_rx_packet+0x80>
     1dc:	70 91 f7 04 	lds	r23, 0x04F7
     1e0:	47 2f       	mov	r20, r23
     1e2:	50 e0       	ldi	r21, 0x00	; 0
     1e4:	da 01       	movw	r26, r20
     1e6:	11 97       	sbiw	r26, 0x01	; 1
     1e8:	8a 01       	movw	r16, r20
     1ea:	02 50       	subi	r16, 0x02	; 2
     1ec:	10 40       	sbci	r17, 0x00	; 0
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	ed 01       	movw	r28, r26
     1f2:	c0 55       	subi	r28, 0x50	; 80
     1f4:	db 4f       	sbci	r29, 0xFB	; 251
     1f6:	18 c0       	rjmp	.+48     	; 0x228 <dxl_rx_packet+0xb0>
     1f8:	80 91 f7 04 	lds	r24, 0x04F7
     1fc:	88 23       	and	r24, r24
     1fe:	09 f0       	breq	.+2      	; 0x202 <dxl_rx_packet+0x8a>
     200:	71 c0       	rjmp	.+226    	; 0x2e4 <dxl_rx_packet+0x16c>
     202:	86 e0       	ldi	r24, 0x06	; 6
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	73 c0       	rjmp	.+230    	; 0x2ee <dxl_rx_packet+0x176>
     208:	f9 01       	movw	r30, r18
     20a:	e0 55       	subi	r30, 0x50	; 80
     20c:	fb 4f       	sbci	r31, 0xFB	; 251
     20e:	80 81       	ld	r24, Z
     210:	8f 3f       	cpi	r24, 0xFF	; 255
     212:	19 f4       	brne	.+6      	; 0x21a <dxl_rx_packet+0xa2>
     214:	81 81       	ldd	r24, Z+1	; 0x01
     216:	8f 3f       	cpi	r24, 0xFF	; 255
     218:	61 f0       	breq	.+24     	; 0x232 <dxl_rx_packet+0xba>
     21a:	20 17       	cp	r18, r16
     21c:	31 07       	cpc	r19, r17
     21e:	19 f4       	brne	.+6      	; 0x226 <dxl_rx_packet+0xae>
     220:	88 81       	ld	r24, Y
     222:	8f 3f       	cpi	r24, 0xFF	; 255
     224:	31 f0       	breq	.+12     	; 0x232 <dxl_rx_packet+0xba>
     226:	6f 5f       	subi	r22, 0xFF	; 255
     228:	26 2f       	mov	r18, r22
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	2a 17       	cp	r18, r26
     22e:	3b 07       	cpc	r19, r27
     230:	5c f3       	brlt	.-42     	; 0x208 <dxl_rx_packet+0x90>
     232:	66 23       	and	r22, r22
     234:	a1 f0       	breq	.+40     	; 0x25e <dxl_rx_packet+0xe6>
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	42 1b       	sub	r20, r18
     23a:	53 0b       	sbc	r21, r19
     23c:	08 c0       	rjmp	.+16     	; 0x24e <dxl_rx_packet+0xd6>
     23e:	e0 55       	subi	r30, 0x50	; 80
     240:	fb 4f       	sbci	r31, 0xFB	; 251
     242:	df 01       	movw	r26, r30
     244:	a2 0f       	add	r26, r18
     246:	b3 1f       	adc	r27, r19
     248:	8c 91       	ld	r24, X
     24a:	80 83       	st	Z, r24
     24c:	9f 5f       	subi	r25, 0xFF	; 255
     24e:	e9 2f       	mov	r30, r25
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	e4 17       	cp	r30, r20
     254:	f5 07       	cpc	r31, r21
     256:	9c f3       	brlt	.-26     	; 0x23e <dxl_rx_packet+0xc6>
     258:	76 1b       	sub	r23, r22
     25a:	70 93 f7 04 	sts	0x04F7, r23
     25e:	20 91 f7 04 	lds	r18, 0x04F7
     262:	80 91 f6 04 	lds	r24, 0x04F6
     266:	28 17       	cp	r18, r24
     268:	28 f1       	brcs	.+74     	; 0x2b4 <dxl_rx_packet+0x13c>
     26a:	90 91 12 04 	lds	r25, 0x0412
     26e:	80 91 b2 04 	lds	r24, 0x04B2
     272:	98 17       	cp	r25, r24
     274:	b9 f5       	brne	.+110    	; 0x2e4 <dxl_rx_packet+0x16c>
     276:	60 91 b3 04 	lds	r22, 0x04B3
     27a:	6c 5f       	subi	r22, 0xFC	; 252
     27c:	60 93 f6 04 	sts	0x04F6, r22
     280:	26 17       	cp	r18, r22
     282:	88 f4       	brcc	.+34     	; 0x2a6 <dxl_rx_packet+0x12e>
     284:	82 2f       	mov	r24, r18
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	68 1b       	sub	r22, r24
     28c:	79 0b       	sbc	r23, r25
     28e:	80 55       	subi	r24, 0x50	; 80
     290:	9b 4f       	sbci	r25, 0xFB	; 251
     292:	ce d2       	rcall	.+1436   	; 0x830 <dxl_hal_rx>
     294:	90 91 f7 04 	lds	r25, 0x04F7
     298:	98 0f       	add	r25, r24
     29a:	90 93 f7 04 	sts	0x04F7, r25
     29e:	80 91 f6 04 	lds	r24, 0x04F6
     2a2:	98 17       	cp	r25, r24
     2a4:	38 f0       	brcs	.+14     	; 0x2b4 <dxl_rx_packet+0x13c>
     2a6:	80 91 b3 04 	lds	r24, 0x04B3
     2aa:	a8 2f       	mov	r26, r24
     2ac:	b0 e0       	ldi	r27, 0x00	; 0
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0c c0       	rjmp	.+24     	; 0x2cc <dxl_rx_packet+0x154>
     2b4:	85 e0       	ldi	r24, 0x05	; 5
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	90 93 01 02 	sts	0x0201, r25
     2bc:	80 93 00 02 	sts	0x0200, r24
     2c0:	1e c0       	rjmp	.+60     	; 0x2fe <dxl_rx_packet+0x186>
     2c2:	e0 55       	subi	r30, 0x50	; 80
     2c4:	fb 4f       	sbci	r31, 0xFB	; 251
     2c6:	82 81       	ldd	r24, Z+2	; 0x02
     2c8:	98 0f       	add	r25, r24
     2ca:	2f 5f       	subi	r18, 0xFF	; 255
     2cc:	e2 2f       	mov	r30, r18
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ae 17       	cp	r26, r30
     2d2:	bf 07       	cpc	r27, r31
     2d4:	b4 f7       	brge	.-20     	; 0x2c2 <dxl_rx_packet+0x14a>
     2d6:	a0 55       	subi	r26, 0x50	; 80
     2d8:	bb 4f       	sbci	r27, 0xFB	; 251
     2da:	90 95       	com	r25
     2dc:	13 96       	adiw	r26, 0x03	; 3
     2de:	8c 91       	ld	r24, X
     2e0:	89 17       	cp	r24, r25
     2e2:	19 f0       	breq	.+6      	; 0x2ea <dxl_rx_packet+0x172>
     2e4:	87 e0       	ldi	r24, 0x07	; 7
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <dxl_rx_packet+0x176>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	90 93 01 02 	sts	0x0201, r25
     2f2:	80 93 00 02 	sts	0x0200, r24
     2f6:	10 92 f9 04 	sts	0x04F9, r1
     2fa:	10 92 f8 04 	sts	0x04F8, r1
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	1f 91       	pop	r17
     304:	0f 91       	pop	r16
     306:	08 95       	ret

00000308 <dxl_tx_packet>:
     308:	1f 93       	push	r17
     30a:	80 91 f8 04 	lds	r24, 0x04F8
     30e:	90 91 f9 04 	lds	r25, 0x04F9
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	09 f4       	brne	.+2      	; 0x318 <dxl_tx_packet+0x10>
     316:	5d c0       	rjmp	.+186    	; 0x3d2 <dxl_tx_packet+0xca>
     318:	81 e0       	ldi	r24, 0x01	; 1
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	90 93 f9 04 	sts	0x04F9, r25
     320:	80 93 f8 04 	sts	0x04F8, r24
     324:	80 91 13 04 	lds	r24, 0x0413
     328:	89 39       	cpi	r24, 0x99	; 153
     32a:	40 f4       	brcc	.+16     	; 0x33c <dxl_tx_packet+0x34>
     32c:	90 91 14 04 	lds	r25, 0x0414
     330:	89 2f       	mov	r24, r25
     332:	81 50       	subi	r24, 0x01	; 1
     334:	86 30       	cpi	r24, 0x06	; 6
     336:	28 f0       	brcs	.+10     	; 0x342 <dxl_tx_packet+0x3a>
     338:	93 38       	cpi	r25, 0x83	; 131
     33a:	19 f0       	breq	.+6      	; 0x342 <dxl_tx_packet+0x3a>
     33c:	84 e0       	ldi	r24, 0x04	; 4
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	2f c0       	rjmp	.+94     	; 0x3a0 <dxl_tx_packet+0x98>
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	80 93 10 04 	sts	0x0410, r24
     348:	80 93 11 04 	sts	0x0411, r24
     34c:	80 91 13 04 	lds	r24, 0x0413
     350:	a8 2f       	mov	r26, r24
     352:	b0 e0       	ldi	r27, 0x00	; 0
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	05 c0       	rjmp	.+10     	; 0x364 <dxl_tx_packet+0x5c>
     35a:	e0 5f       	subi	r30, 0xF0	; 240
     35c:	fb 4f       	sbci	r31, 0xFB	; 251
     35e:	82 81       	ldd	r24, Z+2	; 0x02
     360:	98 0f       	add	r25, r24
     362:	2f 5f       	subi	r18, 0xFF	; 255
     364:	e2 2f       	mov	r30, r18
     366:	f0 e0       	ldi	r31, 0x00	; 0
     368:	ae 17       	cp	r26, r30
     36a:	bf 07       	cpc	r27, r31
     36c:	b4 f7       	brge	.-20     	; 0x35a <dxl_tx_packet+0x52>
     36e:	a0 5f       	subi	r26, 0xF0	; 240
     370:	bb 4f       	sbci	r27, 0xFB	; 251
     372:	90 95       	com	r25
     374:	13 96       	adiw	r26, 0x03	; 3
     376:	9c 93       	st	X, r25
     378:	80 91 00 02 	lds	r24, 0x0200
     37c:	90 91 01 02 	lds	r25, 0x0201
     380:	06 97       	sbiw	r24, 0x06	; 6
     382:	02 97       	sbiw	r24, 0x02	; 2
     384:	08 f4       	brcc	.+2      	; 0x388 <dxl_tx_packet+0x80>
     386:	30 d1       	rcall	.+608    	; 0x5e8 <dxl_hal_clear>
     388:	10 91 13 04 	lds	r17, 0x0413
     38c:	1c 5f       	subi	r17, 0xFC	; 252
     38e:	80 e1       	ldi	r24, 0x10	; 16
     390:	94 e0       	ldi	r25, 0x04	; 4
     392:	61 2f       	mov	r22, r17
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	2d d1       	rcall	.+602    	; 0x5f2 <dxl_hal_tx>
     398:	18 17       	cp	r17, r24
     39a:	59 f0       	breq	.+22     	; 0x3b2 <dxl_tx_packet+0xaa>
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	90 93 01 02 	sts	0x0201, r25
     3a4:	80 93 00 02 	sts	0x0200, r24
     3a8:	10 92 f9 04 	sts	0x04F9, r1
     3ac:	10 92 f8 04 	sts	0x04F8, r1
     3b0:	10 c0       	rjmp	.+32     	; 0x3d2 <dxl_tx_packet+0xca>
     3b2:	80 91 14 04 	lds	r24, 0x0414
     3b6:	82 30       	cpi	r24, 0x02	; 2
     3b8:	29 f4       	brne	.+10     	; 0x3c4 <dxl_tx_packet+0xbc>
     3ba:	80 91 16 04 	lds	r24, 0x0416
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	06 96       	adiw	r24, 0x06	; 6
     3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <dxl_tx_packet+0xc0>
     3c4:	86 e0       	ldi	r24, 0x06	; 6
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	38 d1       	rcall	.+624    	; 0x63a <dxl_hal_set_timeout>
     3ca:	10 92 01 02 	sts	0x0201, r1
     3ce:	10 92 00 02 	sts	0x0200, r1
     3d2:	1f 91       	pop	r17
     3d4:	08 95       	ret

000003d6 <dxl_txrx_packet>:
     3d6:	98 df       	rcall	.-208    	; 0x308 <dxl_tx_packet>
     3d8:	80 91 00 02 	lds	r24, 0x0200
     3dc:	90 91 01 02 	lds	r25, 0x0201
     3e0:	89 2b       	or	r24, r25
     3e2:	39 f4       	brne	.+14     	; 0x3f2 <dxl_txrx_packet+0x1c>
     3e4:	c9 de       	rcall	.-622    	; 0x178 <dxl_rx_packet>
     3e6:	80 91 00 02 	lds	r24, 0x0200
     3ea:	90 91 01 02 	lds	r25, 0x0201
     3ee:	05 97       	sbiw	r24, 0x05	; 5
     3f0:	c9 f3       	breq	.-14     	; 0x3e4 <dxl_txrx_packet+0xe>
     3f2:	08 95       	ret

000003f4 <dxl_write_word>:
     3f4:	28 2f       	mov	r18, r24
     3f6:	80 91 f8 04 	lds	r24, 0x04F8
     3fa:	90 91 f9 04 	lds	r25, 0x04F9
     3fe:	89 2b       	or	r24, r25
     400:	91 f4       	brne	.+36     	; 0x426 <dxl_write_word+0x32>
     402:	20 93 12 04 	sts	0x0412, r18
     406:	83 e0       	ldi	r24, 0x03	; 3
     408:	80 93 14 04 	sts	0x0414, r24
     40c:	60 93 15 04 	sts	0x0415, r22
     410:	ca 01       	movw	r24, r20
     412:	40 93 16 04 	sts	0x0416, r20
     416:	80 70       	andi	r24, 0x00	; 0
     418:	90 93 17 04 	sts	0x0417, r25
     41c:	85 e0       	ldi	r24, 0x05	; 5
     41e:	80 93 13 04 	sts	0x0413, r24
     422:	d9 cf       	rjmp	.-78     	; 0x3d6 <dxl_txrx_packet>
     424:	08 95       	ret
     426:	ff cf       	rjmp	.-2      	; 0x426 <dxl_write_word+0x32>

00000428 <dxl_read_word>:
     428:	28 2f       	mov	r18, r24
     42a:	80 91 f8 04 	lds	r24, 0x04F8
     42e:	90 91 f9 04 	lds	r25, 0x04F9
     432:	89 2b       	or	r24, r25
     434:	b1 f4       	brne	.+44     	; 0x462 <dxl_read_word+0x3a>
     436:	20 93 12 04 	sts	0x0412, r18
     43a:	82 e0       	ldi	r24, 0x02	; 2
     43c:	80 93 14 04 	sts	0x0414, r24
     440:	60 93 15 04 	sts	0x0415, r22
     444:	80 93 16 04 	sts	0x0416, r24
     448:	84 e0       	ldi	r24, 0x04	; 4
     44a:	80 93 13 04 	sts	0x0413, r24
     44e:	c3 df       	rcall	.-122    	; 0x3d6 <dxl_txrx_packet>
     450:	30 91 b6 04 	lds	r19, 0x04B6
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	80 91 b5 04 	lds	r24, 0x04B5
     45a:	28 0f       	add	r18, r24
     45c:	31 1d       	adc	r19, r1
     45e:	c9 01       	movw	r24, r18
     460:	08 95       	ret
     462:	ff cf       	rjmp	.-2      	; 0x462 <dxl_read_word+0x3a>

00000464 <dxl_write_byte>:
     464:	28 2f       	mov	r18, r24
     466:	80 91 f8 04 	lds	r24, 0x04F8
     46a:	90 91 f9 04 	lds	r25, 0x04F9
     46e:	89 2b       	or	r24, r25
     470:	71 f4       	brne	.+28     	; 0x48e <dxl_write_byte+0x2a>
     472:	20 93 12 04 	sts	0x0412, r18
     476:	83 e0       	ldi	r24, 0x03	; 3
     478:	80 93 14 04 	sts	0x0414, r24
     47c:	60 93 15 04 	sts	0x0415, r22
     480:	40 93 16 04 	sts	0x0416, r20
     484:	84 e0       	ldi	r24, 0x04	; 4
     486:	80 93 13 04 	sts	0x0413, r24
     48a:	a5 cf       	rjmp	.-182    	; 0x3d6 <dxl_txrx_packet>
     48c:	08 95       	ret
     48e:	ff cf       	rjmp	.-2      	; 0x48e <dxl_write_byte+0x2a>

00000490 <dxl_read_byte>:
     490:	28 2f       	mov	r18, r24
     492:	80 91 f8 04 	lds	r24, 0x04F8
     496:	90 91 f9 04 	lds	r25, 0x04F9
     49a:	89 2b       	or	r24, r25
     49c:	91 f4       	brne	.+36     	; 0x4c2 <dxl_read_byte+0x32>
     49e:	20 93 12 04 	sts	0x0412, r18
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	80 93 14 04 	sts	0x0414, r24
     4a8:	60 93 15 04 	sts	0x0415, r22
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	80 93 16 04 	sts	0x0416, r24
     4b2:	84 e0       	ldi	r24, 0x04	; 4
     4b4:	80 93 13 04 	sts	0x0413, r24
     4b8:	8e df       	rcall	.-228    	; 0x3d6 <dxl_txrx_packet>
     4ba:	80 91 b5 04 	lds	r24, 0x04B5
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	08 95       	ret
     4c2:	ff cf       	rjmp	.-2      	; 0x4c2 <dxl_read_byte+0x32>

000004c4 <dxl_ping>:
     4c4:	28 2f       	mov	r18, r24
     4c6:	80 91 f8 04 	lds	r24, 0x04F8
     4ca:	90 91 f9 04 	lds	r25, 0x04F9
     4ce:	89 2b       	or	r24, r25
     4d0:	51 f4       	brne	.+20     	; 0x4e6 <dxl_ping+0x22>
     4d2:	20 93 12 04 	sts	0x0412, r18
     4d6:	81 e0       	ldi	r24, 0x01	; 1
     4d8:	80 93 14 04 	sts	0x0414, r24
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	80 93 13 04 	sts	0x0413, r24
     4e2:	79 cf       	rjmp	.-270    	; 0x3d6 <dxl_txrx_packet>
     4e4:	08 95       	ret
     4e6:	ff cf       	rjmp	.-2      	; 0x4e6 <dxl_ping+0x22>

000004e8 <dxl_terminate>:
     4e8:	7e c0       	rjmp	.+252    	; 0x5e6 <dxl_hal_close>
     4ea:	08 95       	ret

000004ec <dxl_initialize>:
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	8c 01       	movw	r16, r24
     4f2:	6f 5f       	subi	r22, 0xFF	; 255
     4f4:	7f 4f       	sbci	r23, 0xFF	; 255
     4f6:	88 27       	eor	r24, r24
     4f8:	77 fd       	sbrc	r23, 7
     4fa:	80 95       	com	r24
     4fc:	98 2f       	mov	r25, r24
     4fe:	62 d6       	rcall	.+3268   	; 0x11c4 <__floatsisf>
     500:	9b 01       	movw	r18, r22
     502:	ac 01       	movw	r20, r24
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	74 e2       	ldi	r23, 0x24	; 36
     508:	84 ef       	ldi	r24, 0xF4	; 244
     50a:	99 e4       	ldi	r25, 0x49	; 73
     50c:	c5 d5       	rcall	.+2954   	; 0x1098 <__divsf3>
     50e:	ab 01       	movw	r20, r22
     510:	bc 01       	movw	r22, r24
     512:	c8 01       	movw	r24, r16
     514:	15 d0       	rcall	.+42     	; 0x540 <dxl_hal_open>
     516:	89 2b       	or	r24, r25
     518:	19 f4       	brne	.+6      	; 0x520 <dxl_initialize+0x34>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	0c c0       	rjmp	.+24     	; 0x538 <dxl_initialize+0x4c>
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 01 02 	sts	0x0201, r25
     528:	80 93 00 02 	sts	0x0200, r24
     52c:	10 92 f9 04 	sts	0x04F9, r1
     530:	10 92 f8 04 	sts	0x04F8, r1
     534:	21 e0       	ldi	r18, 0x01	; 1
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	c9 01       	movw	r24, r18
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	08 95       	ret

00000540 <dxl_hal_open>:
     540:	ef 92       	push	r14
     542:	ff 92       	push	r15
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	7a 01       	movw	r14, r20
     54a:	8b 01       	movw	r16, r22
     54c:	82 e4       	ldi	r24, 0x42	; 66
     54e:	80 93 c0 00 	sts	0x00C0, r24
     552:	88 e9       	ldi	r24, 0x98	; 152
     554:	80 93 c1 00 	sts	0x00C1, r24
     558:	86 e0       	ldi	r24, 0x06	; 6
     55a:	80 93 c2 00 	sts	0x00C2, r24
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	74 e2       	ldi	r23, 0x24	; 36
     562:	84 ef       	ldi	r24, 0xF4	; 244
     564:	99 e4       	ldi	r25, 0x49	; 73
     566:	a8 01       	movw	r20, r16
     568:	97 01       	movw	r18, r14
     56a:	96 d5       	rcall	.+2860   	; 0x1098 <__divsf3>
     56c:	fd d5       	rcall	.+3066   	; 0x1168 <__fixunssfsi>
     56e:	61 50       	subi	r22, 0x01	; 1
     570:	70 40       	sbci	r23, 0x00	; 0
     572:	70 93 c5 00 	sts	0x00C5, r23
     576:	60 93 c4 00 	sts	0x00C4, r22
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	74 e2       	ldi	r23, 0x24	; 36
     57e:	84 e7       	ldi	r24, 0x74	; 116
     580:	99 e4       	ldi	r25, 0x49	; 73
     582:	a8 01       	movw	r20, r16
     584:	97 01       	movw	r18, r14
     586:	88 d5       	rcall	.+2832   	; 0x1098 <__divsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	40 e4       	ldi	r20, 0x40	; 64
     58e:	51 e4       	ldi	r21, 0x41	; 65
     590:	cd d6       	rcall	.+3482   	; 0x132c <__mulsf3>
     592:	60 93 90 07 	sts	0x0790, r22
     596:	70 93 91 07 	sts	0x0791, r23
     59a:	80 93 92 07 	sts	0x0792, r24
     59e:	90 93 93 07 	sts	0x0793, r25
     5a2:	20 91 90 07 	lds	r18, 0x0790
     5a6:	30 91 91 07 	lds	r19, 0x0791
     5aa:	40 91 92 07 	lds	r20, 0x0792
     5ae:	50 91 93 07 	lds	r21, 0x0793
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	8a e7       	ldi	r24, 0x7A	; 122
     5b8:	93 e4       	ldi	r25, 0x43	; 67
     5ba:	6e d5       	rcall	.+2780   	; 0x1098 <__divsf3>
     5bc:	d5 d5       	rcall	.+2986   	; 0x1168 <__fixunssfsi>
     5be:	70 93 8f 07 	sts	0x078F, r23
     5c2:	60 93 8e 07 	sts	0x078E, r22
     5c6:	72 98       	cbi	0x0e, 2	; 14
     5c8:	73 9a       	sbi	0x0e, 3	; 14
     5ca:	8f ef       	ldi	r24, 0xFF	; 255
     5cc:	80 93 c6 00 	sts	0x00C6, r24
     5d0:	10 92 fa 05 	sts	0x05FA, r1
     5d4:	10 92 fb 05 	sts	0x05FB, r1
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	08 95       	ret

000005e6 <dxl_hal_close>:
     5e6:	08 95       	ret

000005e8 <dxl_hal_clear>:
     5e8:	80 91 fb 05 	lds	r24, 0x05FB
     5ec:	80 93 fa 05 	sts	0x05FA, r24
     5f0:	08 95       	ret

000005f2 <dxl_hal_tx>:
     5f2:	ac 01       	movw	r20, r24
     5f4:	f8 94       	cli
     5f6:	73 98       	cbi	0x0e, 3	; 14
     5f8:	72 9a       	sbi	0x0e, 2	; 14
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	11 c0       	rjmp	.+34     	; 0x622 <dxl_hal_tx+0x30>
     600:	80 91 c0 00 	lds	r24, 0x00C0
     604:	85 ff       	sbrs	r24, 5
     606:	fc cf       	rjmp	.-8      	; 0x600 <dxl_hal_tx+0xe>
     608:	80 91 c0 00 	lds	r24, 0x00C0
     60c:	80 64       	ori	r24, 0x40	; 64
     60e:	80 93 c0 00 	sts	0x00C0, r24
     612:	fa 01       	movw	r30, r20
     614:	e2 0f       	add	r30, r18
     616:	f3 1f       	adc	r31, r19
     618:	80 81       	ld	r24, Z
     61a:	80 93 c6 00 	sts	0x00C6, r24
     61e:	2f 5f       	subi	r18, 0xFF	; 255
     620:	3f 4f       	sbci	r19, 0xFF	; 255
     622:	26 17       	cp	r18, r22
     624:	37 07       	cpc	r19, r23
     626:	64 f3       	brlt	.-40     	; 0x600 <dxl_hal_tx+0xe>
     628:	80 91 c0 00 	lds	r24, 0x00C0
     62c:	86 ff       	sbrs	r24, 6
     62e:	fc cf       	rjmp	.-8      	; 0x628 <dxl_hal_tx+0x36>
     630:	72 98       	cbi	0x0e, 2	; 14
     632:	73 9a       	sbi	0x0e, 3	; 14
     634:	78 94       	sei
     636:	c9 01       	movw	r24, r18
     638:	08 95       	ret

0000063a <dxl_hal_set_timeout>:
     63a:	10 92 97 07 	sts	0x0797, r1
     63e:	10 92 96 07 	sts	0x0796, r1
     642:	20 91 8e 07 	lds	r18, 0x078E
     646:	30 91 8f 07 	lds	r19, 0x078F
     64a:	26 5f       	subi	r18, 0xF6	; 246
     64c:	3f 4f       	sbci	r19, 0xFF	; 255
     64e:	28 0f       	add	r18, r24
     650:	39 1f       	adc	r19, r25
     652:	30 93 95 07 	sts	0x0795, r19
     656:	20 93 94 07 	sts	0x0794, r18
     65a:	08 95       	ret

0000065c <dxl_hal_timeout>:
     65c:	af 92       	push	r10
     65e:	bf 92       	push	r11
     660:	cf 92       	push	r12
     662:	df 92       	push	r13
     664:	ef 92       	push	r14
     666:	ff 92       	push	r15
     668:	0f 93       	push	r16
     66a:	1f 93       	push	r17
     66c:	80 91 96 07 	lds	r24, 0x0796
     670:	90 91 97 07 	lds	r25, 0x0797
     674:	01 96       	adiw	r24, 0x01	; 1
     676:	90 93 97 07 	sts	0x0797, r25
     67a:	80 93 96 07 	sts	0x0796, r24
     67e:	20 91 96 07 	lds	r18, 0x0796
     682:	30 91 97 07 	lds	r19, 0x0797
     686:	80 91 94 07 	lds	r24, 0x0794
     68a:	90 91 95 07 	lds	r25, 0x0795
     68e:	82 17       	cp	r24, r18
     690:	93 07       	cpc	r25, r19
     692:	18 f4       	brcc	.+6      	; 0x69a <dxl_hal_timeout+0x3e>
     694:	21 e0       	ldi	r18, 0x01	; 1
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	69 c0       	rjmp	.+210    	; 0x76c <dxl_hal_timeout+0x110>
     69a:	a0 90 90 07 	lds	r10, 0x0790
     69e:	b0 90 91 07 	lds	r11, 0x0791
     6a2:	c0 90 92 07 	lds	r12, 0x0792
     6a6:	d0 90 93 07 	lds	r13, 0x0793
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     6aa:	c6 01       	movw	r24, r12
     6ac:	b5 01       	movw	r22, r10
     6ae:	2b ea       	ldi	r18, 0xAB	; 171
     6b0:	3a ea       	ldi	r19, 0xAA	; 170
     6b2:	4a ea       	ldi	r20, 0xAA	; 170
     6b4:	50 e4       	ldi	r21, 0x40	; 64
     6b6:	3a d6       	rcall	.+3188   	; 0x132c <__mulsf3>
     6b8:	7b 01       	movw	r14, r22
     6ba:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	40 e8       	ldi	r20, 0x80	; 128
     6c2:	5f e3       	ldi	r21, 0x3F	; 63
     6c4:	e5 d4       	rcall	.+2506   	; 0x1090 <__cmpsf2>
     6c6:	88 23       	and	r24, r24
     6c8:	14 f4       	brge	.+4      	; 0x6ce <dxl_hal_timeout+0x72>
     6ca:	61 e0       	ldi	r22, 0x01	; 1
     6cc:	4b c0       	rjmp	.+150    	; 0x764 <dxl_hal_timeout+0x108>
		__ticks = 1;
	else if (__tmp > 255)
     6ce:	c8 01       	movw	r24, r16
     6d0:	b7 01       	movw	r22, r14
     6d2:	20 e0       	ldi	r18, 0x00	; 0
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	4f e7       	ldi	r20, 0x7F	; 127
     6d8:	53 e4       	ldi	r21, 0x43	; 67
     6da:	24 d6       	rcall	.+3144   	; 0x1324 <__gesf2>
     6dc:	18 16       	cp	r1, r24
     6de:	0c f0       	brlt	.+2      	; 0x6e2 <dxl_hal_timeout+0x86>
     6e0:	3e c0       	rjmp	.+124    	; 0x75e <dxl_hal_timeout+0x102>
	{
		_delay_ms(__us / 1000.0);
     6e2:	c6 01       	movw	r24, r12
     6e4:	b5 01       	movw	r22, r10
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	4a e7       	ldi	r20, 0x7A	; 122
     6ec:	54 e4       	ldi	r21, 0x44	; 68
     6ee:	d4 d4       	rcall	.+2472   	; 0x1098 <__divsf3>
     6f0:	5b 01       	movw	r10, r22
     6f2:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	4a e7       	ldi	r20, 0x7A	; 122
     6fa:	55 e4       	ldi	r21, 0x45	; 69
     6fc:	17 d6       	rcall	.+3118   	; 0x132c <__mulsf3>
     6fe:	7b 01       	movw	r14, r22
     700:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	40 e8       	ldi	r20, 0x80	; 128
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	c2 d4       	rcall	.+2436   	; 0x1090 <__cmpsf2>
     70c:	88 23       	and	r24, r24
     70e:	1c f4       	brge	.+6      	; 0x716 <dxl_hal_timeout+0xba>
     710:	61 e0       	ldi	r22, 0x01	; 1
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	20 c0       	rjmp	.+64     	; 0x756 <dxl_hal_timeout+0xfa>
		__ticks = 1;
	else if (__tmp > 65535)
     716:	c8 01       	movw	r24, r16
     718:	b7 01       	movw	r22, r14
     71a:	20 e0       	ldi	r18, 0x00	; 0
     71c:	3f ef       	ldi	r19, 0xFF	; 255
     71e:	4f e7       	ldi	r20, 0x7F	; 127
     720:	57 e4       	ldi	r21, 0x47	; 71
     722:	00 d6       	rcall	.+3072   	; 0x1324 <__gesf2>
     724:	18 16       	cp	r1, r24
     726:	a4 f4       	brge	.+40     	; 0x750 <dxl_hal_timeout+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     728:	c6 01       	movw	r24, r12
     72a:	b5 01       	movw	r22, r10
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e2       	ldi	r20, 0x20	; 32
     732:	51 e4       	ldi	r21, 0x41	; 65
     734:	fb d5       	rcall	.+3062   	; 0x132c <__mulsf3>
     736:	18 d5       	rcall	.+2608   	; 0x1168 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     738:	80 e9       	ldi	r24, 0x90	; 144
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	05 c0       	rjmp	.+10     	; 0x748 <dxl_hal_timeout+0xec>
     73e:	fc 01       	movw	r30, r24
     740:	31 97       	sbiw	r30, 0x01	; 1
     742:	f1 f7       	brne	.-4      	; 0x740 <dxl_hal_timeout+0xe4>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     744:	61 50       	subi	r22, 0x01	; 1
     746:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     748:	61 15       	cp	r22, r1
     74a:	71 05       	cpc	r23, r1
     74c:	c1 f7       	brne	.-16     	; 0x73e <dxl_hal_timeout+0xe2>
     74e:	0c c0       	rjmp	.+24     	; 0x768 <dxl_hal_timeout+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     750:	c8 01       	movw	r24, r16
     752:	b7 01       	movw	r22, r14
     754:	09 d5       	rcall	.+2578   	; 0x1168 <__fixunssfsi>
     756:	cb 01       	movw	r24, r22
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	f1 f7       	brne	.-4      	; 0x758 <dxl_hal_timeout+0xfc>
     75c:	05 c0       	rjmp	.+10     	; 0x768 <dxl_hal_timeout+0x10c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     75e:	c8 01       	movw	r24, r16
     760:	b7 01       	movw	r22, r14
     762:	02 d5       	rcall	.+2564   	; 0x1168 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     764:	6a 95       	dec	r22
     766:	f1 f7       	brne	.-4      	; 0x764 <dxl_hal_timeout+0x108>
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	c9 01       	movw	r24, r18
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	ff 90       	pop	r15
     774:	ef 90       	pop	r14
     776:	df 90       	pop	r13
     778:	cf 90       	pop	r12
     77a:	bf 90       	pop	r11
     77c:	af 90       	pop	r10
     77e:	08 95       	ret

00000780 <dxl_hal_get_qstate>:
     780:	90 91 fa 05 	lds	r25, 0x05FA
     784:	80 91 fb 05 	lds	r24, 0x05FB
     788:	98 17       	cp	r25, r24
     78a:	19 f4       	brne	.+6      	; 0x792 <dxl_hal_get_qstate+0x12>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	17 c0       	rjmp	.+46     	; 0x7c0 <dxl_hal_get_qstate+0x40>
     792:	90 91 fa 05 	lds	r25, 0x05FA
     796:	80 91 fb 05 	lds	r24, 0x05FB
     79a:	98 17       	cp	r25, r24
     79c:	38 f4       	brcc	.+14     	; 0x7ac <dxl_hal_get_qstate+0x2c>
     79e:	80 91 fb 05 	lds	r24, 0x05FB
     7a2:	90 91 fa 05 	lds	r25, 0x05FA
     7a6:	28 2f       	mov	r18, r24
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	08 c0       	rjmp	.+16     	; 0x7bc <dxl_hal_get_qstate+0x3c>
     7ac:	80 91 fb 05 	lds	r24, 0x05FB
     7b0:	90 91 fa 05 	lds	r25, 0x05FA
     7b4:	28 2f       	mov	r18, r24
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	20 50       	subi	r18, 0x00	; 0
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	29 1b       	sub	r18, r25
     7be:	31 09       	sbc	r19, r1
     7c0:	c9 01       	movw	r24, r18
     7c2:	08 95       	ret

000007c4 <dxl_hal_put_queue>:
     7c4:	1f 93       	push	r17
     7c6:	18 2f       	mov	r17, r24
     7c8:	db df       	rcall	.-74     	; 0x780 <dxl_hal_get_qstate>
     7ca:	8f 3f       	cpi	r24, 0xFF	; 255
     7cc:	91 05       	cpc	r25, r1
     7ce:	91 f0       	breq	.+36     	; 0x7f4 <dxl_hal_put_queue+0x30>
     7d0:	e0 91 fb 05 	lds	r30, 0x05FB
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	e6 50       	subi	r30, 0x06	; 6
     7d8:	fb 4f       	sbci	r31, 0xFB	; 251
     7da:	10 83       	st	Z, r17
     7dc:	80 91 fb 05 	lds	r24, 0x05FB
     7e0:	8f 3f       	cpi	r24, 0xFF	; 255
     7e2:	19 f4       	brne	.+6      	; 0x7ea <dxl_hal_put_queue+0x26>
     7e4:	10 92 fb 05 	sts	0x05FB, r1
     7e8:	05 c0       	rjmp	.+10     	; 0x7f4 <dxl_hal_put_queue+0x30>
     7ea:	80 91 fb 05 	lds	r24, 0x05FB
     7ee:	8f 5f       	subi	r24, 0xFF	; 255
     7f0:	80 93 fb 05 	sts	0x05FB, r24
     7f4:	1f 91       	pop	r17
     7f6:	08 95       	ret

000007f8 <dxl_hal_get_queue>:
     7f8:	90 91 fa 05 	lds	r25, 0x05FA
     7fc:	80 91 fb 05 	lds	r24, 0x05FB
     800:	98 17       	cp	r25, r24
     802:	11 f4       	brne	.+4      	; 0x808 <dxl_hal_get_queue+0x10>
     804:	ef ef       	ldi	r30, 0xFF	; 255
     806:	12 c0       	rjmp	.+36     	; 0x82c <dxl_hal_get_queue+0x34>
     808:	e0 91 fa 05 	lds	r30, 0x05FA
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	e6 50       	subi	r30, 0x06	; 6
     810:	fb 4f       	sbci	r31, 0xFB	; 251
     812:	e0 81       	ld	r30, Z
     814:	80 91 fa 05 	lds	r24, 0x05FA
     818:	8f 3f       	cpi	r24, 0xFF	; 255
     81a:	19 f4       	brne	.+6      	; 0x822 <dxl_hal_get_queue+0x2a>
     81c:	10 92 fa 05 	sts	0x05FA, r1
     820:	05 c0       	rjmp	.+10     	; 0x82c <dxl_hal_get_queue+0x34>
     822:	80 91 fa 05 	lds	r24, 0x05FA
     826:	8f 5f       	subi	r24, 0xFF	; 255
     828:	80 93 fa 05 	sts	0x05FA, r24
     82c:	8e 2f       	mov	r24, r30
     82e:	08 95       	ret

00000830 <dxl_hal_rx>:
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	7c 01       	movw	r14, r24
     83e:	eb 01       	movw	r28, r22
     840:	90 91 fa 05 	lds	r25, 0x05FA
     844:	80 91 fb 05 	lds	r24, 0x05FB
     848:	98 17       	cp	r25, r24
     84a:	19 f4       	brne	.+6      	; 0x852 <dxl_hal_rx+0x22>
     84c:	00 e0       	ldi	r16, 0x00	; 0
     84e:	10 e0       	ldi	r17, 0x00	; 0
     850:	12 c0       	rjmp	.+36     	; 0x876 <dxl_hal_rx+0x46>
     852:	96 df       	rcall	.-212    	; 0x780 <dxl_hal_get_qstate>
     854:	8c 01       	movw	r16, r24
     856:	c8 17       	cp	r28, r24
     858:	d9 07       	cpc	r29, r25
     85a:	0c f4       	brge	.+2      	; 0x85e <dxl_hal_rx+0x2e>
     85c:	8e 01       	movw	r16, r28
     85e:	c0 e0       	ldi	r28, 0x00	; 0
     860:	d0 e0       	ldi	r29, 0x00	; 0
     862:	06 c0       	rjmp	.+12     	; 0x870 <dxl_hal_rx+0x40>
     864:	c9 df       	rcall	.-110    	; 0x7f8 <dxl_hal_get_queue>
     866:	f7 01       	movw	r30, r14
     868:	ec 0f       	add	r30, r28
     86a:	fd 1f       	adc	r31, r29
     86c:	80 83       	st	Z, r24
     86e:	21 96       	adiw	r28, 0x01	; 1
     870:	c0 17       	cp	r28, r16
     872:	d1 07       	cpc	r29, r17
     874:	bc f3       	brlt	.-18     	; 0x864 <dxl_hal_rx+0x34>
     876:	c8 01       	movw	r24, r16
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	1f 91       	pop	r17
     87e:	0f 91       	pop	r16
     880:	ff 90       	pop	r15
     882:	ef 90       	pop	r14
     884:	08 95       	ret

00000886 <__vector_25>:
     886:	1f 92       	push	r1
     888:	0f 92       	push	r0
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	0f 92       	push	r0
     88e:	0b b6       	in	r0, 0x3b	; 59
     890:	0f 92       	push	r0
     892:	11 24       	eor	r1, r1
     894:	2f 93       	push	r18
     896:	3f 93       	push	r19
     898:	4f 93       	push	r20
     89a:	5f 93       	push	r21
     89c:	6f 93       	push	r22
     89e:	7f 93       	push	r23
     8a0:	8f 93       	push	r24
     8a2:	9f 93       	push	r25
     8a4:	af 93       	push	r26
     8a6:	bf 93       	push	r27
     8a8:	ef 93       	push	r30
     8aa:	ff 93       	push	r31
     8ac:	80 91 c6 00 	lds	r24, 0x00C6
     8b0:	89 df       	rcall	.-238    	; 0x7c4 <dxl_hal_put_queue>
     8b2:	ff 91       	pop	r31
     8b4:	ef 91       	pop	r30
     8b6:	bf 91       	pop	r27
     8b8:	af 91       	pop	r26
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	7f 91       	pop	r23
     8c0:	6f 91       	pop	r22
     8c2:	5f 91       	pop	r21
     8c4:	4f 91       	pop	r20
     8c6:	3f 91       	pop	r19
     8c8:	2f 91       	pop	r18
     8ca:	0f 90       	pop	r0
     8cc:	0b be       	out	0x3b, r0	; 59
     8ce:	0f 90       	pop	r0
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	0f 90       	pop	r0
     8d4:	1f 90       	pop	r1
     8d6:	18 95       	reti

000008d8 <serial_write>:
     8d8:	ac 01       	movw	r20, r24
     8da:	20 e0       	ldi	r18, 0x00	; 0
     8dc:	30 e0       	ldi	r19, 0x00	; 0
     8de:	0c c0       	rjmp	.+24     	; 0x8f8 <serial_write+0x20>
     8e0:	80 91 c8 00 	lds	r24, 0x00C8
     8e4:	85 ff       	sbrs	r24, 5
     8e6:	fc cf       	rjmp	.-8      	; 0x8e0 <serial_write+0x8>
     8e8:	fa 01       	movw	r30, r20
     8ea:	e2 0f       	add	r30, r18
     8ec:	f3 1f       	adc	r31, r19
     8ee:	80 81       	ld	r24, Z
     8f0:	80 93 ce 00 	sts	0x00CE, r24
     8f4:	2f 5f       	subi	r18, 0xFF	; 255
     8f6:	3f 4f       	sbci	r19, 0xFF	; 255
     8f8:	26 17       	cp	r18, r22
     8fa:	37 07       	cpc	r19, r23
     8fc:	8c f3       	brlt	.-30     	; 0x8e0 <serial_write+0x8>
     8fe:	08 95       	ret

00000900 <serial_read>:
     900:	dc 01       	movw	r26, r24
     902:	90 91 7c 06 	lds	r25, 0x067C
     906:	80 91 7d 06 	lds	r24, 0x067D
     90a:	98 17       	cp	r25, r24
     90c:	11 f4       	brne	.+4      	; 0x912 <serial_read+0x12>
     90e:	80 e0       	ldi	r24, 0x00	; 0
     910:	08 95       	ret
     912:	90 91 7c 06 	lds	r25, 0x067C
     916:	80 91 7d 06 	lds	r24, 0x067D
     91a:	98 17       	cp	r25, r24
     91c:	19 f4       	brne	.+6      	; 0x924 <serial_read+0x24>
     91e:	20 e0       	ldi	r18, 0x00	; 0
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	17 c0       	rjmp	.+46     	; 0x952 <serial_read+0x52>
     924:	90 91 7c 06 	lds	r25, 0x067C
     928:	80 91 7d 06 	lds	r24, 0x067D
     92c:	98 17       	cp	r25, r24
     92e:	38 f4       	brcc	.+14     	; 0x93e <serial_read+0x3e>
     930:	80 91 7d 06 	lds	r24, 0x067D
     934:	90 91 7c 06 	lds	r25, 0x067C
     938:	28 2f       	mov	r18, r24
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	08 c0       	rjmp	.+16     	; 0x94e <serial_read+0x4e>
     93e:	80 91 7d 06 	lds	r24, 0x067D
     942:	90 91 7c 06 	lds	r25, 0x067C
     946:	28 2f       	mov	r18, r24
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	20 58       	subi	r18, 0x80	; 128
     94c:	3f 4f       	sbci	r19, 0xFF	; 255
     94e:	29 1b       	sub	r18, r25
     950:	31 09       	sbc	r19, r1
     952:	a9 01       	movw	r20, r18
     954:	62 17       	cp	r22, r18
     956:	73 07       	cpc	r23, r19
     958:	0c f4       	brge	.+2      	; 0x95c <serial_read+0x5c>
     95a:	ab 01       	movw	r20, r22
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	20 c0       	rjmp	.+64     	; 0x9a2 <serial_read+0xa2>
     962:	90 91 7c 06 	lds	r25, 0x067C
     966:	80 91 7d 06 	lds	r24, 0x067D
     96a:	98 17       	cp	r25, r24
     96c:	11 f4       	brne	.+4      	; 0x972 <serial_read+0x72>
     96e:	9f ef       	ldi	r25, 0xFF	; 255
     970:	12 c0       	rjmp	.+36     	; 0x996 <serial_read+0x96>
     972:	e0 91 7c 06 	lds	r30, 0x067C
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	e4 50       	subi	r30, 0x04	; 4
     97a:	fa 4f       	sbci	r31, 0xFA	; 250
     97c:	90 81       	ld	r25, Z
     97e:	80 91 7c 06 	lds	r24, 0x067C
     982:	8f 37       	cpi	r24, 0x7F	; 127
     984:	19 f4       	brne	.+6      	; 0x98c <serial_read+0x8c>
     986:	10 92 7c 06 	sts	0x067C, r1
     98a:	05 c0       	rjmp	.+10     	; 0x996 <serial_read+0x96>
     98c:	80 91 7c 06 	lds	r24, 0x067C
     990:	8f 5f       	subi	r24, 0xFF	; 255
     992:	80 93 7c 06 	sts	0x067C, r24
     996:	fd 01       	movw	r30, r26
     998:	e2 0f       	add	r30, r18
     99a:	f3 1f       	adc	r31, r19
     99c:	90 83       	st	Z, r25
     99e:	2f 5f       	subi	r18, 0xFF	; 255
     9a0:	3f 4f       	sbci	r19, 0xFF	; 255
     9a2:	24 17       	cp	r18, r20
     9a4:	35 07       	cpc	r19, r21
     9a6:	ec f2       	brlt	.-70     	; 0x962 <serial_read+0x62>
     9a8:	84 2f       	mov	r24, r20
     9aa:	08 95       	ret

000009ac <serial_get_qstate>:
     9ac:	90 91 7c 06 	lds	r25, 0x067C
     9b0:	80 91 7d 06 	lds	r24, 0x067D
     9b4:	98 17       	cp	r25, r24
     9b6:	19 f4       	brne	.+6      	; 0x9be <serial_get_qstate+0x12>
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	17 c0       	rjmp	.+46     	; 0x9ec <serial_get_qstate+0x40>
     9be:	90 91 7c 06 	lds	r25, 0x067C
     9c2:	80 91 7d 06 	lds	r24, 0x067D
     9c6:	98 17       	cp	r25, r24
     9c8:	38 f4       	brcc	.+14     	; 0x9d8 <serial_get_qstate+0x2c>
     9ca:	80 91 7d 06 	lds	r24, 0x067D
     9ce:	90 91 7c 06 	lds	r25, 0x067C
     9d2:	28 2f       	mov	r18, r24
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	08 c0       	rjmp	.+16     	; 0x9e8 <serial_get_qstate+0x3c>
     9d8:	80 91 7d 06 	lds	r24, 0x067D
     9dc:	90 91 7c 06 	lds	r25, 0x067C
     9e0:	28 2f       	mov	r18, r24
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	20 58       	subi	r18, 0x80	; 128
     9e6:	3f 4f       	sbci	r19, 0xFF	; 255
     9e8:	29 1b       	sub	r18, r25
     9ea:	31 09       	sbc	r19, r1
     9ec:	c9 01       	movw	r24, r18
     9ee:	08 95       	ret

000009f0 <serial_put_queue>:
     9f0:	48 2f       	mov	r20, r24
     9f2:	90 91 7c 06 	lds	r25, 0x067C
     9f6:	80 91 7d 06 	lds	r24, 0x067D
     9fa:	98 17       	cp	r25, r24
     9fc:	d1 f0       	breq	.+52     	; 0xa32 <serial_put_queue+0x42>
     9fe:	90 91 7c 06 	lds	r25, 0x067C
     a02:	80 91 7d 06 	lds	r24, 0x067D
     a06:	98 17       	cp	r25, r24
     a08:	38 f4       	brcc	.+14     	; 0xa18 <serial_put_queue+0x28>
     a0a:	80 91 7d 06 	lds	r24, 0x067D
     a0e:	90 91 7c 06 	lds	r25, 0x067C
     a12:	28 2f       	mov	r18, r24
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	08 c0       	rjmp	.+16     	; 0xa28 <serial_put_queue+0x38>
     a18:	80 91 7d 06 	lds	r24, 0x067D
     a1c:	90 91 7c 06 	lds	r25, 0x067C
     a20:	28 2f       	mov	r18, r24
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	20 58       	subi	r18, 0x80	; 128
     a26:	3f 4f       	sbci	r19, 0xFF	; 255
     a28:	29 1b       	sub	r18, r25
     a2a:	31 09       	sbc	r19, r1
     a2c:	2f 37       	cpi	r18, 0x7F	; 127
     a2e:	31 05       	cpc	r19, r1
     a30:	91 f0       	breq	.+36     	; 0xa56 <serial_put_queue+0x66>
     a32:	e0 91 7d 06 	lds	r30, 0x067D
     a36:	f0 e0       	ldi	r31, 0x00	; 0
     a38:	e4 50       	subi	r30, 0x04	; 4
     a3a:	fa 4f       	sbci	r31, 0xFA	; 250
     a3c:	40 83       	st	Z, r20
     a3e:	80 91 7d 06 	lds	r24, 0x067D
     a42:	8f 37       	cpi	r24, 0x7F	; 127
     a44:	19 f4       	brne	.+6      	; 0xa4c <serial_put_queue+0x5c>
     a46:	10 92 7d 06 	sts	0x067D, r1
     a4a:	08 95       	ret
     a4c:	80 91 7d 06 	lds	r24, 0x067D
     a50:	8f 5f       	subi	r24, 0xFF	; 255
     a52:	80 93 7d 06 	sts	0x067D, r24
     a56:	08 95       	ret

00000a58 <serial_get_queue>:
     a58:	90 91 7c 06 	lds	r25, 0x067C
     a5c:	80 91 7d 06 	lds	r24, 0x067D
     a60:	98 17       	cp	r25, r24
     a62:	11 f4       	brne	.+4      	; 0xa68 <serial_get_queue+0x10>
     a64:	ef ef       	ldi	r30, 0xFF	; 255
     a66:	12 c0       	rjmp	.+36     	; 0xa8c <serial_get_queue+0x34>
     a68:	e0 91 7c 06 	lds	r30, 0x067C
     a6c:	f0 e0       	ldi	r31, 0x00	; 0
     a6e:	e4 50       	subi	r30, 0x04	; 4
     a70:	fa 4f       	sbci	r31, 0xFA	; 250
     a72:	e0 81       	ld	r30, Z
     a74:	80 91 7c 06 	lds	r24, 0x067C
     a78:	8f 37       	cpi	r24, 0x7F	; 127
     a7a:	19 f4       	brne	.+6      	; 0xa82 <serial_get_queue+0x2a>
     a7c:	10 92 7c 06 	sts	0x067C, r1
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <serial_get_queue+0x34>
     a82:	80 91 7c 06 	lds	r24, 0x067C
     a86:	8f 5f       	subi	r24, 0xFF	; 255
     a88:	80 93 7c 06 	sts	0x067C, r24
     a8c:	8e 2f       	mov	r24, r30
     a8e:	08 95       	ret

00000a90 <__vector_36>:
     a90:	1f 92       	push	r1
     a92:	0f 92       	push	r0
     a94:	0f b6       	in	r0, 0x3f	; 63
     a96:	0f 92       	push	r0
     a98:	0b b6       	in	r0, 0x3b	; 59
     a9a:	0f 92       	push	r0
     a9c:	11 24       	eor	r1, r1
     a9e:	2f 93       	push	r18
     aa0:	3f 93       	push	r19
     aa2:	4f 93       	push	r20
     aa4:	5f 93       	push	r21
     aa6:	6f 93       	push	r22
     aa8:	7f 93       	push	r23
     aaa:	8f 93       	push	r24
     aac:	9f 93       	push	r25
     aae:	af 93       	push	r26
     ab0:	bf 93       	push	r27
     ab2:	ef 93       	push	r30
     ab4:	ff 93       	push	r31
     ab6:	80 91 ce 00 	lds	r24, 0x00CE
     aba:	9a df       	rcall	.-204    	; 0x9f0 <serial_put_queue>
     abc:	ff 91       	pop	r31
     abe:	ef 91       	pop	r30
     ac0:	bf 91       	pop	r27
     ac2:	af 91       	pop	r26
     ac4:	9f 91       	pop	r25
     ac6:	8f 91       	pop	r24
     ac8:	7f 91       	pop	r23
     aca:	6f 91       	pop	r22
     acc:	5f 91       	pop	r21
     ace:	4f 91       	pop	r20
     ad0:	3f 91       	pop	r19
     ad2:	2f 91       	pop	r18
     ad4:	0f 90       	pop	r0
     ad6:	0b be       	out	0x3b, r0	; 59
     ad8:	0f 90       	pop	r0
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	0f 90       	pop	r0
     ade:	1f 90       	pop	r1
     ae0:	18 95       	reti

00000ae2 <std_putchar>:
     ae2:	df 93       	push	r29
     ae4:	cf 93       	push	r28
     ae6:	0f 92       	push	r0
     ae8:	0f 92       	push	r0
     aea:	cd b7       	in	r28, 0x3d	; 61
     aec:	de b7       	in	r29, 0x3e	; 62
     aee:	98 2f       	mov	r25, r24
     af0:	8a 30       	cpi	r24, 0x0A	; 10
     af2:	99 f4       	brne	.+38     	; 0xb1a <std_putchar+0x38>
     af4:	8d e0       	ldi	r24, 0x0D	; 13
     af6:	89 83       	std	Y+1, r24	; 0x01
     af8:	9a 83       	std	Y+2, r25	; 0x02
     afa:	fe 01       	movw	r30, r28
     afc:	31 96       	adiw	r30, 0x01	; 1
     afe:	9e 01       	movw	r18, r28
     b00:	2d 5f       	subi	r18, 0xFD	; 253
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	80 91 c8 00 	lds	r24, 0x00C8
     b08:	85 ff       	sbrs	r24, 5
     b0a:	fc cf       	rjmp	.-8      	; 0xb04 <std_putchar+0x22>
     b0c:	81 91       	ld	r24, Z+
     b0e:	80 93 ce 00 	sts	0x00CE, r24
     b12:	e2 17       	cp	r30, r18
     b14:	f3 07       	cpc	r31, r19
     b16:	b1 f7       	brne	.-20     	; 0xb04 <std_putchar+0x22>
     b18:	06 c0       	rjmp	.+12     	; 0xb26 <std_putchar+0x44>
     b1a:	80 91 c8 00 	lds	r24, 0x00C8
     b1e:	85 ff       	sbrs	r24, 5
     b20:	fc cf       	rjmp	.-8      	; 0xb1a <std_putchar+0x38>
     b22:	90 93 ce 00 	sts	0x00CE, r25
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0f 90       	pop	r0
     b2c:	0f 90       	pop	r0
     b2e:	cf 91       	pop	r28
     b30:	df 91       	pop	r29
     b32:	08 95       	ret

00000b34 <std_getchar>:
     b34:	90 91 7c 06 	lds	r25, 0x067C
     b38:	80 91 7d 06 	lds	r24, 0x067D
     b3c:	98 17       	cp	r25, r24
     b3e:	d1 f3       	breq	.-12     	; 0xb34 <std_getchar>
     b40:	90 91 7c 06 	lds	r25, 0x067C
     b44:	80 91 7d 06 	lds	r24, 0x067D
     b48:	98 17       	cp	r25, r24
     b4a:	38 f4       	brcc	.+14     	; 0xb5a <std_getchar+0x26>
     b4c:	80 91 7d 06 	lds	r24, 0x067D
     b50:	90 91 7c 06 	lds	r25, 0x067C
     b54:	28 2f       	mov	r18, r24
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	08 c0       	rjmp	.+16     	; 0xb6a <std_getchar+0x36>
     b5a:	80 91 7d 06 	lds	r24, 0x067D
     b5e:	90 91 7c 06 	lds	r25, 0x067C
     b62:	28 2f       	mov	r18, r24
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	20 58       	subi	r18, 0x80	; 128
     b68:	3f 4f       	sbci	r19, 0xFF	; 255
     b6a:	29 1b       	sub	r18, r25
     b6c:	31 09       	sbc	r19, r1
     b6e:	23 2b       	or	r18, r19
     b70:	09 f3       	breq	.-62     	; 0xb34 <std_getchar>
     b72:	90 91 7c 06 	lds	r25, 0x067C
     b76:	80 91 7d 06 	lds	r24, 0x067D
     b7a:	98 17       	cp	r25, r24
     b7c:	11 f4       	brne	.+4      	; 0xb82 <std_getchar+0x4e>
     b7e:	ef ef       	ldi	r30, 0xFF	; 255
     b80:	15 c0       	rjmp	.+42     	; 0xbac <std_getchar+0x78>
     b82:	e0 91 7c 06 	lds	r30, 0x067C
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	e4 50       	subi	r30, 0x04	; 4
     b8a:	fa 4f       	sbci	r31, 0xFA	; 250
     b8c:	e0 81       	ld	r30, Z
     b8e:	80 91 7c 06 	lds	r24, 0x067C
     b92:	8f 37       	cpi	r24, 0x7F	; 127
     b94:	19 f4       	brne	.+6      	; 0xb9c <std_getchar+0x68>
     b96:	10 92 7c 06 	sts	0x067C, r1
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <std_getchar+0x72>
     b9c:	80 91 7c 06 	lds	r24, 0x067C
     ba0:	8f 5f       	subi	r24, 0xFF	; 255
     ba2:	80 93 7c 06 	sts	0x067C, r24
     ba6:	ed 30       	cpi	r30, 0x0D	; 13
     ba8:	09 f4       	brne	.+2      	; 0xbac <std_getchar+0x78>
     baa:	ea e0       	ldi	r30, 0x0A	; 10
     bac:	8e 2f       	mov	r24, r30
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	08 95       	ret

00000bb2 <serial_initialize>:
     bb2:	08 d3       	rcall	.+1552   	; 0x11c4 <__floatsisf>
     bb4:	9b 01       	movw	r18, r22
     bb6:	ac 01       	movw	r20, r24
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	74 e2       	ldi	r23, 0x24	; 36
     bbc:	84 ef       	ldi	r24, 0xF4	; 244
     bbe:	99 e4       	ldi	r25, 0x49	; 73
     bc0:	6b d2       	rcall	.+1238   	; 0x1098 <__divsf3>
     bc2:	d2 d2       	rcall	.+1444   	; 0x1168 <__fixunssfsi>
     bc4:	61 50       	subi	r22, 0x01	; 1
     bc6:	70 40       	sbci	r23, 0x00	; 0
     bc8:	22 e4       	ldi	r18, 0x42	; 66
     bca:	20 93 c8 00 	sts	0x00C8, r18
     bce:	28 e9       	ldi	r18, 0x98	; 152
     bd0:	20 93 c9 00 	sts	0x00C9, r18
     bd4:	26 e0       	ldi	r18, 0x06	; 6
     bd6:	20 93 ca 00 	sts	0x00CA, r18
     bda:	2f ef       	ldi	r18, 0xFF	; 255
     bdc:	20 93 ce 00 	sts	0x00CE, r18
     be0:	10 92 7c 06 	sts	0x067C, r1
     be4:	10 92 7d 06 	sts	0x067D, r1
     be8:	27 2f       	mov	r18, r23
     bea:	33 27       	eor	r19, r19
     bec:	27 fd       	sbrc	r18, 7
     bee:	3a 95       	dec	r19
     bf0:	20 93 cd 00 	sts	0x00CD, r18
     bf4:	60 93 cc 00 	sts	0x00CC, r22
     bf8:	72 98       	cbi	0x0e, 2	; 14
     bfa:	73 9a       	sbi	0x0e, 3	; 14
     bfc:	81 e7       	ldi	r24, 0x71	; 113
     bfe:	95 e0       	ldi	r25, 0x05	; 5
     c00:	6a e9       	ldi	r22, 0x9A	; 154
     c02:	75 e0       	ldi	r23, 0x05	; 5
     c04:	75 d4       	rcall	.+2282   	; 0x14f0 <fdevopen>
     c06:	90 93 7f 06 	sts	0x067F, r25
     c0a:	80 93 7e 06 	sts	0x067E, r24
     c0e:	08 95       	ret

00000c10 <main>:

int gainCounter = 0;


int main(void)
{
     c10:	cf 93       	push	r28
     c12:	df 93       	push	r29
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	ea 97       	sbiw	r28, 0x3a	; 58
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	f8 94       	cli
     c1e:	de bf       	out	0x3e, r29	; 62
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	cd bf       	out	0x3d, r28	; 61
	unsigned short currentPosition[14];
	unsigned short servoIdList[14] = {10, 11, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35};
     c24:	8c e1       	ldi	r24, 0x1C	; 28
     c26:	e8 e0       	ldi	r30, 0x08	; 8
     c28:	f2 e0       	ldi	r31, 0x02	; 2
     c2a:	de 01       	movw	r26, r28
     c2c:	5d 96       	adiw	r26, 0x1d	; 29
     c2e:	01 90       	ld	r0, Z+
     c30:	0d 92       	st	X+, r0
     c32:	8a 95       	dec	r24
     c34:	e1 f7       	brne	.-8      	; 0xc2e <main+0x1e>
	int servoSpeed = 0;
	int pGain = 1;
	int iGain = 0;
	int dGain = 0;
	//int Value = 0;
	msgBuf2[0] = '<';
     c36:	e4 e8       	ldi	r30, 0x84	; 132
     c38:	f6 e0       	ldi	r31, 0x06	; 6
     c3a:	8c e3       	ldi	r24, 0x3C	; 60
     c3c:	80 83       	st	Z, r24
	msgBuf2[3] = ' ';
     c3e:	80 e2       	ldi	r24, 0x20	; 32
     c40:	83 83       	std	Z+3, r24	; 0x03
	msgBuf2[8] = '>';
     c42:	8e e3       	ldi	r24, 0x3E	; 62
     c44:	80 87       	std	Z+8, r24	; 0x08
	msgBuf2[9] = '\0';
     c46:	11 86       	std	Z+9, r1	; 0x09
	serial_initialize(57600);
     c48:	60 e0       	ldi	r22, 0x00	; 0
     c4a:	71 ee       	ldi	r23, 0xE1	; 225
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	b0 df       	rcall	.-160    	; 0xbb2 <serial_initialize>
	dxl_initialize(0, DEFAULT_BAUDNUM); // Not using device index
     c52:	61 e0       	ldi	r22, 0x01	; 1
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	48 dc       	rcall	.-1904   	; 0x4ec <dxl_initialize>
	sei();	// Interrupt Enable	
     c5c:	78 94       	sei
	
//	printf( "\n\nRead/Write example for CM-700\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.1 (0819-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.2 (1023-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.3 (1125-2013)\n\n" );
	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.4 (0222-2016)\n\n" );
     c5e:	84 e2       	ldi	r24, 0x24	; 36
     c60:	92 e0       	ldi	r25, 0x02	; 2
     c62:	06 d5       	rcall	.+2572   	; 0x1670 <puts>
     c64:	6e 01       	movw	r12, r28
     c66:	89 e3       	ldi	r24, 0x39	; 57
     c68:	c8 0e       	add	r12, r24
     c6a:	d1 1c       	adc	r13, r1
     c6c:	fe 01       	movw	r30, r28
     c6e:	7d 96       	adiw	r30, 0x1d	; 29
     c70:	7f 01       	movw	r14, r30

	for( int i = 0; i < 14; i++)
	{
		//Set PID values
		dxl_write_word(servoIdList[i], P_PGAIN, pGain);
     c72:	f7 01       	movw	r30, r14
     c74:	01 91       	ld	r16, Z+
     c76:	11 91       	ld	r17, Z+
     c78:	7f 01       	movw	r14, r30
     c7a:	41 e0       	ldi	r20, 0x01	; 1
     c7c:	50 e0       	ldi	r21, 0x00	; 0
     c7e:	6c e1       	ldi	r22, 0x1C	; 28
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	c8 01       	movw	r24, r16
     c84:	b7 db       	rcall	.-2194   	; 0x3f4 <dxl_write_word>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c86:	8f e1       	ldi	r24, 0x1F	; 31
     c88:	9e e4       	ldi	r25, 0x4E	; 78
     c8a:	01 97       	sbiw	r24, 0x01	; 1
     c8c:	f1 f7       	brne	.-4      	; 0xc8a <main+0x7a>
     c8e:	00 c0       	rjmp	.+0      	; 0xc90 <main+0x80>
     c90:	00 00       	nop
		_delay_ms(5);
		dxl_write_word(servoIdList[i], P_IGAIN, iGain);
     c92:	40 e0       	ldi	r20, 0x00	; 0
     c94:	50 e0       	ldi	r21, 0x00	; 0
     c96:	6b e1       	ldi	r22, 0x1B	; 27
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	c8 01       	movw	r24, r16
     c9c:	ab db       	rcall	.-2218   	; 0x3f4 <dxl_write_word>
     c9e:	ef e1       	ldi	r30, 0x1F	; 31
     ca0:	fe e4       	ldi	r31, 0x4E	; 78
     ca2:	31 97       	sbiw	r30, 0x01	; 1
     ca4:	f1 f7       	brne	.-4      	; 0xca2 <main+0x92>
     ca6:	00 c0       	rjmp	.+0      	; 0xca8 <main+0x98>
     ca8:	00 00       	nop
		_delay_ms(5);
		dxl_write_word(servoIdList[i], P_DGAIN, dGain);
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	6a e1       	ldi	r22, 0x1A	; 26
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	c8 01       	movw	r24, r16
     cb4:	9f db       	rcall	.-2242   	; 0x3f4 <dxl_write_word>
     cb6:	8f e1       	ldi	r24, 0x1F	; 31
     cb8:	9e e4       	ldi	r25, 0x4E	; 78
     cba:	01 97       	sbiw	r24, 0x01	; 1
     cbc:	f1 f7       	brne	.-4      	; 0xcba <main+0xaa>
     cbe:	00 c0       	rjmp	.+0      	; 0xcc0 <main+0xb0>
     cc0:	00 00       	nop
		_delay_ms(5);
		// Set goal speed
		dxl_write_word(servoIdList[i], P_GOAL_SPEED_L, SERVO_SPEED_DEFAULT_VALUE);
     cc2:	44 e6       	ldi	r20, 0x64	; 100
     cc4:	50 e0       	ldi	r21, 0x00	; 0
     cc6:	60 e2       	ldi	r22, 0x20	; 32
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	c8 01       	movw	r24, r16
     ccc:	93 db       	rcall	.-2266   	; 0x3f4 <dxl_write_word>
     cce:	ef e1       	ldi	r30, 0x1F	; 31
     cd0:	fe e4       	ldi	r31, 0x4E	; 78
     cd2:	31 97       	sbiw	r30, 0x01	; 1
     cd4:	f1 f7       	brne	.-4      	; 0xcd2 <main+0xc2>
     cd6:	00 c0       	rjmp	.+0      	; 0xcd8 <main+0xc8>
     cd8:	00 00       	nop
		_delay_ms(5);
		dxl_write_word(servoIdList[i], P_STATUS_RETURN_LEVEL, 1);
     cda:	41 e0       	ldi	r20, 0x01	; 1
     cdc:	50 e0       	ldi	r21, 0x00	; 0
     cde:	60 e1       	ldi	r22, 0x10	; 16
     ce0:	70 e0       	ldi	r23, 0x00	; 0
     ce2:	c8 01       	movw	r24, r16
     ce4:	87 db       	rcall	.-2290   	; 0x3f4 <dxl_write_word>
     ce6:	8f e1       	ldi	r24, 0x1F	; 31
     ce8:	9e e4       	ldi	r25, 0x4E	; 78
     cea:	01 97       	sbiw	r24, 0x01	; 1
     cec:	f1 f7       	brne	.-4      	; 0xcea <main+0xda>
     cee:	00 c0       	rjmp	.+0      	; 0xcf0 <main+0xe0>
     cf0:	00 00       	nop
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.1 (0819-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.2 (1023-2013)\n\n" );
//	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.3 (1125-2013)\n\n" );
	printf( "\n\nTeleBot Arm Controller (CM-700) ver-0.1.4 (0222-2016)\n\n" );

	for( int i = 0; i < 14; i++)
     cf2:	ec 14       	cp	r14, r12
     cf4:	fd 04       	cpc	r15, r13
     cf6:	09 f0       	breq	.+2      	; 0xcfa <main+0xea>
     cf8:	bc cf       	rjmp	.-136    	; 0xc72 <main+0x62>
		_delay_ms(5);
	}
	
	while(1)
	{	
		unsigned char ReceivedData = getchar();		
     cfa:	0f 2e       	mov	r0, r31
     cfc:	f8 e9       	ldi	r31, 0x98	; 152
     cfe:	cf 2e       	mov	r12, r31
     d00:	f7 e0       	ldi	r31, 0x07	; 7
     d02:	df 2e       	mov	r13, r31
     d04:	f0 2d       	mov	r31, r0
			if(CommStatus == COMM_RXSUCCESS)
			{
				if(currentPosition[j] != wPresentPos)
				{
					currentPosition[j] = wPresentPos;
					msgBuf2[1] = servoID/10 + '0';
     d06:	0f 2e       	mov	r0, r31
     d08:	f4 e8       	ldi	r31, 0x84	; 132
     d0a:	4f 2e       	mov	r4, r31
     d0c:	f6 e0       	ldi	r31, 0x06	; 6
     d0e:	5f 2e       	mov	r5, r31
     d10:	f0 2d       	mov	r31, r0
     d12:	0f 2e       	mov	r0, r31
     d14:	fe e8       	ldi	r31, 0x8E	; 142
     d16:	af 2e       	mov	r10, r31
     d18:	f6 e0       	ldi	r31, 0x06	; 6
     d1a:	bf 2e       	mov	r11, r31
     d1c:	f0 2d       	mov	r31, r0
     d1e:	49 ae       	std	Y+57, r4	; 0x39
     d20:	5a ae       	std	Y+58, r5	; 0x3a
		_delay_ms(5);
	}
	
	while(1)
	{	
		unsigned char ReceivedData = getchar();		
     d22:	f6 01       	movw	r30, r12
     d24:	80 81       	ld	r24, Z
     d26:	91 81       	ldd	r25, Z+1	; 0x01
     d28:	2d d4       	rcall	.+2138   	; 0x1584 <fgetc>
		if(ReceivedData == '<')
     d2a:	8c 33       	cpi	r24, 0x3C	; 60
     d2c:	29 f4       	brne	.+10     	; 0xd38 <main+0x128>
		{
			msgBufPointer = 0;
     d2e:	10 92 83 06 	sts	0x0683, r1
     d32:	10 92 82 06 	sts	0x0682, r1
     d36:	9d c1       	rjmp	.+826    	; 0x1072 <main+0x462>
		}
		else if(ReceivedData == '>')
     d38:	8e 33       	cpi	r24, 0x3E	; 62
     d3a:	09 f0       	breq	.+2      	; 0xd3e <main+0x12e>
     d3c:	23 c1       	rjmp	.+582    	; 0xf84 <main+0x374>
		{
			msgBuf0[msgBufPointer]='\0';
     d3e:	e0 91 82 06 	lds	r30, 0x0682
     d42:	f0 91 83 06 	lds	r31, 0x0683
     d46:	e2 57       	subi	r30, 0x72	; 114
     d48:	f9 4f       	sbci	r31, 0xF9	; 249
     d4a:	10 82       	st	Z, r1
			memcpy ( msgBuf1, msgBuf0, strlen((char*)msgBuf0) );
     d4c:	ee e8       	ldi	r30, 0x8E	; 142
     d4e:	f6 e0       	ldi	r31, 0x06	; 6
     d50:	01 90       	ld	r0, Z+
     d52:	00 20       	and	r0, r0
     d54:	e9 f7       	brne	.-6      	; 0xd50 <main+0x140>
     d56:	31 97       	sbiw	r30, 0x01	; 1
     d58:	af 01       	movw	r20, r30
     d5a:	4e 58       	subi	r20, 0x8E	; 142
     d5c:	56 40       	sbci	r21, 0x06	; 6
     d5e:	6e e8       	ldi	r22, 0x8E	; 142
     d60:	76 e0       	ldi	r23, 0x06	; 6
     d62:	8e e0       	ldi	r24, 0x0E	; 14
     d64:	97 e0       	ldi	r25, 0x07	; 7
     d66:	8c d3       	rcall	.+1816   	; 0x1480 <memcpy>
//			printf("(1) %s-%s\n",msgBuf0,msgBuf1);
			char * pch1;
			char * pch2;
			int cnt = 0;
			pch1 = strtok ((char*)msgBuf0," ");
     d68:	6d e5       	ldi	r22, 0x5D	; 93
     d6a:	72 e0       	ldi	r23, 0x02	; 2
     d6c:	8e e8       	ldi	r24, 0x8E	; 142
     d6e:	96 e0       	ldi	r25, 0x06	; 6
     d70:	84 d3       	rcall	.+1800   	; 0x147a <strtok>
			while (pch1 != NULL)
     d72:	89 2b       	or	r24, r25
     d74:	09 f4       	brne	.+2      	; 0xd78 <main+0x168>
     d76:	86 c1       	rjmp	.+780    	; 0x1084 <main+0x474>
     d78:	00 e0       	ldi	r16, 0x00	; 0
     d7a:	10 e0       	ldi	r17, 0x00	; 0
			{
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
     d7c:	0f 5f       	subi	r16, 0xFF	; 255
     d7e:	1f 4f       	sbci	r17, 0xFF	; 255
				pch1 = strtok (NULL, " ");
     d80:	6d e5       	ldi	r22, 0x5D	; 93
     d82:	72 e0       	ldi	r23, 0x02	; 2
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	78 d3       	rcall	.+1776   	; 0x147a <strtok>
//			printf("(1) %s-%s\n",msgBuf0,msgBuf1);
			char * pch1;
			char * pch2;
			int cnt = 0;
			pch1 = strtok ((char*)msgBuf0," ");
			while (pch1 != NULL)
     d8a:	89 2b       	or	r24, r25
     d8c:	b9 f7       	brne	.-18     	; 0xd7c <main+0x16c>
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
				pch1 = strtok (NULL, " ");
			}
			
			pch2 = strtok ((char*)msgBuf1," ");
     d8e:	6d e5       	ldi	r22, 0x5D	; 93
     d90:	72 e0       	ldi	r23, 0x02	; 2
     d92:	8e e0       	ldi	r24, 0x0E	; 14
     d94:	97 e0       	ldi	r25, 0x07	; 7
     d96:	71 d3       	rcall	.+1762   	; 0x147a <strtok>
//			printf("(2) %s-%s\n",msgBuf1,pch2);
			if ( cnt == 1 )
     d98:	01 30       	cpi	r16, 0x01	; 1
     d9a:	11 05       	cpc	r17, r1
     d9c:	09 f4       	brne	.+2      	; 0xda0 <main+0x190>
     d9e:	e6 c0       	rjmp	.+460    	; 0xf6c <main+0x35c>
				if(strncmp (pch2,"gn",2)==0)
				{
					//printf("cm-700\n");
				}
			}
			else if (cnt == 2)
     da0:	02 30       	cpi	r16, 0x02	; 2
     da2:	11 05       	cpc	r17, r1
     da4:	49 f5       	brne	.+82     	; 0xdf8 <main+0x1e8>
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL)
     da6:	00 97       	sbiw	r24, 0x00	; 0
     da8:	d9 f0       	breq	.+54     	; 0xde0 <main+0x1d0>
     daa:	88 24       	eor	r8, r8
     dac:	8a 94       	dec	r8
     dae:	98 2c       	mov	r9, r8
     db0:	ee 24       	eor	r14, r14
     db2:	ea 94       	dec	r14
     db4:	fe 2c       	mov	r15, r14
				{
					//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 2)
     db6:	02 30       	cpi	r16, 0x02	; 2
     db8:	11 05       	cpc	r17, r1
     dba:	19 f4       	brne	.+6      	; 0xdc2 <main+0x1b2>
					{
						servoID = atoi(pch2);
     dbc:	41 d3       	rcall	.+1666   	; 0x1440 <atoi>
     dbe:	7c 01       	movw	r14, r24
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <main+0x1bc>
					}
					else if (cnt == 1)
     dc2:	01 30       	cpi	r16, 0x01	; 1
     dc4:	11 05       	cpc	r17, r1
     dc6:	11 f4       	brne	.+4      	; 0xdcc <main+0x1bc>
					{
						servoPosition = atoi(pch2);
     dc8:	3b d3       	rcall	.+1654   	; 0x1440 <atoi>
     dca:	4c 01       	movw	r8, r24
					}
					cnt--;
     dcc:	01 50       	subi	r16, 0x01	; 1
     dce:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     dd0:	6d e5       	ldi	r22, 0x5D	; 93
     dd2:	72 e0       	ldi	r23, 0x02	; 2
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	50 d3       	rcall	.+1696   	; 0x147a <strtok>
			else if (cnt == 2)
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL)
     dda:	00 97       	sbiw	r24, 0x00	; 0
     ddc:	61 f7       	brne	.-40     	; 0xdb6 <main+0x1a6>
     dde:	06 c0       	rjmp	.+12     	; 0xdec <main+0x1dc>
     de0:	88 24       	eor	r8, r8
     de2:	8a 94       	dec	r8
     de4:	98 2c       	mov	r9, r8
     de6:	ee 24       	eor	r14, r14
     de8:	ea 94       	dec	r14
     dea:	fe 2c       	mov	r15, r14
						servoPosition = atoi(pch2);
					}
					cnt--;
					pch2 = strtok (NULL, " ");
				}				
				dxl_write_word(servoID, P_GOAL_POSITION_L, servoPosition);
     dec:	a4 01       	movw	r20, r8
     dee:	6e e1       	ldi	r22, 0x1E	; 30
     df0:	70 e0       	ldi	r23, 0x00	; 0
     df2:	c7 01       	movw	r24, r14
     df4:	ff da       	rcall	.-2562   	; 0x3f4 <dxl_write_word>
     df6:	ba c0       	rjmp	.+372    	; 0xf6c <main+0x35c>
				//printf("[%d][%d]\n",servoID,servoPosition);
			}
			else if (cnt == 3)
     df8:	03 30       	cpi	r16, 0x03	; 3
     dfa:	11 05       	cpc	r17, r1
     dfc:	09 f0       	breq	.+2      	; 0xe00 <main+0x1f0>
     dfe:	4c c0       	rjmp	.+152    	; 0xe98 <main+0x288>
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL)
     e00:	00 97       	sbiw	r24, 0x00	; 0
     e02:	21 f1       	breq	.+72     	; 0xe4c <main+0x23c>
     e04:	88 24       	eor	r8, r8
     e06:	8a 94       	dec	r8
     e08:	98 2c       	mov	r9, r8
     e0a:	66 24       	eor	r6, r6
     e0c:	6a 94       	dec	r6
     e0e:	76 2c       	mov	r7, r6
     e10:	ee 24       	eor	r14, r14
     e12:	ea 94       	dec	r14
     e14:	fe 2c       	mov	r15, r14
				{
					//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 3)
     e16:	03 30       	cpi	r16, 0x03	; 3
     e18:	11 05       	cpc	r17, r1
     e1a:	19 f4       	brne	.+6      	; 0xe22 <main+0x212>
					{
						servoID = atoi(pch2);
     e1c:	11 d3       	rcall	.+1570   	; 0x1440 <atoi>
     e1e:	7c 01       	movw	r14, r24
     e20:	0b c0       	rjmp	.+22     	; 0xe38 <main+0x228>
					}
					else if (cnt == 2)
     e22:	02 30       	cpi	r16, 0x02	; 2
     e24:	11 05       	cpc	r17, r1
     e26:	19 f4       	brne	.+6      	; 0xe2e <main+0x21e>
					{
						servoPosition = atoi(pch2);
     e28:	0b d3       	rcall	.+1558   	; 0x1440 <atoi>
     e2a:	3c 01       	movw	r6, r24
     e2c:	05 c0       	rjmp	.+10     	; 0xe38 <main+0x228>
					}
					else if (cnt == 1)
     e2e:	01 30       	cpi	r16, 0x01	; 1
     e30:	11 05       	cpc	r17, r1
     e32:	11 f4       	brne	.+4      	; 0xe38 <main+0x228>
					{
						servoSpeed = atoi(pch2);
     e34:	05 d3       	rcall	.+1546   	; 0x1440 <atoi>
     e36:	4c 01       	movw	r8, r24
					}
					cnt--;
     e38:	01 50       	subi	r16, 0x01	; 1
     e3a:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     e3c:	6d e5       	ldi	r22, 0x5D	; 93
     e3e:	72 e0       	ldi	r23, 0x02	; 2
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	1a d3       	rcall	.+1588   	; 0x147a <strtok>
			else if (cnt == 3)
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				while (pch2 != NULL)
     e46:	00 97       	sbiw	r24, 0x00	; 0
     e48:	31 f7       	brne	.-52     	; 0xe16 <main+0x206>
     e4a:	09 c0       	rjmp	.+18     	; 0xe5e <main+0x24e>
     e4c:	88 24       	eor	r8, r8
     e4e:	8a 94       	dec	r8
     e50:	98 2c       	mov	r9, r8
     e52:	66 24       	eor	r6, r6
     e54:	6a 94       	dec	r6
     e56:	76 2c       	mov	r7, r6
     e58:	ee 24       	eor	r14, r14
     e5a:	ea 94       	dec	r14
     e5c:	fe 2c       	mov	r15, r14
					cnt--;
					pch2 = strtok (NULL, " ");
				}
				//				printf("%d %d %d\n",servoID,servoPosition,servoSpeed);
				// Set pGain 
				dxl_write_word( servoID, P_PGAIN, P_PGAIN_DEFAULT_VALUE );
     e5e:	43 e0       	ldi	r20, 0x03	; 3
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	6c e1       	ldi	r22, 0x1C	; 28
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	c7 01       	movw	r24, r14
     e68:	c5 da       	rcall	.-2678   	; 0x3f4 <dxl_write_word>
     e6a:	8f e9       	ldi	r24, 0x9F	; 159
     e6c:	9f e0       	ldi	r25, 0x0F	; 15
     e6e:	01 97       	sbiw	r24, 0x01	; 1
     e70:	f1 f7       	brne	.-4      	; 0xe6e <main+0x25e>
     e72:	00 c0       	rjmp	.+0      	; 0xe74 <main+0x264>
     e74:	00 00       	nop
				_delay_ms(1);
				// Set goal speed
				dxl_write_word( servoID, P_GOAL_SPEED_L, servoSpeed );
     e76:	a4 01       	movw	r20, r8
     e78:	60 e2       	ldi	r22, 0x20	; 32
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	c7 01       	movw	r24, r14
     e7e:	ba da       	rcall	.-2700   	; 0x3f4 <dxl_write_word>
     e80:	ef e9       	ldi	r30, 0x9F	; 159
     e82:	ff e0       	ldi	r31, 0x0F	; 15
     e84:	31 97       	sbiw	r30, 0x01	; 1
     e86:	f1 f7       	brne	.-4      	; 0xe84 <main+0x274>
     e88:	00 c0       	rjmp	.+0      	; 0xe8a <main+0x27a>
     e8a:	00 00       	nop
				_delay_ms(1);
				// Set goal position
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
     e8c:	a3 01       	movw	r20, r6
     e8e:	6e e1       	ldi	r22, 0x1E	; 30
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	c7 01       	movw	r24, r14
     e94:	af da       	rcall	.-2722   	; 0x3f4 <dxl_write_word>
     e96:	6a c0       	rjmp	.+212    	; 0xf6c <main+0x35c>
		
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}
			else if (cnt == 4)
     e98:	04 30       	cpi	r16, 0x04	; 4
     e9a:	11 05       	cpc	r17, r1
     e9c:	09 f0       	breq	.+2      	; 0xea0 <main+0x290>
     e9e:	66 c0       	rjmp	.+204    	; 0xf6c <main+0x35c>
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				pGain = 3;
				while (pch2 != NULL)
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	a9 f1       	breq	.+106    	; 0xf0e <main+0x2fe>
     ea4:	0f 2e       	mov	r0, r31
     ea6:	f3 e0       	ldi	r31, 0x03	; 3
     ea8:	8f 2e       	mov	r8, r31
     eaa:	91 2c       	mov	r9, r1
     eac:	f0 2d       	mov	r31, r0
     eae:	66 24       	eor	r6, r6
     eb0:	6a 94       	dec	r6
     eb2:	76 2c       	mov	r7, r6
     eb4:	22 24       	eor	r2, r2
     eb6:	2a 94       	dec	r2
     eb8:	32 2c       	mov	r3, r2
     eba:	ee 24       	eor	r14, r14
     ebc:	ea 94       	dec	r14
     ebe:	fe 2c       	mov	r15, r14
				{
//					printf ("%d[%s]\n",cnt++,pch2);
					if (cnt == 4)
     ec0:	04 30       	cpi	r16, 0x04	; 4
     ec2:	11 05       	cpc	r17, r1
     ec4:	19 f4       	brne	.+6      	; 0xecc <main+0x2bc>
					{ 
						servoID = atoi(pch2);
     ec6:	bc d2       	rcall	.+1400   	; 0x1440 <atoi>
     ec8:	7c 01       	movw	r14, r24
     eca:	17 c0       	rjmp	.+46     	; 0xefa <main+0x2ea>
					}
					else if (cnt == 3)
     ecc:	03 30       	cpi	r16, 0x03	; 3
     ece:	11 05       	cpc	r17, r1
     ed0:	19 f4       	brne	.+6      	; 0xed8 <main+0x2c8>
					{
						servoPosition = atoi(pch2);
     ed2:	b6 d2       	rcall	.+1388   	; 0x1440 <atoi>
     ed4:	1c 01       	movw	r2, r24
     ed6:	11 c0       	rjmp	.+34     	; 0xefa <main+0x2ea>
					}
					else if (cnt == 2)
     ed8:	02 30       	cpi	r16, 0x02	; 2
     eda:	11 05       	cpc	r17, r1
     edc:	19 f4       	brne	.+6      	; 0xee4 <main+0x2d4>
					{
						servoSpeed = atoi(pch2);
     ede:	b0 d2       	rcall	.+1376   	; 0x1440 <atoi>
     ee0:	3c 01       	movw	r6, r24
     ee2:	0b c0       	rjmp	.+22     	; 0xefa <main+0x2ea>
					}
					else if (cnt == 1)
     ee4:	01 30       	cpi	r16, 0x01	; 1
     ee6:	11 05       	cpc	r17, r1
     ee8:	41 f4       	brne	.+16     	; 0xefa <main+0x2ea>
					{
						pGain = atoi(pch2);
     eea:	aa d2       	rcall	.+1364   	; 0x1440 <atoi>
     eec:	4c 01       	movw	r8, r24
     eee:	81 97       	sbiw	r24, 0x21	; 33
     ef0:	24 f0       	brlt	.+8      	; 0xefa <main+0x2ea>
     ef2:	68 94       	set
     ef4:	88 24       	eor	r8, r8
     ef6:	85 f8       	bld	r8, 5
     ef8:	91 2c       	mov	r9, r1
						if (pGain > 32) pGain = 32;
					}
					cnt--;
     efa:	01 50       	subi	r16, 0x01	; 1
     efc:	11 09       	sbc	r17, r1
					pch2 = strtok (NULL, " ");
     efe:	6d e5       	ldi	r22, 0x5D	; 93
     f00:	72 e0       	ldi	r23, 0x02	; 2
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	b9 d2       	rcall	.+1394   	; 0x147a <strtok>
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				pGain = 3;
				while (pch2 != NULL)
     f08:	00 97       	sbiw	r24, 0x00	; 0
     f0a:	d1 f6       	brne	.-76     	; 0xec0 <main+0x2b0>
     f0c:	0e c0       	rjmp	.+28     	; 0xf2a <main+0x31a>
     f0e:	0f 2e       	mov	r0, r31
     f10:	f3 e0       	ldi	r31, 0x03	; 3
     f12:	8f 2e       	mov	r8, r31
     f14:	91 2c       	mov	r9, r1
     f16:	f0 2d       	mov	r31, r0
     f18:	66 24       	eor	r6, r6
     f1a:	6a 94       	dec	r6
     f1c:	76 2c       	mov	r7, r6
     f1e:	22 24       	eor	r2, r2
     f20:	2a 94       	dec	r2
     f22:	32 2c       	mov	r3, r2
     f24:	ee 24       	eor	r14, r14
     f26:	ea 94       	dec	r14
     f28:	fe 2c       	mov	r15, r14
					cnt--;
					pch2 = strtok (NULL, " ");
				}
//				printf("%d %d %d\n",servoID,servoPosition,servoSpeed);
				// Set pGain
				dxl_write_word( servoID, P_PGAIN, pGain );
     f2a:	a4 01       	movw	r20, r8
     f2c:	6c e1       	ldi	r22, 0x1C	; 28
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	c7 01       	movw	r24, r14
     f32:	60 da       	rcall	.-2880   	; 0x3f4 <dxl_write_word>
     f34:	8f e9       	ldi	r24, 0x9F	; 159
     f36:	9f e0       	ldi	r25, 0x0F	; 15
     f38:	01 97       	sbiw	r24, 0x01	; 1
     f3a:	f1 f7       	brne	.-4      	; 0xf38 <main+0x328>
     f3c:	00 c0       	rjmp	.+0      	; 0xf3e <main+0x32e>
     f3e:	00 00       	nop
				_delay_ms(1);
				// Set goal speed
				dxl_write_word( servoID, P_GOAL_SPEED_L, servoSpeed );
     f40:	a3 01       	movw	r20, r6
     f42:	60 e2       	ldi	r22, 0x20	; 32
     f44:	70 e0       	ldi	r23, 0x00	; 0
     f46:	c7 01       	movw	r24, r14
     f48:	55 da       	rcall	.-2902   	; 0x3f4 <dxl_write_word>
     f4a:	ef e9       	ldi	r30, 0x9F	; 159
     f4c:	ff e0       	ldi	r31, 0x0F	; 15
     f4e:	31 97       	sbiw	r30, 0x01	; 1
     f50:	f1 f7       	brne	.-4      	; 0xf4e <main+0x33e>
     f52:	00 c0       	rjmp	.+0      	; 0xf54 <main+0x344>
     f54:	00 00       	nop
				_delay_ms(1);
				// Set goal position
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
     f56:	a1 01       	movw	r20, r2
     f58:	6e e1       	ldi	r22, 0x1E	; 30
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	c7 01       	movw	r24, r14
     f5e:	4a da       	rcall	.-2924   	; 0x3f4 <dxl_write_word>
     f60:	8f e9       	ldi	r24, 0x9F	; 159
     f62:	9f e0       	ldi	r25, 0x0F	; 15
     f64:	01 97       	sbiw	r24, 0x01	; 1
     f66:	f1 f7       	brne	.-4      	; 0xf64 <main+0x354>
     f68:	00 c0       	rjmp	.+0      	; 0xf6a <main+0x35a>
     f6a:	00 00       	nop
     f6c:	ee e8       	ldi	r30, 0x8E	; 142
     f6e:	f6 e0       	ldi	r31, 0x06	; 6
     f70:	ae e0       	ldi	r26, 0x0E	; 14
     f72:	b7 e0       	ldi	r27, 0x07	; 7
     f74:	8e e0       	ldi	r24, 0x0E	; 14
     f76:	97 e0       	ldi	r25, 0x07	; 7
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}
			
			for(int i = 0; i < MSG_BUF_SIZE; i++)
			{
				msgBuf0[i]=0x00;
     f78:	11 92       	st	Z+, r1
				msgBuf1[i]=0x00;
     f7a:	1d 92       	st	X+, r1
				dxl_write_word( servoID, P_GOAL_POSITION_L, servoPosition );
				_delay_ms(1);
				//printf("[%d][%d][%d][%d]\n",servoID,servoPosition,servoSpeed,pGain);
			}
			
			for(int i = 0; i < MSG_BUF_SIZE; i++)
     f7c:	e8 17       	cp	r30, r24
     f7e:	f9 07       	cpc	r31, r25
     f80:	d9 f7       	brne	.-10     	; 0xf78 <main+0x368>
     f82:	77 c0       	rjmp	.+238    	; 0x1072 <main+0x462>
			}
//			i = atoi (buffer);
		}
		else
		{			
			if (msgBufPointer >= MSG_BUF_SIZE-1)
     f84:	20 91 82 06 	lds	r18, 0x0682
     f88:	30 91 83 06 	lds	r19, 0x0683
     f8c:	2f 37       	cpi	r18, 0x7F	; 127
     f8e:	31 05       	cpc	r19, r1
     f90:	7c f0       	brlt	.+30     	; 0xfb0 <main+0x3a0>
			{
				msgBufPointer = 0;
     f92:	10 92 83 06 	sts	0x0683, r1
     f96:	10 92 82 06 	sts	0x0682, r1
     f9a:	ee e8       	ldi	r30, 0x8E	; 142
     f9c:	f6 e0       	ldi	r31, 0x06	; 6
     f9e:	ae e0       	ldi	r26, 0x0E	; 14
     fa0:	b7 e0       	ldi	r27, 0x07	; 7
     fa2:	2e e0       	ldi	r18, 0x0E	; 14
     fa4:	37 e0       	ldi	r19, 0x07	; 7
				for(int i = 0; i < MSG_BUF_SIZE; i++) 
				{
					msgBuf0[i]=0x00;
     fa6:	11 92       	st	Z+, r1
					msgBuf1[i]=0x00;
     fa8:	1d 92       	st	X+, r1
		else
		{			
			if (msgBufPointer >= MSG_BUF_SIZE-1)
			{
				msgBufPointer = 0;
				for(int i = 0; i < MSG_BUF_SIZE; i++) 
     faa:	e2 17       	cp	r30, r18
     fac:	f3 07       	cpc	r31, r19
     fae:	d9 f7       	brne	.-10     	; 0xfa6 <main+0x396>
				{
					msgBuf0[i]=0x00;
					msgBuf1[i]=0x00;
				}
			}
			msgBuf0[msgBufPointer]=ReceivedData;
     fb0:	20 91 82 06 	lds	r18, 0x0682
     fb4:	30 91 83 06 	lds	r19, 0x0683
     fb8:	f9 01       	movw	r30, r18
     fba:	e2 57       	subi	r30, 0x72	; 114
     fbc:	f9 4f       	sbci	r31, 0xF9	; 249
     fbe:	80 83       	st	Z, r24
//			msgBuf1[msgBufPointer]=ReceivedData;
			msgBufPointer++;
     fc0:	2f 5f       	subi	r18, 0xFF	; 255
     fc2:	3f 4f       	sbci	r19, 0xFF	; 255
     fc4:	30 93 83 06 	sts	0x0683, r19
     fc8:	20 93 82 06 	sts	0x0682, r18
     fcc:	52 c0       	rjmp	.+164    	; 0x1072 <main+0x462>
		}
		
		//send servo positions if they have changed since last check
		for (int j = 0; j<14; j++)
		{
			servoID = servoIdList[j];
     fce:	f3 01       	movw	r30, r6
     fd0:	81 91       	ld	r24, Z+
     fd2:	91 91       	ld	r25, Z+
     fd4:	3f 01       	movw	r6, r30
     fd6:	28 2e       	mov	r2, r24
     fd8:	39 2e       	mov	r3, r25
			wPresentPos = dxl_read_word(servoID, P_PRESENT_POSITION_L);
     fda:	64 e2       	ldi	r22, 0x24	; 36
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	24 da       	rcall	.-3000   	; 0x428 <dxl_read_word>
     fe0:	8c 01       	movw	r16, r24
     fe2:	8f e9       	ldi	r24, 0x9F	; 159
     fe4:	9f e0       	ldi	r25, 0x0F	; 15
     fe6:	01 97       	sbiw	r24, 0x01	; 1
     fe8:	f1 f7       	brne	.-4      	; 0xfe6 <main+0x3d6>
     fea:	00 c0       	rjmp	.+0      	; 0xfec <main+0x3dc>
     fec:	00 00       	nop
			_delay_ms(1);
			CommStatus = dxl_get_result();
     fee:	8f d8       	rcall	.-3810   	; 0x10e <dxl_get_result>
     ff0:	ef e9       	ldi	r30, 0x9F	; 159
     ff2:	ff e0       	ldi	r31, 0x0F	; 15
     ff4:	31 97       	sbiw	r30, 0x01	; 1
     ff6:	f1 f7       	brne	.-4      	; 0xff4 <main+0x3e4>
     ff8:	00 c0       	rjmp	.+0      	; 0xffa <main+0x3ea>
     ffa:	00 00       	nop
			_delay_ms(1);
			if(CommStatus == COMM_RXSUCCESS)
     ffc:	01 97       	sbiw	r24, 0x01	; 1
     ffe:	89 f5       	brne	.+98     	; 0x1062 <main+0x452>
			{
				if(currentPosition[j] != wPresentPos)
    1000:	f7 01       	movw	r30, r14
    1002:	80 81       	ld	r24, Z
    1004:	91 81       	ldd	r25, Z+1	; 0x01
    1006:	80 17       	cp	r24, r16
    1008:	91 07       	cpc	r25, r17
    100a:	59 f1       	breq	.+86     	; 0x1062 <main+0x452>
				{
					currentPosition[j] = wPresentPos;
    100c:	11 83       	std	Z+1, r17	; 0x01
    100e:	00 83       	st	Z, r16
					msgBuf2[1] = servoID/10 + '0';
    1010:	82 2d       	mov	r24, r2
    1012:	93 2d       	mov	r25, r3
    1014:	6a e0       	ldi	r22, 0x0A	; 10
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	ec d1       	rcall	.+984    	; 0x13f2 <__divmodhi4>
    101a:	60 5d       	subi	r22, 0xD0	; 208
    101c:	f2 01       	movw	r30, r4
    101e:	61 83       	std	Z+1, r22	; 0x01
					msgBuf2[2] = servoID%10 + '0';
    1020:	80 5d       	subi	r24, 0xD0	; 208
    1022:	82 83       	std	Z+2, r24	; 0x02
					msgBuf2[4] = wPresentPos/1000 +'0';
    1024:	c8 01       	movw	r24, r16
    1026:	68 ee       	ldi	r22, 0xE8	; 232
    1028:	73 e0       	ldi	r23, 0x03	; 3
    102a:	e3 d1       	rcall	.+966    	; 0x13f2 <__divmodhi4>
    102c:	60 5d       	subi	r22, 0xD0	; 208
    102e:	64 83       	std	Z+4, r22	; 0x04
					wPresentPos %= 1000;
					msgBuf2[5] = wPresentPos/100 +'0';
    1030:	64 e6       	ldi	r22, 0x64	; 100
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	de d1       	rcall	.+956    	; 0x13f2 <__divmodhi4>
    1036:	60 5d       	subi	r22, 0xD0	; 208
    1038:	65 83       	std	Z+5, r22	; 0x05
					wPresentPos %= 100;
					msgBuf2[6] = wPresentPos/10 + '0';
    103a:	6a e0       	ldi	r22, 0x0A	; 10
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	d9 d1       	rcall	.+946    	; 0x13f2 <__divmodhi4>
    1040:	60 5d       	subi	r22, 0xD0	; 208
    1042:	66 83       	std	Z+6, r22	; 0x06
					msgBuf2[7] = wPresentPos%10 + '0';
    1044:	80 5d       	subi	r24, 0xD0	; 208
    1046:	87 83       	std	Z+7, r24	; 0x07
    1048:	09 ad       	ldd	r16, Y+57	; 0x39
    104a:	1a ad       	ldd	r17, Y+58	; 0x3a
					for(int k = 0; k<10; k++)
						putchar(msgBuf2[k]);
    104c:	f8 01       	movw	r30, r16
    104e:	81 91       	ld	r24, Z+
    1050:	8f 01       	movw	r16, r30
    1052:	f6 01       	movw	r30, r12
    1054:	62 81       	ldd	r22, Z+2	; 0x02
    1056:	73 81       	ldd	r23, Z+3	; 0x03
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	d2 d2       	rcall	.+1444   	; 0x1600 <fputc>
					wPresentPos %= 1000;
					msgBuf2[5] = wPresentPos/100 +'0';
					wPresentPos %= 100;
					msgBuf2[6] = wPresentPos/10 + '0';
					msgBuf2[7] = wPresentPos%10 + '0';
					for(int k = 0; k<10; k++)
    105c:	0a 15       	cp	r16, r10
    105e:	1b 05       	cpc	r17, r11
    1060:	a9 f7       	brne	.-22     	; 0x104c <main+0x43c>
    1062:	f2 e0       	ldi	r31, 0x02	; 2
    1064:	ef 0e       	add	r14, r31
    1066:	f1 1c       	adc	r15, r1
//			msgBuf1[msgBufPointer]=ReceivedData;
			msgBufPointer++;
		}
		
		//send servo positions if they have changed since last check
		for (int j = 0; j<14; j++)
    1068:	e8 14       	cp	r14, r8
    106a:	f9 04       	cpc	r15, r9
    106c:	09 f0       	breq	.+2      	; 0x1070 <main+0x460>
    106e:	af cf       	rjmp	.-162    	; 0xfce <main+0x3be>
    1070:	58 ce       	rjmp	.-848    	; 0xd22 <main+0x112>
    1072:	ce 01       	movw	r24, r28
    1074:	01 96       	adiw	r24, 0x01	; 1
    1076:	7c 01       	movw	r14, r24
    1078:	4e 01       	movw	r8, r28
    107a:	9d e1       	ldi	r25, 0x1D	; 29
    107c:	89 0e       	add	r8, r25
    107e:	91 1c       	adc	r9, r1
			{
				servoID = -1;
				servoPosition = -1;
				servoSpeed = -1;
				pGain = 3;
				while (pch2 != NULL)
    1080:	34 01       	movw	r6, r8
    1082:	a5 cf       	rjmp	.-182    	; 0xfce <main+0x3be>
//				printf ("%d[%s]\n",cnt++,pch1);
				cnt++;
				pch1 = strtok (NULL, " ");
			}
			
			pch2 = strtok ((char*)msgBuf1," ");
    1084:	6d e5       	ldi	r22, 0x5D	; 93
    1086:	72 e0       	ldi	r23, 0x02	; 2
    1088:	8e e0       	ldi	r24, 0x0E	; 14
    108a:	97 e0       	ldi	r25, 0x07	; 7
    108c:	f6 d1       	rcall	.+1004   	; 0x147a <strtok>
    108e:	6e cf       	rjmp	.-292    	; 0xf6c <main+0x35c>

00001090 <__cmpsf2>:
    1090:	d4 d0       	rcall	.+424    	; 0x123a <__fp_cmp>
    1092:	08 f4       	brcc	.+2      	; 0x1096 <__cmpsf2+0x6>
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	08 95       	ret

00001098 <__divsf3>:
    1098:	0c d0       	rcall	.+24     	; 0x10b2 <__divsf3x>
    109a:	0a c1       	rjmp	.+532    	; 0x12b0 <__fp_round>
    109c:	02 d1       	rcall	.+516    	; 0x12a2 <__fp_pscB>
    109e:	40 f0       	brcs	.+16     	; 0x10b0 <__divsf3+0x18>
    10a0:	f9 d0       	rcall	.+498    	; 0x1294 <__fp_pscA>
    10a2:	30 f0       	brcs	.+12     	; 0x10b0 <__divsf3+0x18>
    10a4:	21 f4       	brne	.+8      	; 0x10ae <__divsf3+0x16>
    10a6:	5f 3f       	cpi	r21, 0xFF	; 255
    10a8:	19 f0       	breq	.+6      	; 0x10b0 <__divsf3+0x18>
    10aa:	eb c0       	rjmp	.+470    	; 0x1282 <__fp_inf>
    10ac:	51 11       	cpse	r21, r1
    10ae:	34 c1       	rjmp	.+616    	; 0x1318 <__fp_szero>
    10b0:	ee c0       	rjmp	.+476    	; 0x128e <__fp_nan>

000010b2 <__divsf3x>:
    10b2:	0f d1       	rcall	.+542    	; 0x12d2 <__fp_split3>
    10b4:	98 f3       	brcs	.-26     	; 0x109c <__divsf3+0x4>

000010b6 <__divsf3_pse>:
    10b6:	99 23       	and	r25, r25
    10b8:	c9 f3       	breq	.-14     	; 0x10ac <__divsf3+0x14>
    10ba:	55 23       	and	r21, r21
    10bc:	b1 f3       	breq	.-20     	; 0x10aa <__divsf3+0x12>
    10be:	95 1b       	sub	r25, r21
    10c0:	55 0b       	sbc	r21, r21
    10c2:	bb 27       	eor	r27, r27
    10c4:	aa 27       	eor	r26, r26
    10c6:	62 17       	cp	r22, r18
    10c8:	73 07       	cpc	r23, r19
    10ca:	84 07       	cpc	r24, r20
    10cc:	38 f0       	brcs	.+14     	; 0x10dc <__divsf3_pse+0x26>
    10ce:	9f 5f       	subi	r25, 0xFF	; 255
    10d0:	5f 4f       	sbci	r21, 0xFF	; 255
    10d2:	22 0f       	add	r18, r18
    10d4:	33 1f       	adc	r19, r19
    10d6:	44 1f       	adc	r20, r20
    10d8:	aa 1f       	adc	r26, r26
    10da:	a9 f3       	breq	.-22     	; 0x10c6 <__divsf3_pse+0x10>
    10dc:	33 d0       	rcall	.+102    	; 0x1144 <__divsf3_pse+0x8e>
    10de:	0e 2e       	mov	r0, r30
    10e0:	3a f0       	brmi	.+14     	; 0x10f0 <__divsf3_pse+0x3a>
    10e2:	e0 e8       	ldi	r30, 0x80	; 128
    10e4:	30 d0       	rcall	.+96     	; 0x1146 <__divsf3_pse+0x90>
    10e6:	91 50       	subi	r25, 0x01	; 1
    10e8:	50 40       	sbci	r21, 0x00	; 0
    10ea:	e6 95       	lsr	r30
    10ec:	00 1c       	adc	r0, r0
    10ee:	ca f7       	brpl	.-14     	; 0x10e2 <__divsf3_pse+0x2c>
    10f0:	29 d0       	rcall	.+82     	; 0x1144 <__divsf3_pse+0x8e>
    10f2:	fe 2f       	mov	r31, r30
    10f4:	27 d0       	rcall	.+78     	; 0x1144 <__divsf3_pse+0x8e>
    10f6:	66 0f       	add	r22, r22
    10f8:	77 1f       	adc	r23, r23
    10fa:	88 1f       	adc	r24, r24
    10fc:	bb 1f       	adc	r27, r27
    10fe:	26 17       	cp	r18, r22
    1100:	37 07       	cpc	r19, r23
    1102:	48 07       	cpc	r20, r24
    1104:	ab 07       	cpc	r26, r27
    1106:	b0 e8       	ldi	r27, 0x80	; 128
    1108:	09 f0       	breq	.+2      	; 0x110c <__divsf3_pse+0x56>
    110a:	bb 0b       	sbc	r27, r27
    110c:	80 2d       	mov	r24, r0
    110e:	bf 01       	movw	r22, r30
    1110:	ff 27       	eor	r31, r31
    1112:	93 58       	subi	r25, 0x83	; 131
    1114:	5f 4f       	sbci	r21, 0xFF	; 255
    1116:	2a f0       	brmi	.+10     	; 0x1122 <__divsf3_pse+0x6c>
    1118:	9e 3f       	cpi	r25, 0xFE	; 254
    111a:	51 05       	cpc	r21, r1
    111c:	68 f0       	brcs	.+26     	; 0x1138 <__divsf3_pse+0x82>
    111e:	b1 c0       	rjmp	.+354    	; 0x1282 <__fp_inf>
    1120:	fb c0       	rjmp	.+502    	; 0x1318 <__fp_szero>
    1122:	5f 3f       	cpi	r21, 0xFF	; 255
    1124:	ec f3       	brlt	.-6      	; 0x1120 <__divsf3_pse+0x6a>
    1126:	98 3e       	cpi	r25, 0xE8	; 232
    1128:	dc f3       	brlt	.-10     	; 0x1120 <__divsf3_pse+0x6a>
    112a:	86 95       	lsr	r24
    112c:	77 95       	ror	r23
    112e:	67 95       	ror	r22
    1130:	b7 95       	ror	r27
    1132:	f7 95       	ror	r31
    1134:	9f 5f       	subi	r25, 0xFF	; 255
    1136:	c9 f7       	brne	.-14     	; 0x112a <__divsf3_pse+0x74>
    1138:	88 0f       	add	r24, r24
    113a:	91 1d       	adc	r25, r1
    113c:	96 95       	lsr	r25
    113e:	87 95       	ror	r24
    1140:	97 f9       	bld	r25, 7
    1142:	08 95       	ret
    1144:	e1 e0       	ldi	r30, 0x01	; 1
    1146:	66 0f       	add	r22, r22
    1148:	77 1f       	adc	r23, r23
    114a:	88 1f       	adc	r24, r24
    114c:	bb 1f       	adc	r27, r27
    114e:	62 17       	cp	r22, r18
    1150:	73 07       	cpc	r23, r19
    1152:	84 07       	cpc	r24, r20
    1154:	ba 07       	cpc	r27, r26
    1156:	20 f0       	brcs	.+8      	; 0x1160 <__divsf3_pse+0xaa>
    1158:	62 1b       	sub	r22, r18
    115a:	73 0b       	sbc	r23, r19
    115c:	84 0b       	sbc	r24, r20
    115e:	ba 0b       	sbc	r27, r26
    1160:	ee 1f       	adc	r30, r30
    1162:	88 f7       	brcc	.-30     	; 0x1146 <__divsf3_pse+0x90>
    1164:	e0 95       	com	r30
    1166:	08 95       	ret

00001168 <__fixunssfsi>:
    1168:	bc d0       	rcall	.+376    	; 0x12e2 <__fp_splitA>
    116a:	88 f0       	brcs	.+34     	; 0x118e <__fixunssfsi+0x26>
    116c:	9f 57       	subi	r25, 0x7F	; 127
    116e:	90 f0       	brcs	.+36     	; 0x1194 <__fixunssfsi+0x2c>
    1170:	b9 2f       	mov	r27, r25
    1172:	99 27       	eor	r25, r25
    1174:	b7 51       	subi	r27, 0x17	; 23
    1176:	a0 f0       	brcs	.+40     	; 0x11a0 <__fixunssfsi+0x38>
    1178:	d1 f0       	breq	.+52     	; 0x11ae <__fixunssfsi+0x46>
    117a:	66 0f       	add	r22, r22
    117c:	77 1f       	adc	r23, r23
    117e:	88 1f       	adc	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	1a f0       	brmi	.+6      	; 0x118a <__fixunssfsi+0x22>
    1184:	ba 95       	dec	r27
    1186:	c9 f7       	brne	.-14     	; 0x117a <__fixunssfsi+0x12>
    1188:	12 c0       	rjmp	.+36     	; 0x11ae <__fixunssfsi+0x46>
    118a:	b1 30       	cpi	r27, 0x01	; 1
    118c:	81 f0       	breq	.+32     	; 0x11ae <__fixunssfsi+0x46>
    118e:	c3 d0       	rcall	.+390    	; 0x1316 <__fp_zero>
    1190:	b1 e0       	ldi	r27, 0x01	; 1
    1192:	08 95       	ret
    1194:	c0 c0       	rjmp	.+384    	; 0x1316 <__fp_zero>
    1196:	67 2f       	mov	r22, r23
    1198:	78 2f       	mov	r23, r24
    119a:	88 27       	eor	r24, r24
    119c:	b8 5f       	subi	r27, 0xF8	; 248
    119e:	39 f0       	breq	.+14     	; 0x11ae <__fixunssfsi+0x46>
    11a0:	b9 3f       	cpi	r27, 0xF9	; 249
    11a2:	cc f3       	brlt	.-14     	; 0x1196 <__fixunssfsi+0x2e>
    11a4:	86 95       	lsr	r24
    11a6:	77 95       	ror	r23
    11a8:	67 95       	ror	r22
    11aa:	b3 95       	inc	r27
    11ac:	d9 f7       	brne	.-10     	; 0x11a4 <__fixunssfsi+0x3c>
    11ae:	3e f4       	brtc	.+14     	; 0x11be <__fixunssfsi+0x56>
    11b0:	90 95       	com	r25
    11b2:	80 95       	com	r24
    11b4:	70 95       	com	r23
    11b6:	61 95       	neg	r22
    11b8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ba:	8f 4f       	sbci	r24, 0xFF	; 255
    11bc:	9f 4f       	sbci	r25, 0xFF	; 255
    11be:	08 95       	ret

000011c0 <__floatunsisf>:
    11c0:	e8 94       	clt
    11c2:	09 c0       	rjmp	.+18     	; 0x11d6 <__floatsisf+0x12>

000011c4 <__floatsisf>:
    11c4:	97 fb       	bst	r25, 7
    11c6:	3e f4       	brtc	.+14     	; 0x11d6 <__floatsisf+0x12>
    11c8:	90 95       	com	r25
    11ca:	80 95       	com	r24
    11cc:	70 95       	com	r23
    11ce:	61 95       	neg	r22
    11d0:	7f 4f       	sbci	r23, 0xFF	; 255
    11d2:	8f 4f       	sbci	r24, 0xFF	; 255
    11d4:	9f 4f       	sbci	r25, 0xFF	; 255
    11d6:	99 23       	and	r25, r25
    11d8:	a9 f0       	breq	.+42     	; 0x1204 <__floatsisf+0x40>
    11da:	f9 2f       	mov	r31, r25
    11dc:	96 e9       	ldi	r25, 0x96	; 150
    11de:	bb 27       	eor	r27, r27
    11e0:	93 95       	inc	r25
    11e2:	f6 95       	lsr	r31
    11e4:	87 95       	ror	r24
    11e6:	77 95       	ror	r23
    11e8:	67 95       	ror	r22
    11ea:	b7 95       	ror	r27
    11ec:	f1 11       	cpse	r31, r1
    11ee:	f8 cf       	rjmp	.-16     	; 0x11e0 <__floatsisf+0x1c>
    11f0:	fa f4       	brpl	.+62     	; 0x1230 <__floatsisf+0x6c>
    11f2:	bb 0f       	add	r27, r27
    11f4:	11 f4       	brne	.+4      	; 0x11fa <__floatsisf+0x36>
    11f6:	60 ff       	sbrs	r22, 0
    11f8:	1b c0       	rjmp	.+54     	; 0x1230 <__floatsisf+0x6c>
    11fa:	6f 5f       	subi	r22, 0xFF	; 255
    11fc:	7f 4f       	sbci	r23, 0xFF	; 255
    11fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	16 c0       	rjmp	.+44     	; 0x1230 <__floatsisf+0x6c>
    1204:	88 23       	and	r24, r24
    1206:	11 f0       	breq	.+4      	; 0x120c <__floatsisf+0x48>
    1208:	96 e9       	ldi	r25, 0x96	; 150
    120a:	11 c0       	rjmp	.+34     	; 0x122e <__floatsisf+0x6a>
    120c:	77 23       	and	r23, r23
    120e:	21 f0       	breq	.+8      	; 0x1218 <__floatsisf+0x54>
    1210:	9e e8       	ldi	r25, 0x8E	; 142
    1212:	87 2f       	mov	r24, r23
    1214:	76 2f       	mov	r23, r22
    1216:	05 c0       	rjmp	.+10     	; 0x1222 <__floatsisf+0x5e>
    1218:	66 23       	and	r22, r22
    121a:	71 f0       	breq	.+28     	; 0x1238 <__floatsisf+0x74>
    121c:	96 e8       	ldi	r25, 0x86	; 134
    121e:	86 2f       	mov	r24, r22
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	60 e0       	ldi	r22, 0x00	; 0
    1224:	2a f0       	brmi	.+10     	; 0x1230 <__floatsisf+0x6c>
    1226:	9a 95       	dec	r25
    1228:	66 0f       	add	r22, r22
    122a:	77 1f       	adc	r23, r23
    122c:	88 1f       	adc	r24, r24
    122e:	da f7       	brpl	.-10     	; 0x1226 <__floatsisf+0x62>
    1230:	88 0f       	add	r24, r24
    1232:	96 95       	lsr	r25
    1234:	87 95       	ror	r24
    1236:	97 f9       	bld	r25, 7
    1238:	08 95       	ret

0000123a <__fp_cmp>:
    123a:	99 0f       	add	r25, r25
    123c:	00 08       	sbc	r0, r0
    123e:	55 0f       	add	r21, r21
    1240:	aa 0b       	sbc	r26, r26
    1242:	e0 e8       	ldi	r30, 0x80	; 128
    1244:	fe ef       	ldi	r31, 0xFE	; 254
    1246:	16 16       	cp	r1, r22
    1248:	17 06       	cpc	r1, r23
    124a:	e8 07       	cpc	r30, r24
    124c:	f9 07       	cpc	r31, r25
    124e:	c0 f0       	brcs	.+48     	; 0x1280 <__fp_cmp+0x46>
    1250:	12 16       	cp	r1, r18
    1252:	13 06       	cpc	r1, r19
    1254:	e4 07       	cpc	r30, r20
    1256:	f5 07       	cpc	r31, r21
    1258:	98 f0       	brcs	.+38     	; 0x1280 <__fp_cmp+0x46>
    125a:	62 1b       	sub	r22, r18
    125c:	73 0b       	sbc	r23, r19
    125e:	84 0b       	sbc	r24, r20
    1260:	95 0b       	sbc	r25, r21
    1262:	39 f4       	brne	.+14     	; 0x1272 <__fp_cmp+0x38>
    1264:	0a 26       	eor	r0, r26
    1266:	61 f0       	breq	.+24     	; 0x1280 <__fp_cmp+0x46>
    1268:	23 2b       	or	r18, r19
    126a:	24 2b       	or	r18, r20
    126c:	25 2b       	or	r18, r21
    126e:	21 f4       	brne	.+8      	; 0x1278 <__fp_cmp+0x3e>
    1270:	08 95       	ret
    1272:	0a 26       	eor	r0, r26
    1274:	09 f4       	brne	.+2      	; 0x1278 <__fp_cmp+0x3e>
    1276:	a1 40       	sbci	r26, 0x01	; 1
    1278:	a6 95       	lsr	r26
    127a:	8f ef       	ldi	r24, 0xFF	; 255
    127c:	81 1d       	adc	r24, r1
    127e:	81 1d       	adc	r24, r1
    1280:	08 95       	ret

00001282 <__fp_inf>:
    1282:	97 f9       	bld	r25, 7
    1284:	9f 67       	ori	r25, 0x7F	; 127
    1286:	80 e8       	ldi	r24, 0x80	; 128
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	08 95       	ret

0000128e <__fp_nan>:
    128e:	9f ef       	ldi	r25, 0xFF	; 255
    1290:	80 ec       	ldi	r24, 0xC0	; 192
    1292:	08 95       	ret

00001294 <__fp_pscA>:
    1294:	00 24       	eor	r0, r0
    1296:	0a 94       	dec	r0
    1298:	16 16       	cp	r1, r22
    129a:	17 06       	cpc	r1, r23
    129c:	18 06       	cpc	r1, r24
    129e:	09 06       	cpc	r0, r25
    12a0:	08 95       	ret

000012a2 <__fp_pscB>:
    12a2:	00 24       	eor	r0, r0
    12a4:	0a 94       	dec	r0
    12a6:	12 16       	cp	r1, r18
    12a8:	13 06       	cpc	r1, r19
    12aa:	14 06       	cpc	r1, r20
    12ac:	05 06       	cpc	r0, r21
    12ae:	08 95       	ret

000012b0 <__fp_round>:
    12b0:	09 2e       	mov	r0, r25
    12b2:	03 94       	inc	r0
    12b4:	00 0c       	add	r0, r0
    12b6:	11 f4       	brne	.+4      	; 0x12bc <__fp_round+0xc>
    12b8:	88 23       	and	r24, r24
    12ba:	52 f0       	brmi	.+20     	; 0x12d0 <__fp_round+0x20>
    12bc:	bb 0f       	add	r27, r27
    12be:	40 f4       	brcc	.+16     	; 0x12d0 <__fp_round+0x20>
    12c0:	bf 2b       	or	r27, r31
    12c2:	11 f4       	brne	.+4      	; 0x12c8 <__fp_round+0x18>
    12c4:	60 ff       	sbrs	r22, 0
    12c6:	04 c0       	rjmp	.+8      	; 0x12d0 <__fp_round+0x20>
    12c8:	6f 5f       	subi	r22, 0xFF	; 255
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	8f 4f       	sbci	r24, 0xFF	; 255
    12ce:	9f 4f       	sbci	r25, 0xFF	; 255
    12d0:	08 95       	ret

000012d2 <__fp_split3>:
    12d2:	57 fd       	sbrc	r21, 7
    12d4:	90 58       	subi	r25, 0x80	; 128
    12d6:	44 0f       	add	r20, r20
    12d8:	55 1f       	adc	r21, r21
    12da:	59 f0       	breq	.+22     	; 0x12f2 <__fp_splitA+0x10>
    12dc:	5f 3f       	cpi	r21, 0xFF	; 255
    12de:	71 f0       	breq	.+28     	; 0x12fc <__fp_splitA+0x1a>
    12e0:	47 95       	ror	r20

000012e2 <__fp_splitA>:
    12e2:	88 0f       	add	r24, r24
    12e4:	97 fb       	bst	r25, 7
    12e6:	99 1f       	adc	r25, r25
    12e8:	61 f0       	breq	.+24     	; 0x1302 <__fp_splitA+0x20>
    12ea:	9f 3f       	cpi	r25, 0xFF	; 255
    12ec:	79 f0       	breq	.+30     	; 0x130c <__fp_splitA+0x2a>
    12ee:	87 95       	ror	r24
    12f0:	08 95       	ret
    12f2:	12 16       	cp	r1, r18
    12f4:	13 06       	cpc	r1, r19
    12f6:	14 06       	cpc	r1, r20
    12f8:	55 1f       	adc	r21, r21
    12fa:	f2 cf       	rjmp	.-28     	; 0x12e0 <__fp_split3+0xe>
    12fc:	46 95       	lsr	r20
    12fe:	f1 df       	rcall	.-30     	; 0x12e2 <__fp_splitA>
    1300:	08 c0       	rjmp	.+16     	; 0x1312 <__fp_splitA+0x30>
    1302:	16 16       	cp	r1, r22
    1304:	17 06       	cpc	r1, r23
    1306:	18 06       	cpc	r1, r24
    1308:	99 1f       	adc	r25, r25
    130a:	f1 cf       	rjmp	.-30     	; 0x12ee <__fp_splitA+0xc>
    130c:	86 95       	lsr	r24
    130e:	71 05       	cpc	r23, r1
    1310:	61 05       	cpc	r22, r1
    1312:	08 94       	sec
    1314:	08 95       	ret

00001316 <__fp_zero>:
    1316:	e8 94       	clt

00001318 <__fp_szero>:
    1318:	bb 27       	eor	r27, r27
    131a:	66 27       	eor	r22, r22
    131c:	77 27       	eor	r23, r23
    131e:	cb 01       	movw	r24, r22
    1320:	97 f9       	bld	r25, 7
    1322:	08 95       	ret

00001324 <__gesf2>:
    1324:	8a df       	rcall	.-236    	; 0x123a <__fp_cmp>
    1326:	08 f4       	brcc	.+2      	; 0x132a <__gesf2+0x6>
    1328:	8f ef       	ldi	r24, 0xFF	; 255
    132a:	08 95       	ret

0000132c <__mulsf3>:
    132c:	0b d0       	rcall	.+22     	; 0x1344 <__mulsf3x>
    132e:	c0 cf       	rjmp	.-128    	; 0x12b0 <__fp_round>
    1330:	b1 df       	rcall	.-158    	; 0x1294 <__fp_pscA>
    1332:	28 f0       	brcs	.+10     	; 0x133e <__mulsf3+0x12>
    1334:	b6 df       	rcall	.-148    	; 0x12a2 <__fp_pscB>
    1336:	18 f0       	brcs	.+6      	; 0x133e <__mulsf3+0x12>
    1338:	95 23       	and	r25, r21
    133a:	09 f0       	breq	.+2      	; 0x133e <__mulsf3+0x12>
    133c:	a2 cf       	rjmp	.-188    	; 0x1282 <__fp_inf>
    133e:	a7 cf       	rjmp	.-178    	; 0x128e <__fp_nan>
    1340:	11 24       	eor	r1, r1
    1342:	ea cf       	rjmp	.-44     	; 0x1318 <__fp_szero>

00001344 <__mulsf3x>:
    1344:	c6 df       	rcall	.-116    	; 0x12d2 <__fp_split3>
    1346:	a0 f3       	brcs	.-24     	; 0x1330 <__mulsf3+0x4>

00001348 <__mulsf3_pse>:
    1348:	95 9f       	mul	r25, r21
    134a:	d1 f3       	breq	.-12     	; 0x1340 <__mulsf3+0x14>
    134c:	95 0f       	add	r25, r21
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	55 1f       	adc	r21, r21
    1352:	62 9f       	mul	r22, r18
    1354:	f0 01       	movw	r30, r0
    1356:	72 9f       	mul	r23, r18
    1358:	bb 27       	eor	r27, r27
    135a:	f0 0d       	add	r31, r0
    135c:	b1 1d       	adc	r27, r1
    135e:	63 9f       	mul	r22, r19
    1360:	aa 27       	eor	r26, r26
    1362:	f0 0d       	add	r31, r0
    1364:	b1 1d       	adc	r27, r1
    1366:	aa 1f       	adc	r26, r26
    1368:	64 9f       	mul	r22, r20
    136a:	66 27       	eor	r22, r22
    136c:	b0 0d       	add	r27, r0
    136e:	a1 1d       	adc	r26, r1
    1370:	66 1f       	adc	r22, r22
    1372:	82 9f       	mul	r24, r18
    1374:	22 27       	eor	r18, r18
    1376:	b0 0d       	add	r27, r0
    1378:	a1 1d       	adc	r26, r1
    137a:	62 1f       	adc	r22, r18
    137c:	73 9f       	mul	r23, r19
    137e:	b0 0d       	add	r27, r0
    1380:	a1 1d       	adc	r26, r1
    1382:	62 1f       	adc	r22, r18
    1384:	83 9f       	mul	r24, r19
    1386:	a0 0d       	add	r26, r0
    1388:	61 1d       	adc	r22, r1
    138a:	22 1f       	adc	r18, r18
    138c:	74 9f       	mul	r23, r20
    138e:	33 27       	eor	r19, r19
    1390:	a0 0d       	add	r26, r0
    1392:	61 1d       	adc	r22, r1
    1394:	23 1f       	adc	r18, r19
    1396:	84 9f       	mul	r24, r20
    1398:	60 0d       	add	r22, r0
    139a:	21 1d       	adc	r18, r1
    139c:	82 2f       	mov	r24, r18
    139e:	76 2f       	mov	r23, r22
    13a0:	6a 2f       	mov	r22, r26
    13a2:	11 24       	eor	r1, r1
    13a4:	9f 57       	subi	r25, 0x7F	; 127
    13a6:	50 40       	sbci	r21, 0x00	; 0
    13a8:	8a f0       	brmi	.+34     	; 0x13cc <__mulsf3_pse+0x84>
    13aa:	e1 f0       	breq	.+56     	; 0x13e4 <__mulsf3_pse+0x9c>
    13ac:	88 23       	and	r24, r24
    13ae:	4a f0       	brmi	.+18     	; 0x13c2 <__mulsf3_pse+0x7a>
    13b0:	ee 0f       	add	r30, r30
    13b2:	ff 1f       	adc	r31, r31
    13b4:	bb 1f       	adc	r27, r27
    13b6:	66 1f       	adc	r22, r22
    13b8:	77 1f       	adc	r23, r23
    13ba:	88 1f       	adc	r24, r24
    13bc:	91 50       	subi	r25, 0x01	; 1
    13be:	50 40       	sbci	r21, 0x00	; 0
    13c0:	a9 f7       	brne	.-22     	; 0x13ac <__mulsf3_pse+0x64>
    13c2:	9e 3f       	cpi	r25, 0xFE	; 254
    13c4:	51 05       	cpc	r21, r1
    13c6:	70 f0       	brcs	.+28     	; 0x13e4 <__mulsf3_pse+0x9c>
    13c8:	5c cf       	rjmp	.-328    	; 0x1282 <__fp_inf>
    13ca:	a6 cf       	rjmp	.-180    	; 0x1318 <__fp_szero>
    13cc:	5f 3f       	cpi	r21, 0xFF	; 255
    13ce:	ec f3       	brlt	.-6      	; 0x13ca <__mulsf3_pse+0x82>
    13d0:	98 3e       	cpi	r25, 0xE8	; 232
    13d2:	dc f3       	brlt	.-10     	; 0x13ca <__mulsf3_pse+0x82>
    13d4:	86 95       	lsr	r24
    13d6:	77 95       	ror	r23
    13d8:	67 95       	ror	r22
    13da:	b7 95       	ror	r27
    13dc:	f7 95       	ror	r31
    13de:	e7 95       	ror	r30
    13e0:	9f 5f       	subi	r25, 0xFF	; 255
    13e2:	c1 f7       	brne	.-16     	; 0x13d4 <__mulsf3_pse+0x8c>
    13e4:	fe 2b       	or	r31, r30
    13e6:	88 0f       	add	r24, r24
    13e8:	91 1d       	adc	r25, r1
    13ea:	96 95       	lsr	r25
    13ec:	87 95       	ror	r24
    13ee:	97 f9       	bld	r25, 7
    13f0:	08 95       	ret

000013f2 <__divmodhi4>:
    13f2:	97 fb       	bst	r25, 7
    13f4:	07 2e       	mov	r0, r23
    13f6:	16 f4       	brtc	.+4      	; 0x13fc <__divmodhi4+0xa>
    13f8:	00 94       	com	r0
    13fa:	06 d0       	rcall	.+12     	; 0x1408 <__divmodhi4_neg1>
    13fc:	77 fd       	sbrc	r23, 7
    13fe:	08 d0       	rcall	.+16     	; 0x1410 <__divmodhi4_neg2>
    1400:	0b d0       	rcall	.+22     	; 0x1418 <__udivmodhi4>
    1402:	07 fc       	sbrc	r0, 7
    1404:	05 d0       	rcall	.+10     	; 0x1410 <__divmodhi4_neg2>
    1406:	3e f4       	brtc	.+14     	; 0x1416 <__divmodhi4_exit>

00001408 <__divmodhi4_neg1>:
    1408:	90 95       	com	r25
    140a:	81 95       	neg	r24
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	08 95       	ret

00001410 <__divmodhi4_neg2>:
    1410:	70 95       	com	r23
    1412:	61 95       	neg	r22
    1414:	7f 4f       	sbci	r23, 0xFF	; 255

00001416 <__divmodhi4_exit>:
    1416:	08 95       	ret

00001418 <__udivmodhi4>:
    1418:	aa 1b       	sub	r26, r26
    141a:	bb 1b       	sub	r27, r27
    141c:	51 e1       	ldi	r21, 0x11	; 17
    141e:	07 c0       	rjmp	.+14     	; 0x142e <__udivmodhi4_ep>

00001420 <__udivmodhi4_loop>:
    1420:	aa 1f       	adc	r26, r26
    1422:	bb 1f       	adc	r27, r27
    1424:	a6 17       	cp	r26, r22
    1426:	b7 07       	cpc	r27, r23
    1428:	10 f0       	brcs	.+4      	; 0x142e <__udivmodhi4_ep>
    142a:	a6 1b       	sub	r26, r22
    142c:	b7 0b       	sbc	r27, r23

0000142e <__udivmodhi4_ep>:
    142e:	88 1f       	adc	r24, r24
    1430:	99 1f       	adc	r25, r25
    1432:	5a 95       	dec	r21
    1434:	a9 f7       	brne	.-22     	; 0x1420 <__udivmodhi4_loop>
    1436:	80 95       	com	r24
    1438:	90 95       	com	r25
    143a:	bc 01       	movw	r22, r24
    143c:	cd 01       	movw	r24, r26
    143e:	08 95       	ret

00001440 <atoi>:
    1440:	fc 01       	movw	r30, r24
    1442:	88 27       	eor	r24, r24
    1444:	99 27       	eor	r25, r25
    1446:	e8 94       	clt
    1448:	21 91       	ld	r18, Z+
    144a:	20 32       	cpi	r18, 0x20	; 32
    144c:	e9 f3       	breq	.-6      	; 0x1448 <atoi+0x8>
    144e:	29 30       	cpi	r18, 0x09	; 9
    1450:	10 f0       	brcs	.+4      	; 0x1456 <atoi+0x16>
    1452:	2e 30       	cpi	r18, 0x0E	; 14
    1454:	c8 f3       	brcs	.-14     	; 0x1448 <atoi+0x8>
    1456:	2b 32       	cpi	r18, 0x2B	; 43
    1458:	39 f0       	breq	.+14     	; 0x1468 <atoi+0x28>
    145a:	2d 32       	cpi	r18, 0x2D	; 45
    145c:	31 f4       	brne	.+12     	; 0x146a <atoi+0x2a>
    145e:	68 94       	set
    1460:	03 c0       	rjmp	.+6      	; 0x1468 <atoi+0x28>
    1462:	3e d0       	rcall	.+124    	; 0x14e0 <__mulhi_const_10>
    1464:	82 0f       	add	r24, r18
    1466:	91 1d       	adc	r25, r1
    1468:	21 91       	ld	r18, Z+
    146a:	20 53       	subi	r18, 0x30	; 48
    146c:	2a 30       	cpi	r18, 0x0A	; 10
    146e:	c8 f3       	brcs	.-14     	; 0x1462 <atoi+0x22>
    1470:	1e f4       	brtc	.+6      	; 0x1478 <atoi+0x38>
    1472:	90 95       	com	r25
    1474:	81 95       	neg	r24
    1476:	9f 4f       	sbci	r25, 0xFF	; 255
    1478:	08 95       	ret

0000147a <strtok>:
    147a:	40 e8       	ldi	r20, 0x80	; 128
    147c:	56 e0       	ldi	r21, 0x06	; 6
    147e:	09 c0       	rjmp	.+18     	; 0x1492 <strtok_r>

00001480 <memcpy>:
    1480:	fb 01       	movw	r30, r22
    1482:	dc 01       	movw	r26, r24
    1484:	02 c0       	rjmp	.+4      	; 0x148a <memcpy+0xa>
    1486:	01 90       	ld	r0, Z+
    1488:	0d 92       	st	X+, r0
    148a:	41 50       	subi	r20, 0x01	; 1
    148c:	50 40       	sbci	r21, 0x00	; 0
    148e:	d8 f7       	brcc	.-10     	; 0x1486 <memcpy+0x6>
    1490:	08 95       	ret

00001492 <strtok_r>:
    1492:	fa 01       	movw	r30, r20
    1494:	a1 91       	ld	r26, Z+
    1496:	b0 81       	ld	r27, Z
    1498:	00 97       	sbiw	r24, 0x00	; 0
    149a:	19 f4       	brne	.+6      	; 0x14a2 <strtok_r+0x10>
    149c:	10 97       	sbiw	r26, 0x00	; 0
    149e:	e1 f0       	breq	.+56     	; 0x14d8 <strtok_r+0x46>
    14a0:	cd 01       	movw	r24, r26
    14a2:	dc 01       	movw	r26, r24
    14a4:	cd 01       	movw	r24, r26
    14a6:	0d 90       	ld	r0, X+
    14a8:	00 20       	and	r0, r0
    14aa:	11 f4       	brne	.+4      	; 0x14b0 <strtok_r+0x1e>
    14ac:	c0 01       	movw	r24, r0
    14ae:	13 c0       	rjmp	.+38     	; 0x14d6 <strtok_r+0x44>
    14b0:	fb 01       	movw	r30, r22
    14b2:	21 91       	ld	r18, Z+
    14b4:	22 23       	and	r18, r18
    14b6:	19 f0       	breq	.+6      	; 0x14be <strtok_r+0x2c>
    14b8:	20 15       	cp	r18, r0
    14ba:	d9 f7       	brne	.-10     	; 0x14b2 <strtok_r+0x20>
    14bc:	f3 cf       	rjmp	.-26     	; 0x14a4 <strtok_r+0x12>
    14be:	fb 01       	movw	r30, r22
    14c0:	21 91       	ld	r18, Z+
    14c2:	20 15       	cp	r18, r0
    14c4:	19 f4       	brne	.+6      	; 0x14cc <strtok_r+0x3a>
    14c6:	1e 92       	st	-X, r1
    14c8:	11 96       	adiw	r26, 0x01	; 1
    14ca:	06 c0       	rjmp	.+12     	; 0x14d8 <strtok_r+0x46>
    14cc:	22 23       	and	r18, r18
    14ce:	c1 f7       	brne	.-16     	; 0x14c0 <strtok_r+0x2e>
    14d0:	0d 90       	ld	r0, X+
    14d2:	00 20       	and	r0, r0
    14d4:	a1 f7       	brne	.-24     	; 0x14be <strtok_r+0x2c>
    14d6:	d0 01       	movw	r26, r0
    14d8:	fa 01       	movw	r30, r20
    14da:	a1 93       	st	Z+, r26
    14dc:	b0 83       	st	Z, r27
    14de:	08 95       	ret

000014e0 <__mulhi_const_10>:
    14e0:	7a e0       	ldi	r23, 0x0A	; 10
    14e2:	97 9f       	mul	r25, r23
    14e4:	90 2d       	mov	r25, r0
    14e6:	87 9f       	mul	r24, r23
    14e8:	80 2d       	mov	r24, r0
    14ea:	91 0d       	add	r25, r1
    14ec:	11 24       	eor	r1, r1
    14ee:	08 95       	ret

000014f0 <fdevopen>:
    14f0:	0f 93       	push	r16
    14f2:	1f 93       	push	r17
    14f4:	cf 93       	push	r28
    14f6:	df 93       	push	r29
    14f8:	00 97       	sbiw	r24, 0x00	; 0
    14fa:	31 f4       	brne	.+12     	; 0x1508 <fdevopen+0x18>
    14fc:	61 15       	cp	r22, r1
    14fe:	71 05       	cpc	r23, r1
    1500:	19 f4       	brne	.+6      	; 0x1508 <fdevopen+0x18>
    1502:	80 e0       	ldi	r24, 0x00	; 0
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	39 c0       	rjmp	.+114    	; 0x157a <fdevopen+0x8a>
    1508:	8b 01       	movw	r16, r22
    150a:	ec 01       	movw	r28, r24
    150c:	6e e0       	ldi	r22, 0x0E	; 14
    150e:	70 e0       	ldi	r23, 0x00	; 0
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	dd d0       	rcall	.+442    	; 0x16d0 <calloc>
    1516:	fc 01       	movw	r30, r24
    1518:	89 2b       	or	r24, r25
    151a:	99 f3       	breq	.-26     	; 0x1502 <fdevopen+0x12>
    151c:	80 e8       	ldi	r24, 0x80	; 128
    151e:	83 83       	std	Z+3, r24	; 0x03
    1520:	01 15       	cp	r16, r1
    1522:	11 05       	cpc	r17, r1
    1524:	71 f0       	breq	.+28     	; 0x1542 <fdevopen+0x52>
    1526:	13 87       	std	Z+11, r17	; 0x0b
    1528:	02 87       	std	Z+10, r16	; 0x0a
    152a:	81 e8       	ldi	r24, 0x81	; 129
    152c:	83 83       	std	Z+3, r24	; 0x03
    152e:	80 91 98 07 	lds	r24, 0x0798
    1532:	90 91 99 07 	lds	r25, 0x0799
    1536:	89 2b       	or	r24, r25
    1538:	21 f4       	brne	.+8      	; 0x1542 <fdevopen+0x52>
    153a:	f0 93 99 07 	sts	0x0799, r31
    153e:	e0 93 98 07 	sts	0x0798, r30
    1542:	20 97       	sbiw	r28, 0x00	; 0
    1544:	c9 f0       	breq	.+50     	; 0x1578 <fdevopen+0x88>
    1546:	d1 87       	std	Z+9, r29	; 0x09
    1548:	c0 87       	std	Z+8, r28	; 0x08
    154a:	83 81       	ldd	r24, Z+3	; 0x03
    154c:	82 60       	ori	r24, 0x02	; 2
    154e:	83 83       	std	Z+3, r24	; 0x03
    1550:	80 91 9a 07 	lds	r24, 0x079A
    1554:	90 91 9b 07 	lds	r25, 0x079B
    1558:	89 2b       	or	r24, r25
    155a:	71 f4       	brne	.+28     	; 0x1578 <fdevopen+0x88>
    155c:	f0 93 9b 07 	sts	0x079B, r31
    1560:	e0 93 9a 07 	sts	0x079A, r30
    1564:	80 91 9c 07 	lds	r24, 0x079C
    1568:	90 91 9d 07 	lds	r25, 0x079D
    156c:	89 2b       	or	r24, r25
    156e:	21 f4       	brne	.+8      	; 0x1578 <fdevopen+0x88>
    1570:	f0 93 9d 07 	sts	0x079D, r31
    1574:	e0 93 9c 07 	sts	0x079C, r30
    1578:	cf 01       	movw	r24, r30
    157a:	df 91       	pop	r29
    157c:	cf 91       	pop	r28
    157e:	1f 91       	pop	r17
    1580:	0f 91       	pop	r16
    1582:	08 95       	ret

00001584 <fgetc>:
    1584:	cf 93       	push	r28
    1586:	df 93       	push	r29
    1588:	ec 01       	movw	r28, r24
    158a:	2b 81       	ldd	r18, Y+3	; 0x03
    158c:	20 ff       	sbrs	r18, 0
    158e:	33 c0       	rjmp	.+102    	; 0x15f6 <fgetc+0x72>
    1590:	26 ff       	sbrs	r18, 6
    1592:	0a c0       	rjmp	.+20     	; 0x15a8 <fgetc+0x24>
    1594:	2f 7b       	andi	r18, 0xBF	; 191
    1596:	2b 83       	std	Y+3, r18	; 0x03
    1598:	8e 81       	ldd	r24, Y+6	; 0x06
    159a:	9f 81       	ldd	r25, Y+7	; 0x07
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	9f 83       	std	Y+7, r25	; 0x07
    15a0:	8e 83       	std	Y+6, r24	; 0x06
    15a2:	8a 81       	ldd	r24, Y+2	; 0x02
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	29 c0       	rjmp	.+82     	; 0x15fa <fgetc+0x76>
    15a8:	22 ff       	sbrs	r18, 2
    15aa:	0f c0       	rjmp	.+30     	; 0x15ca <fgetc+0x46>
    15ac:	e8 81       	ld	r30, Y
    15ae:	f9 81       	ldd	r31, Y+1	; 0x01
    15b0:	80 81       	ld	r24, Z
    15b2:	08 2e       	mov	r0, r24
    15b4:	00 0c       	add	r0, r0
    15b6:	99 0b       	sbc	r25, r25
    15b8:	00 97       	sbiw	r24, 0x00	; 0
    15ba:	19 f4       	brne	.+6      	; 0x15c2 <fgetc+0x3e>
    15bc:	20 62       	ori	r18, 0x20	; 32
    15be:	2b 83       	std	Y+3, r18	; 0x03
    15c0:	1a c0       	rjmp	.+52     	; 0x15f6 <fgetc+0x72>
    15c2:	31 96       	adiw	r30, 0x01	; 1
    15c4:	f9 83       	std	Y+1, r31	; 0x01
    15c6:	e8 83       	st	Y, r30
    15c8:	0e c0       	rjmp	.+28     	; 0x15e6 <fgetc+0x62>
    15ca:	ea 85       	ldd	r30, Y+10	; 0x0a
    15cc:	fb 85       	ldd	r31, Y+11	; 0x0b
    15ce:	19 95       	eicall
    15d0:	97 ff       	sbrs	r25, 7
    15d2:	09 c0       	rjmp	.+18     	; 0x15e6 <fgetc+0x62>
    15d4:	2b 81       	ldd	r18, Y+3	; 0x03
    15d6:	01 96       	adiw	r24, 0x01	; 1
    15d8:	11 f0       	breq	.+4      	; 0x15de <fgetc+0x5a>
    15da:	80 e2       	ldi	r24, 0x20	; 32
    15dc:	01 c0       	rjmp	.+2      	; 0x15e0 <fgetc+0x5c>
    15de:	80 e1       	ldi	r24, 0x10	; 16
    15e0:	82 2b       	or	r24, r18
    15e2:	8b 83       	std	Y+3, r24	; 0x03
    15e4:	08 c0       	rjmp	.+16     	; 0x15f6 <fgetc+0x72>
    15e6:	2e 81       	ldd	r18, Y+6	; 0x06
    15e8:	3f 81       	ldd	r19, Y+7	; 0x07
    15ea:	2f 5f       	subi	r18, 0xFF	; 255
    15ec:	3f 4f       	sbci	r19, 0xFF	; 255
    15ee:	3f 83       	std	Y+7, r19	; 0x07
    15f0:	2e 83       	std	Y+6, r18	; 0x06
    15f2:	99 27       	eor	r25, r25
    15f4:	02 c0       	rjmp	.+4      	; 0x15fa <fgetc+0x76>
    15f6:	8f ef       	ldi	r24, 0xFF	; 255
    15f8:	9f ef       	ldi	r25, 0xFF	; 255
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	08 95       	ret

00001600 <fputc>:
    1600:	0f 93       	push	r16
    1602:	1f 93       	push	r17
    1604:	cf 93       	push	r28
    1606:	df 93       	push	r29
    1608:	fb 01       	movw	r30, r22
    160a:	23 81       	ldd	r18, Z+3	; 0x03
    160c:	21 fd       	sbrc	r18, 1
    160e:	03 c0       	rjmp	.+6      	; 0x1616 <fputc+0x16>
    1610:	8f ef       	ldi	r24, 0xFF	; 255
    1612:	9f ef       	ldi	r25, 0xFF	; 255
    1614:	28 c0       	rjmp	.+80     	; 0x1666 <fputc+0x66>
    1616:	22 ff       	sbrs	r18, 2
    1618:	16 c0       	rjmp	.+44     	; 0x1646 <fputc+0x46>
    161a:	46 81       	ldd	r20, Z+6	; 0x06
    161c:	57 81       	ldd	r21, Z+7	; 0x07
    161e:	24 81       	ldd	r18, Z+4	; 0x04
    1620:	35 81       	ldd	r19, Z+5	; 0x05
    1622:	42 17       	cp	r20, r18
    1624:	53 07       	cpc	r21, r19
    1626:	44 f4       	brge	.+16     	; 0x1638 <fputc+0x38>
    1628:	a0 81       	ld	r26, Z
    162a:	b1 81       	ldd	r27, Z+1	; 0x01
    162c:	9d 01       	movw	r18, r26
    162e:	2f 5f       	subi	r18, 0xFF	; 255
    1630:	3f 4f       	sbci	r19, 0xFF	; 255
    1632:	31 83       	std	Z+1, r19	; 0x01
    1634:	20 83       	st	Z, r18
    1636:	8c 93       	st	X, r24
    1638:	26 81       	ldd	r18, Z+6	; 0x06
    163a:	37 81       	ldd	r19, Z+7	; 0x07
    163c:	2f 5f       	subi	r18, 0xFF	; 255
    163e:	3f 4f       	sbci	r19, 0xFF	; 255
    1640:	37 83       	std	Z+7, r19	; 0x07
    1642:	26 83       	std	Z+6, r18	; 0x06
    1644:	10 c0       	rjmp	.+32     	; 0x1666 <fputc+0x66>
    1646:	eb 01       	movw	r28, r22
    1648:	09 2f       	mov	r16, r25
    164a:	18 2f       	mov	r17, r24
    164c:	00 84       	ldd	r0, Z+8	; 0x08
    164e:	f1 85       	ldd	r31, Z+9	; 0x09
    1650:	e0 2d       	mov	r30, r0
    1652:	19 95       	eicall
    1654:	89 2b       	or	r24, r25
    1656:	e1 f6       	brne	.-72     	; 0x1610 <fputc+0x10>
    1658:	8e 81       	ldd	r24, Y+6	; 0x06
    165a:	9f 81       	ldd	r25, Y+7	; 0x07
    165c:	01 96       	adiw	r24, 0x01	; 1
    165e:	9f 83       	std	Y+7, r25	; 0x07
    1660:	8e 83       	std	Y+6, r24	; 0x06
    1662:	81 2f       	mov	r24, r17
    1664:	90 2f       	mov	r25, r16
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	08 95       	ret

00001670 <puts>:
    1670:	0f 93       	push	r16
    1672:	1f 93       	push	r17
    1674:	cf 93       	push	r28
    1676:	df 93       	push	r29
    1678:	e0 91 9a 07 	lds	r30, 0x079A
    167c:	f0 91 9b 07 	lds	r31, 0x079B
    1680:	23 81       	ldd	r18, Z+3	; 0x03
    1682:	21 ff       	sbrs	r18, 1
    1684:	1b c0       	rjmp	.+54     	; 0x16bc <puts+0x4c>
    1686:	8c 01       	movw	r16, r24
    1688:	d0 e0       	ldi	r29, 0x00	; 0
    168a:	c0 e0       	ldi	r28, 0x00	; 0
    168c:	f8 01       	movw	r30, r16
    168e:	81 91       	ld	r24, Z+
    1690:	8f 01       	movw	r16, r30
    1692:	60 91 9a 07 	lds	r22, 0x079A
    1696:	70 91 9b 07 	lds	r23, 0x079B
    169a:	db 01       	movw	r26, r22
    169c:	18 96       	adiw	r26, 0x08	; 8
    169e:	ed 91       	ld	r30, X+
    16a0:	fc 91       	ld	r31, X
    16a2:	19 97       	sbiw	r26, 0x09	; 9
    16a4:	88 23       	and	r24, r24
    16a6:	31 f0       	breq	.+12     	; 0x16b4 <puts+0x44>
    16a8:	19 95       	eicall
    16aa:	89 2b       	or	r24, r25
    16ac:	79 f3       	breq	.-34     	; 0x168c <puts+0x1c>
    16ae:	df ef       	ldi	r29, 0xFF	; 255
    16b0:	cf ef       	ldi	r28, 0xFF	; 255
    16b2:	ec cf       	rjmp	.-40     	; 0x168c <puts+0x1c>
    16b4:	8a e0       	ldi	r24, 0x0A	; 10
    16b6:	19 95       	eicall
    16b8:	89 2b       	or	r24, r25
    16ba:	19 f0       	breq	.+6      	; 0x16c2 <puts+0x52>
    16bc:	8f ef       	ldi	r24, 0xFF	; 255
    16be:	9f ef       	ldi	r25, 0xFF	; 255
    16c0:	02 c0       	rjmp	.+4      	; 0x16c6 <puts+0x56>
    16c2:	8d 2f       	mov	r24, r29
    16c4:	9c 2f       	mov	r25, r28
    16c6:	df 91       	pop	r29
    16c8:	cf 91       	pop	r28
    16ca:	1f 91       	pop	r17
    16cc:	0f 91       	pop	r16
    16ce:	08 95       	ret

000016d0 <calloc>:
    16d0:	0f 93       	push	r16
    16d2:	1f 93       	push	r17
    16d4:	cf 93       	push	r28
    16d6:	df 93       	push	r29
    16d8:	86 9f       	mul	r24, r22
    16da:	80 01       	movw	r16, r0
    16dc:	87 9f       	mul	r24, r23
    16de:	10 0d       	add	r17, r0
    16e0:	96 9f       	mul	r25, r22
    16e2:	10 0d       	add	r17, r0
    16e4:	11 24       	eor	r1, r1
    16e6:	c8 01       	movw	r24, r16
    16e8:	0d d0       	rcall	.+26     	; 0x1704 <malloc>
    16ea:	ec 01       	movw	r28, r24
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	21 f0       	breq	.+8      	; 0x16f8 <calloc+0x28>
    16f0:	a8 01       	movw	r20, r16
    16f2:	60 e0       	ldi	r22, 0x00	; 0
    16f4:	70 e0       	ldi	r23, 0x00	; 0
    16f6:	33 d1       	rcall	.+614    	; 0x195e <memset>
    16f8:	ce 01       	movw	r24, r28
    16fa:	df 91       	pop	r29
    16fc:	cf 91       	pop	r28
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	08 95       	ret

00001704 <malloc>:
    1704:	cf 93       	push	r28
    1706:	df 93       	push	r29
    1708:	82 30       	cpi	r24, 0x02	; 2
    170a:	91 05       	cpc	r25, r1
    170c:	10 f4       	brcc	.+4      	; 0x1712 <malloc+0xe>
    170e:	82 e0       	ldi	r24, 0x02	; 2
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	e0 91 a0 07 	lds	r30, 0x07A0
    1716:	f0 91 a1 07 	lds	r31, 0x07A1
    171a:	20 e0       	ldi	r18, 0x00	; 0
    171c:	30 e0       	ldi	r19, 0x00	; 0
    171e:	c0 e0       	ldi	r28, 0x00	; 0
    1720:	d0 e0       	ldi	r29, 0x00	; 0
    1722:	30 97       	sbiw	r30, 0x00	; 0
    1724:	11 f1       	breq	.+68     	; 0x176a <malloc+0x66>
    1726:	40 81       	ld	r20, Z
    1728:	51 81       	ldd	r21, Z+1	; 0x01
    172a:	48 17       	cp	r20, r24
    172c:	59 07       	cpc	r21, r25
    172e:	c0 f0       	brcs	.+48     	; 0x1760 <malloc+0x5c>
    1730:	48 17       	cp	r20, r24
    1732:	59 07       	cpc	r21, r25
    1734:	61 f4       	brne	.+24     	; 0x174e <malloc+0x4a>
    1736:	82 81       	ldd	r24, Z+2	; 0x02
    1738:	93 81       	ldd	r25, Z+3	; 0x03
    173a:	20 97       	sbiw	r28, 0x00	; 0
    173c:	19 f0       	breq	.+6      	; 0x1744 <malloc+0x40>
    173e:	9b 83       	std	Y+3, r25	; 0x03
    1740:	8a 83       	std	Y+2, r24	; 0x02
    1742:	2b c0       	rjmp	.+86     	; 0x179a <malloc+0x96>
    1744:	90 93 a1 07 	sts	0x07A1, r25
    1748:	80 93 a0 07 	sts	0x07A0, r24
    174c:	26 c0       	rjmp	.+76     	; 0x179a <malloc+0x96>
    174e:	21 15       	cp	r18, r1
    1750:	31 05       	cpc	r19, r1
    1752:	19 f0       	breq	.+6      	; 0x175a <malloc+0x56>
    1754:	42 17       	cp	r20, r18
    1756:	53 07       	cpc	r21, r19
    1758:	18 f4       	brcc	.+6      	; 0x1760 <malloc+0x5c>
    175a:	9a 01       	movw	r18, r20
    175c:	be 01       	movw	r22, r28
    175e:	df 01       	movw	r26, r30
    1760:	ef 01       	movw	r28, r30
    1762:	02 80       	ldd	r0, Z+2	; 0x02
    1764:	f3 81       	ldd	r31, Z+3	; 0x03
    1766:	e0 2d       	mov	r30, r0
    1768:	dc cf       	rjmp	.-72     	; 0x1722 <malloc+0x1e>
    176a:	21 15       	cp	r18, r1
    176c:	31 05       	cpc	r19, r1
    176e:	09 f1       	breq	.+66     	; 0x17b2 <malloc+0xae>
    1770:	28 1b       	sub	r18, r24
    1772:	39 0b       	sbc	r19, r25
    1774:	24 30       	cpi	r18, 0x04	; 4
    1776:	31 05       	cpc	r19, r1
    1778:	90 f4       	brcc	.+36     	; 0x179e <malloc+0x9a>
    177a:	12 96       	adiw	r26, 0x02	; 2
    177c:	8d 91       	ld	r24, X+
    177e:	9c 91       	ld	r25, X
    1780:	13 97       	sbiw	r26, 0x03	; 3
    1782:	61 15       	cp	r22, r1
    1784:	71 05       	cpc	r23, r1
    1786:	21 f0       	breq	.+8      	; 0x1790 <malloc+0x8c>
    1788:	fb 01       	movw	r30, r22
    178a:	93 83       	std	Z+3, r25	; 0x03
    178c:	82 83       	std	Z+2, r24	; 0x02
    178e:	04 c0       	rjmp	.+8      	; 0x1798 <malloc+0x94>
    1790:	90 93 a1 07 	sts	0x07A1, r25
    1794:	80 93 a0 07 	sts	0x07A0, r24
    1798:	fd 01       	movw	r30, r26
    179a:	32 96       	adiw	r30, 0x02	; 2
    179c:	44 c0       	rjmp	.+136    	; 0x1826 <malloc+0x122>
    179e:	fd 01       	movw	r30, r26
    17a0:	e2 0f       	add	r30, r18
    17a2:	f3 1f       	adc	r31, r19
    17a4:	81 93       	st	Z+, r24
    17a6:	91 93       	st	Z+, r25
    17a8:	22 50       	subi	r18, 0x02	; 2
    17aa:	31 09       	sbc	r19, r1
    17ac:	2d 93       	st	X+, r18
    17ae:	3c 93       	st	X, r19
    17b0:	3a c0       	rjmp	.+116    	; 0x1826 <malloc+0x122>
    17b2:	20 91 9e 07 	lds	r18, 0x079E
    17b6:	30 91 9f 07 	lds	r19, 0x079F
    17ba:	23 2b       	or	r18, r19
    17bc:	41 f4       	brne	.+16     	; 0x17ce <malloc+0xca>
    17be:	20 91 04 02 	lds	r18, 0x0204
    17c2:	30 91 05 02 	lds	r19, 0x0205
    17c6:	30 93 9f 07 	sts	0x079F, r19
    17ca:	20 93 9e 07 	sts	0x079E, r18
    17ce:	20 91 02 02 	lds	r18, 0x0202
    17d2:	30 91 03 02 	lds	r19, 0x0203
    17d6:	21 15       	cp	r18, r1
    17d8:	31 05       	cpc	r19, r1
    17da:	41 f4       	brne	.+16     	; 0x17ec <malloc+0xe8>
    17dc:	2d b7       	in	r18, 0x3d	; 61
    17de:	3e b7       	in	r19, 0x3e	; 62
    17e0:	40 91 06 02 	lds	r20, 0x0206
    17e4:	50 91 07 02 	lds	r21, 0x0207
    17e8:	24 1b       	sub	r18, r20
    17ea:	35 0b       	sbc	r19, r21
    17ec:	e0 91 9e 07 	lds	r30, 0x079E
    17f0:	f0 91 9f 07 	lds	r31, 0x079F
    17f4:	e2 17       	cp	r30, r18
    17f6:	f3 07       	cpc	r31, r19
    17f8:	a0 f4       	brcc	.+40     	; 0x1822 <malloc+0x11e>
    17fa:	2e 1b       	sub	r18, r30
    17fc:	3f 0b       	sbc	r19, r31
    17fe:	28 17       	cp	r18, r24
    1800:	39 07       	cpc	r19, r25
    1802:	78 f0       	brcs	.+30     	; 0x1822 <malloc+0x11e>
    1804:	ac 01       	movw	r20, r24
    1806:	4e 5f       	subi	r20, 0xFE	; 254
    1808:	5f 4f       	sbci	r21, 0xFF	; 255
    180a:	24 17       	cp	r18, r20
    180c:	35 07       	cpc	r19, r21
    180e:	48 f0       	brcs	.+18     	; 0x1822 <malloc+0x11e>
    1810:	4e 0f       	add	r20, r30
    1812:	5f 1f       	adc	r21, r31
    1814:	50 93 9f 07 	sts	0x079F, r21
    1818:	40 93 9e 07 	sts	0x079E, r20
    181c:	81 93       	st	Z+, r24
    181e:	91 93       	st	Z+, r25
    1820:	02 c0       	rjmp	.+4      	; 0x1826 <malloc+0x122>
    1822:	e0 e0       	ldi	r30, 0x00	; 0
    1824:	f0 e0       	ldi	r31, 0x00	; 0
    1826:	cf 01       	movw	r24, r30
    1828:	df 91       	pop	r29
    182a:	cf 91       	pop	r28
    182c:	08 95       	ret

0000182e <free>:
    182e:	0f 93       	push	r16
    1830:	1f 93       	push	r17
    1832:	cf 93       	push	r28
    1834:	df 93       	push	r29
    1836:	00 97       	sbiw	r24, 0x00	; 0
    1838:	09 f4       	brne	.+2      	; 0x183c <free+0xe>
    183a:	8c c0       	rjmp	.+280    	; 0x1954 <free+0x126>
    183c:	fc 01       	movw	r30, r24
    183e:	32 97       	sbiw	r30, 0x02	; 2
    1840:	13 82       	std	Z+3, r1	; 0x03
    1842:	12 82       	std	Z+2, r1	; 0x02
    1844:	00 91 a0 07 	lds	r16, 0x07A0
    1848:	10 91 a1 07 	lds	r17, 0x07A1
    184c:	01 15       	cp	r16, r1
    184e:	11 05       	cpc	r17, r1
    1850:	81 f4       	brne	.+32     	; 0x1872 <free+0x44>
    1852:	20 81       	ld	r18, Z
    1854:	31 81       	ldd	r19, Z+1	; 0x01
    1856:	82 0f       	add	r24, r18
    1858:	93 1f       	adc	r25, r19
    185a:	20 91 9e 07 	lds	r18, 0x079E
    185e:	30 91 9f 07 	lds	r19, 0x079F
    1862:	28 17       	cp	r18, r24
    1864:	39 07       	cpc	r19, r25
    1866:	79 f5       	brne	.+94     	; 0x18c6 <free+0x98>
    1868:	f0 93 9f 07 	sts	0x079F, r31
    186c:	e0 93 9e 07 	sts	0x079E, r30
    1870:	71 c0       	rjmp	.+226    	; 0x1954 <free+0x126>
    1872:	d8 01       	movw	r26, r16
    1874:	40 e0       	ldi	r20, 0x00	; 0
    1876:	50 e0       	ldi	r21, 0x00	; 0
    1878:	ae 17       	cp	r26, r30
    187a:	bf 07       	cpc	r27, r31
    187c:	50 f4       	brcc	.+20     	; 0x1892 <free+0x64>
    187e:	12 96       	adiw	r26, 0x02	; 2
    1880:	2d 91       	ld	r18, X+
    1882:	3c 91       	ld	r19, X
    1884:	13 97       	sbiw	r26, 0x03	; 3
    1886:	ad 01       	movw	r20, r26
    1888:	21 15       	cp	r18, r1
    188a:	31 05       	cpc	r19, r1
    188c:	09 f1       	breq	.+66     	; 0x18d0 <free+0xa2>
    188e:	d9 01       	movw	r26, r18
    1890:	f3 cf       	rjmp	.-26     	; 0x1878 <free+0x4a>
    1892:	9d 01       	movw	r18, r26
    1894:	da 01       	movw	r26, r20
    1896:	33 83       	std	Z+3, r19	; 0x03
    1898:	22 83       	std	Z+2, r18	; 0x02
    189a:	60 81       	ld	r22, Z
    189c:	71 81       	ldd	r23, Z+1	; 0x01
    189e:	86 0f       	add	r24, r22
    18a0:	97 1f       	adc	r25, r23
    18a2:	82 17       	cp	r24, r18
    18a4:	93 07       	cpc	r25, r19
    18a6:	69 f4       	brne	.+26     	; 0x18c2 <free+0x94>
    18a8:	ec 01       	movw	r28, r24
    18aa:	28 81       	ld	r18, Y
    18ac:	39 81       	ldd	r19, Y+1	; 0x01
    18ae:	26 0f       	add	r18, r22
    18b0:	37 1f       	adc	r19, r23
    18b2:	2e 5f       	subi	r18, 0xFE	; 254
    18b4:	3f 4f       	sbci	r19, 0xFF	; 255
    18b6:	31 83       	std	Z+1, r19	; 0x01
    18b8:	20 83       	st	Z, r18
    18ba:	8a 81       	ldd	r24, Y+2	; 0x02
    18bc:	9b 81       	ldd	r25, Y+3	; 0x03
    18be:	93 83       	std	Z+3, r25	; 0x03
    18c0:	82 83       	std	Z+2, r24	; 0x02
    18c2:	45 2b       	or	r20, r21
    18c4:	29 f4       	brne	.+10     	; 0x18d0 <free+0xa2>
    18c6:	f0 93 a1 07 	sts	0x07A1, r31
    18ca:	e0 93 a0 07 	sts	0x07A0, r30
    18ce:	42 c0       	rjmp	.+132    	; 0x1954 <free+0x126>
    18d0:	13 96       	adiw	r26, 0x03	; 3
    18d2:	fc 93       	st	X, r31
    18d4:	ee 93       	st	-X, r30
    18d6:	12 97       	sbiw	r26, 0x02	; 2
    18d8:	ed 01       	movw	r28, r26
    18da:	49 91       	ld	r20, Y+
    18dc:	59 91       	ld	r21, Y+
    18de:	9e 01       	movw	r18, r28
    18e0:	24 0f       	add	r18, r20
    18e2:	35 1f       	adc	r19, r21
    18e4:	e2 17       	cp	r30, r18
    18e6:	f3 07       	cpc	r31, r19
    18e8:	71 f4       	brne	.+28     	; 0x1906 <free+0xd8>
    18ea:	80 81       	ld	r24, Z
    18ec:	91 81       	ldd	r25, Z+1	; 0x01
    18ee:	84 0f       	add	r24, r20
    18f0:	95 1f       	adc	r25, r21
    18f2:	02 96       	adiw	r24, 0x02	; 2
    18f4:	11 96       	adiw	r26, 0x01	; 1
    18f6:	9c 93       	st	X, r25
    18f8:	8e 93       	st	-X, r24
    18fa:	82 81       	ldd	r24, Z+2	; 0x02
    18fc:	93 81       	ldd	r25, Z+3	; 0x03
    18fe:	13 96       	adiw	r26, 0x03	; 3
    1900:	9c 93       	st	X, r25
    1902:	8e 93       	st	-X, r24
    1904:	12 97       	sbiw	r26, 0x02	; 2
    1906:	e0 e0       	ldi	r30, 0x00	; 0
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	d8 01       	movw	r26, r16
    190c:	12 96       	adiw	r26, 0x02	; 2
    190e:	8d 91       	ld	r24, X+
    1910:	9c 91       	ld	r25, X
    1912:	13 97       	sbiw	r26, 0x03	; 3
    1914:	00 97       	sbiw	r24, 0x00	; 0
    1916:	19 f0       	breq	.+6      	; 0x191e <free+0xf0>
    1918:	f8 01       	movw	r30, r16
    191a:	8c 01       	movw	r16, r24
    191c:	f6 cf       	rjmp	.-20     	; 0x190a <free+0xdc>
    191e:	8d 91       	ld	r24, X+
    1920:	9c 91       	ld	r25, X
    1922:	98 01       	movw	r18, r16
    1924:	2e 5f       	subi	r18, 0xFE	; 254
    1926:	3f 4f       	sbci	r19, 0xFF	; 255
    1928:	82 0f       	add	r24, r18
    192a:	93 1f       	adc	r25, r19
    192c:	20 91 9e 07 	lds	r18, 0x079E
    1930:	30 91 9f 07 	lds	r19, 0x079F
    1934:	28 17       	cp	r18, r24
    1936:	39 07       	cpc	r19, r25
    1938:	69 f4       	brne	.+26     	; 0x1954 <free+0x126>
    193a:	30 97       	sbiw	r30, 0x00	; 0
    193c:	29 f4       	brne	.+10     	; 0x1948 <free+0x11a>
    193e:	10 92 a1 07 	sts	0x07A1, r1
    1942:	10 92 a0 07 	sts	0x07A0, r1
    1946:	02 c0       	rjmp	.+4      	; 0x194c <free+0x11e>
    1948:	13 82       	std	Z+3, r1	; 0x03
    194a:	12 82       	std	Z+2, r1	; 0x02
    194c:	10 93 9f 07 	sts	0x079F, r17
    1950:	00 93 9e 07 	sts	0x079E, r16
    1954:	df 91       	pop	r29
    1956:	cf 91       	pop	r28
    1958:	1f 91       	pop	r17
    195a:	0f 91       	pop	r16
    195c:	08 95       	ret

0000195e <memset>:
    195e:	dc 01       	movw	r26, r24
    1960:	01 c0       	rjmp	.+2      	; 0x1964 <memset+0x6>
    1962:	6d 93       	st	X+, r22
    1964:	41 50       	subi	r20, 0x01	; 1
    1966:	50 40       	sbci	r21, 0x00	; 0
    1968:	e0 f7       	brcc	.-8      	; 0x1962 <memset+0x4>
    196a:	08 95       	ret

0000196c <_exit>:
    196c:	f8 94       	cli

0000196e <__stop_program>:
    196e:	ff cf       	rjmp	.-2      	; 0x196e <__stop_program>
